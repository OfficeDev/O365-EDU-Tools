{
	"info": {
		"_postman_id": "be9d6aac-a69e-4112-8a46-438b911e0b08",
		"name": "OneRoster V1.1-OAuth1a",
		"description": "OneRosterÂ® API version 1.1 spec is availble here: \nhttps://www.imsglobal.org/oneroster-v11-final-specification",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "APIs required for SDS",
			"item": [
				{
					"name": "Get Schools",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "caabe21d-c66c-49e2-91bf-7decc9273f5b",
								"exec": [
									"tests[\"Get Schools\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    if (data.schools !== null && data.schools !== undefined)",
									"    {",
									"        pm.environment.set(\"school_id\", data.schools[0].sourcedId);",
									"        console.log(\"School ID set to: \" + pm.variables.get(\"school_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else if (data.orgs !== null && data.orgs !== undefined)",
									"    {",
									"        pm.environment.set(\"school_id\", data.orgs[0].sourcedId);",
									"        console.log(\"School ID set to: \" + pm.variables.get(\"school_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else",
									"    {",
									"        tests[\"Parse response\"] = false;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/schools?offset=0&limit=100&filter=status='active'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"schools"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active'"
								}
							]
						},
						"description": "Gets a page of schools"
					},
					"response": []
				},
				{
					"name": "Get Classes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a8baee6-9e96-4de4-9cca-21d328886665",
								"exec": [
									"tests[\"Get Classes\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    pm.environment.set(\"class_id\", data.classes[0].sourcedId);",
									"    console.log(\"Class ID set to: \" + pm.variables.get(\"class_id\"));",
									"    ",
									"    pm.environment.set(\"school_id\", data.classes[0].school.sourcedId);",
									"    console.log(\"School ID set to: \" + pm.variables.get(\"school_id\"));",
									"    ",
									"    tests[\"Parse response\"] = true;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes?offset=0&limit=100&filter=status='active'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active'"
								}
							]
						},
						"description": "Gets a page of classes"
					},
					"response": []
				},
				{
					"name": "Get Students",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a05bbb66-be64-4261-92d8-b9f2b5222bf8",
								"exec": [
									"tests[\"Get Students\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    if (data.students !== null && data.students !== undefined)",
									"    {",
									"        pm.environment.set(\"student_id\", data.students[0].sourcedId);",
									"        console.log(\"Student ID set to: \" + pm.variables.get(\"student_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else if (data.users !== null && data.users !== undefined)",
									"    {",
									"        pm.environment.set(\"student_id\", data.users[0].sourcedId);",
									"        console.log(\"Student ID set to: \" + pm.variables.get(\"student_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else",
									"    {",
									"        tests[\"Parse response\"] = false;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/students?offset=0&limit=100",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"students"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								}
							]
						},
						"description": "Gets a page of students."
					},
					"response": []
				},
				{
					"name": "Get Teachers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc157692-107c-413e-9ad6-a8ff7ccbbeb0",
								"exec": [
									"tests[\"Get Teachers\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    if (data.teachers !== null && data.teachers !== undefined)",
									"    {",
									"        pm.environment.set(\"teacher_id\", data.teachers[0].sourcedId);",
									"        console.log(\"Teacher ID set to: \" + pm.variables.get(\"teacher_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else if (data.users !== null && data.users !== undefined)",
									"    {",
									"        pm.environment.set(\"teacher_id\", data.users[0].sourcedId);",
									"        console.log(\"Teacher ID set to: \" + pm.variables.get(\"teacher_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else",
									"    {",
									"        tests[\"Parse response\"] = false;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/teachers?offset=0&limit=100&filter=status='active'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"teachers"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of teachers."
					},
					"response": []
				},
				{
					"name": "Get Student Enrollments of a School",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d063039-0d8d-492f-bca2-8756cc36c08c",
								"exec": [
									"tests[\"Get Student Enrollments\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/schools/{{school_id}}/enrollments?offset=0&limit=100&filter=role='student'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"schools",
								"{{school_id}}",
								"enrollments"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "role='student'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of enrollments"
					},
					"response": []
				},
				{
					"name": "Get Teacher Enrollments of a School",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d063039-0d8d-492f-bca2-8756cc36c08c",
								"exec": [
									"tests[\"Get Teacher Enrollments\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/schools/{{school_id}}/enrollments?offset=0&limit=100&filter=role='teacher'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"schools",
								"{{school_id}}",
								"enrollments"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "role='teacher'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of enrollments"
					},
					"response": []
				},
				{
					"name": "Get Academic Sessions (Terms)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af65a0c6-66d1-499f-af02-b813724afca7",
								"exec": [
									"tests[\"Get Academic Sessions\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/academicSessions?offset=0&limit=100",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"academicSessions"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active'",
									"description": "Filters for active records",
									"disabled": true
								}
							]
						},
						"description": "Gets a page of academic sessions. Academic sessions can be of type \"School Year\", Term\", \"Semester\", \"GradingPeriod\""
					},
					"response": []
				},
				{
					"name": "Get Active Schools Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "caabe21d-c66c-49e2-91bf-7decc9273f5b",
								"exec": [
									"tests[\"Get active schools delta\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    if (data.schools !== null && data.schools !== undefined)",
									"    {",
									"        pm.environment.set(\"school_id\", data.schools[0].sourcedId);",
									"        console.log(\"School ID set to: \" + pm.variables.get(\"school_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else if (data.orgs !== null && data.orgs !== undefined)",
									"    {",
									"        pm.environment.set(\"school_id\", data.orgs[0].sourcedId);",
									"        console.log(\"School ID set to: \" + pm.variables.get(\"school_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else",
									"    {",
									"        tests[\"Parse response\"] = false;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/schools?offset=0&limit=100&filter=status='active' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"schools"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of schools"
					},
					"response": []
				},
				{
					"name": "Get Active Classes Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a8baee6-9e96-4de4-9cca-21d328886665",
								"exec": [
									"tests[\"Get Active Classes Delta\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    pm.environment.set(\"class_id\", data.classes[0].sourcedId);",
									"    console.log(\"Class ID set to: \" + pm.variables.get(\"class_id\"));",
									"    ",
									"    pm.environment.set(\"school_id\", data.classes[0].school.sourcedId);",
									"    console.log(\"School ID set to: \" + pm.variables.get(\"school_id\"));",
									"    ",
									"    tests[\"Parse response\"] = true;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes?offset=0&limit=100&filter=status='active' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of classes"
					},
					"response": []
				},
				{
					"name": "Get Active Students Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a05bbb66-be64-4261-92d8-b9f2b5222bf8",
								"exec": [
									"tests[\"Get Active Students Delta\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    if (data.students !== null && data.students !== undefined)",
									"    {",
									"        pm.environment.set(\"student_id\", data.students[0].sourcedId);",
									"        console.log(\"Student ID set to: \" + pm.variables.get(\"student_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else if (data.users !== null && data.users !== undefined)",
									"    {",
									"        pm.environment.set(\"student_id\", data.users[0].sourcedId);",
									"        console.log(\"Student ID set to: \" + pm.variables.get(\"student_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else",
									"    {",
									"        tests[\"Parse response\"] = false;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/students?offset=0&limit=100&filter=status='active' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"students"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of students."
					},
					"response": []
				},
				{
					"name": "Get Active Teachers Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc157692-107c-413e-9ad6-a8ff7ccbbeb0",
								"exec": [
									"tests[\"Get Active Teachers Delta\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    if (data.teachers !== null && data.teachers !== undefined)",
									"    {",
									"        pm.environment.set(\"teacher_id\", data.teachers[0].sourcedId);",
									"        console.log(\"Teacher ID set to: \" + pm.variables.get(\"teacher_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else if (data.users !== null && data.users !== undefined)",
									"    {",
									"        pm.environment.set(\"teacher_id\", data.users[0].sourcedId);",
									"        console.log(\"Teacher ID set to: \" + pm.variables.get(\"teacher_id\"));",
									"        tests[\"Parse response\"] = true;",
									"    }",
									"    else",
									"    {",
									"        tests[\"Parse response\"] = false;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/teachers?offset=0&limit=100&filter=status='active'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"teachers"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of teachers."
					},
					"response": []
				},
				{
					"name": "Get Student Enrollments Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d063039-0d8d-492f-bca2-8756cc36c08c",
								"exec": [
									"tests[\"Get Student Enrollments Delta\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/schools/{{school_id}}/enrollments?offset=0&limit=100&filter=role='student' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"schools",
								"{{school_id}}",
								"enrollments"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "role='student' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of enrollments"
					},
					"response": []
				},
				{
					"name": "Get Teacher Enrollment Delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d063039-0d8d-492f-bca2-8756cc36c08c",
								"exec": [
									"tests[\"Get Teacher Enrollments Delta\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/schools/{{school_id}}/enrollments?offset=0&limit=100&filter=role='teacher' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"schools",
								"{{school_id}}",
								"enrollments"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "role='teacher' AND dateLastModified>'2016-01-01T01:01:01.111Z'",
									"description": "Filters for active records"
								}
							]
						},
						"description": "Gets a page of enrollments"
					},
					"response": []
				},
				{
					"name": "Get School by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da4daa74-78b8-4cbf-994a-49037a3b66b7",
								"exec": [
									"tests[\"Get School by ID\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/schools/{{school_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"schools",
								"{{school_id}}"
							]
						},
						"description": "Gets a school by ID"
					},
					"response": []
				},
				{
					"name": "Get Class by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d628ac07-fa53-4a3d-8f88-fe7772bddca1",
								"exec": [
									"tests[\"Get Class by ID\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes/{{class_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes",
								"{{class_id}}"
							]
						},
						"description": "Gets a class by ID"
					},
					"response": []
				},
				{
					"name": "Get Student by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "621bb0f6-8a44-4003-894c-463fb686e6d3",
								"exec": [
									"tests[\"Get Student by ID\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/students/{{student_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"students",
								"{{student_id}}"
							]
						},
						"description": "Gets a student by ID"
					},
					"response": []
				},
				{
					"name": "Get Teacher by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfe2c5d4-0467-441f-8467-b5b4f094ff0d",
								"exec": [
									"tests[\"Get Teacher by ID\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/teachers/{{teacher_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"teachers",
								"{{teacher_id}}"
							]
						},
						"description": "Gets a teacher by ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "APIs used for Debugging",
			"item": [
				{
					"name": "Get Courses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/courses?offset=0&limit=100",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"courses"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								},
								{
									"key": "filter",
									"value": "status='active'",
									"description": "Filters for active records",
									"disabled": true
								}
							]
						},
						"description": "Gets a page of courses"
					},
					"response": []
				},
				{
					"name": "Get Student Enrollments of a Class",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/{{class_id}}/enrollments?filter=role='student' AND status='active'&offset=0&limit=100",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"{{class_id}}",
								"enrollments"
							],
							"query": [
								{
									"key": "filter",
									"value": "role='student' AND status='active'",
									"description": "Filters for active student enrollments"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								}
							]
						},
						"description": "Gets a page of enrollments"
					},
					"response": []
				},
				{
					"name": "Get Teacher Enrollments of a Class",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/{{class_id}}/enrollments?filter=role='teacher' AND status='active'&offset=0&limit=100",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"{{class_id}}",
								"enrollments"
							],
							"query": [
								{
									"key": "filter",
									"value": "role='teacher' AND status='active'",
									"description": "Filters for active teacher enrollments"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								}
							]
						},
						"description": "Gets a page of enrollments"
					},
					"response": []
				},
				{
					"name": "Get Student's Classes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/students/{{student_id}}/classes?offset=0&limit=100",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"students",
								"{{student_id}}",
								"classes"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								}
							]
						},
						"description": "Gets a page of classes"
					},
					"response": []
				},
				{
					"name": "Get Teacher's Classes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/teachers/{{teacher_id}}/classes?offset=0&limit=100",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"teachers",
								"{{teacher_id}}",
								"classes"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The index of the first record to return. (zero indexed)"
								},
								{
									"key": "limit",
									"value": "100",
									"description": "Number of results to return from selected index"
								}
							]
						},
						"description": "Gets a page of classes"
					},
					"response": []
				},
				{
					"name": "Search User by Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/users?filter=givenName='Smith' AND familyName='Azure'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"users"
							],
							"query": [
								{
									"key": "filter",
									"value": "givenName='Smith' AND familyName='Azure'"
								},
								{
									"key": "filter",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Gets a student by ID"
					},
					"response": []
				},
				{
					"name": "Search User by Username or Email",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/users?filter=username='stud1' OR email~'stud1'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"users"
							],
							"query": [
								{
									"key": "filter",
									"value": "username='stud1' OR email~'stud1'"
								},
								{
									"key": "filter",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Gets a student by ID"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4b96751c-7d08-4d3d-a8b9-45d9326ef53f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1ad3de83-97d1-4333-8e42-71ae383a12bf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "APIs required for GradeSync",
			"item": [
				{
					"name": "Get User by Email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "eeb871b9-733f-40d2-be10-17060729c645",
								"exec": [
									"// Expects Teacher Email to be provided as environment variable\r",
									"if (!pm.environment.get(\"TeacherEmailAddress\"))\r",
									"{\r",
									"    console.log(\"Missing Teacher Email Address, It is required to be added in pm.environment\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b56eea01-dd56-4c61-8c89-dd788311fa06",
								"exec": [
									"tests[\"Get User from Email\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/users?filter=email='{{TeacherEmailAddress}}'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"users"
							],
							"query": [
								{
									"key": "filter",
									"value": "email='{{TeacherEmailAddress}}'"
								}
							]
						},
						"description": "Gets a user by email"
					},
					"response": []
				},
				{
					"name": "Get Teacher by Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "339ede44-7e5e-4d6c-b391-57e5ffa4f0e5",
								"exec": [
									"tests[\"Get Teacher from Email\"] = responseCode.code === 200;",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    tests[\"Parse Teacher ID\"] = false;",
									"    if (data.teachers)",
									"    {",
									"        pm.environment.set(\"teacher_id\", data.teachers[0].sourcedId);",
									"        console.log(\"Teacher ID set to: \" + pm.variables.get(\"teacher_id\"));",
									"        tests[\"Parse Teacher ID\"] = true;",
									"    }",
									"    else if (data.users)",
									"    {",
									"        pm.environment.set(\"teacher_id\", data.users[0].sourcedId);",
									"        console.log(\"Teacher ID set to: \" + pm.variables.get(\"teacher_id\"));",
									"        tests[\"Parse Teacher ID\"] = true;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c232bfed-23e6-452f-8315-d70c6549fac0",
								"exec": [
									"// Expects Teacher Email to be provided as environment variable\r",
									"if (!pm.environment.get(\"TeacherEmailAddress\"))\r",
									"{\r",
									"    console.log(\"Missing Teacher Email Address, It is required to be added in pm.environment\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/teachers?filter=email='{{TeacherEmailAddress}}'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"teachers"
							],
							"query": [
								{
									"key": "filter",
									"value": "email='{{TeacherEmailAddress}}'"
								}
							]
						},
						"description": "Gets a teacher based on their email."
					},
					"response": []
				},
				{
					"name": "Get Classes For Teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"tests[\"Get Classes for Teacher\"] = responseCode.code === 200;",
									"",
									"var data = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    tests[\"Parse Class ID\"] = false;",
									"    if(data.classes)",
									"    {",
									"        pm.environment.set(\"class_id\", data.classes[0].sourcedId);",
									"        console.log(\"Class ID set to: \" + pm.variables.get(\"class_id\"));        ",
									"        tests[\"Parse Class ID\"] = true;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f1ec2668-dd3b-48b3-9b1f-1c74fa1605d1",
								"exec": [
									"if (pm.environment.get(\"teacher_id\"))\r",
									"{\r",
									"    console.log(\"Missing Teacher Id, Please execute GradeSync Collection Requests in order to ensure it is set\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/teachers/{{teacher_id}}/classes",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"teachers",
								"{{teacher_id}}",
								"classes"
							]
						},
						"description": "Gets a page of classes for a given teacher id."
					},
					"response": []
				},
				{
					"name": "Get Class For Teacher by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"tests[\"Get Class for Teacher by ID\"] = responseCode.code === 200;",
									"",
									"const jsonData = JSON.parse(responseBody);",
									"pm.test(\"Classes contain Class Id\", () => {    ",
									"    pm.expect(jsonData).to.have.key('classes');",
									"    pm.expect(jsonData.classes)",
									"        .to.be.an('array')",
									"        .to.have.lengthOf(1);",
									"    ",
									"    const classId = pm.environment.get(\"class_id\");",
									"    pm.expect(jsonData.classes[0].sourcedId).to.eql(classId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3aeb060d-e8ee-484c-b21a-f736ef51440d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/teachers/{{teacher_id}}/classes?filter=sourcedId='{{class_id}}'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"teachers",
								"{{teacher_id}}",
								"classes"
							],
							"query": [
								{
									"key": "filter",
									"value": "sourcedId='{{class_id}}'"
								}
							]
						},
						"description": "Get details for a specific class for a teacher based on class_id."
					},
					"response": []
				},
				{
					"name": "Get Teachers For Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"tests[\"Get Teachers For Class\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5e8d3b87-ccbf-4711-aff9-1b790093411a",
								"exec": [
									"if (pm.environment.get(\"class_id\"))\r",
									"{\r",
									"    console.log(\"Missing Class Id, Please execute GradeSync Collection Requests in order to ensure it is set\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes/{{class_id}}/teachers",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes",
								"{{class_id}}",
								"teachers"
							]
						},
						"description": "Gets a page of teachers for a class_id"
					},
					"response": []
				},
				{
					"name": "Get Students For Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"tests[\"Get Students For Class\"] = responseCode.code === 200;\r",
									"var data = JSON.parse(responseBody);\r",
									"if(responseCode.code === 200)\r",
									"{\r",
									"    tests[\"Parse Student ID\"] = false;\r",
									"    if (data.students)\r",
									"    {\r",
									"        pm.environment.set(\"student_id\", data.students[0].sourcedId);\r",
									"        console.log(\"Student ID set to: \" + pm.variables.get(\"student_id\"));\r",
									"        tests[\"Parse Student ID\"] = true;\r",
									"    }\r",
									"    else if (data.users)\r",
									"    {\r",
									"        pm.environment.set(\"student_id\", data.users[0].sourcedId);\r",
									"        console.log(\"Student ID set to: \" + pm.variables.get(\"student_id\"));\r",
									"        tests[\"Parse Student ID\"] = true;\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "52cb3eef-b11a-4c02-883a-190f4ffd1b53",
								"exec": [
									"if (pm.environment.get(\"class_id\"))\r",
									"{\r",
									"    console.log(\"Missing Class Id, Please execute GradeSync Collection Requests in order to ensure it is set\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes/{{class_id}}/students",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes",
								"{{class_id}}",
								"students"
							]
						},
						"description": "Gets a page of teachers for a class_id"
					},
					"response": []
				},
				{
					"name": "Get Class by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a9208ca-13b1-45e9-beda-014b27c2be67",
								"exec": [
									"tests[\"Get Class by ID\"] = responseCode.code === 200;\r",
									"\r",
									"const jsonData = JSON.parse(responseBody);\r",
									"if (responseCode.code == 200)\r",
									"{\r",
									"    tests[\"Parse Term ID\"] = false;\r",
									"    if (jsonData[\"class\"] && jsonData[\"class\"].terms)\r",
									"    {\r",
									"        pm.environment.set(\"term_id\", jsonData[\"class\"].terms[0].sourcedId);\r",
									"        console.log(\"Term ID set to: \" + pm.variables.get(\"term_id\"));\r",
									"        tests[\"Parse Term ID\"] = true;\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4690260c-fc5b-4943-8319-9021d833bf84",
								"exec": [
									"if (pm.environment.get(\"class_id\"))\r",
									"{\r",
									"    console.log(\"Missing Class Id, Please execute GradeSync Collection Requests in order to ensure it is set\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes/{{class_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes",
								"{{class_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Term by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "339ede44-7e5e-4d6c-b391-57e5ffa4f0e5",
								"exec": [
									"tests[\"Get Term\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(responseCode.code === 200)",
									"{",
									"    tests[\"Parse Grading Period\"] = false;",
									"    if (jsonData.academicSession)",
									"    {",
									"        const { status, startDate, endDate } = jsonData.academicSession;",
									"        tests[\"Check Active Status\"] = (status === \"active\");",
									"",
									"        pm.environment.set(\"term_start_date\", startDate);",
									"        console.log(\"Term Start Date set to: \" + pm.variables.get(\"term_start_date\"));",
									"",
									"        pm.environment.set(\"term_end_date\", endDate);",
									"        console.log(\"Term End Date set to: \" + pm.variables.get(\"term_end_date\"));",
									"",
									"        tests[\"Parse Grading Period\"] = true;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "07e9f8d6-c8ae-4a21-a89c-fae5ee711f45",
								"exec": [
									"if (!pm.environment.get(\"term_id\"))\r",
									"{\r",
									"    console.log(\"Missing Term Id, Please execute GradeSync Collection Requests in order to ensure it is set\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/terms/{{term_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"terms",
								"{{term_id}}"
							]
						},
						"description": "Gets a term by term_id"
					},
					"response": []
				},
				{
					"name": "Put LineItem for Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"pm.test(\"Put LineItem For Class\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1c461993-18e5-47e0-8e94-b5205234ba26",
								"exec": [
									"const moment = require('moment');\r",
									"const uuid = require('uuid');\r",
									"\r",
									"const utcNow = moment.utc();\r",
									"\r",
									"// create a unique lineItem title, based on utcNow\r",
									"pm.environment.set(\"lineitem_title\", `GradeSync Postman - ${utcNow.format()}`);\r",
									"\r",
									"// set assign date to lie inside grading period\r",
									"const termStartDate = moment.utc(pm.environment.get(\"term_start_date\"));\r",
									"const termEndDate = moment.utc(pm.environment.get(\"term_end_date\"));\r",
									"const lineItemAssignDate = moment.max([ termStartDate, moment.min([ utcNow, termEndDate ]) ]);\r",
									"pm.environment.set(\"lineitem_assign_date\", lineItemAssignDate.format());\r",
									"\r",
									"// set dueDate for 1 week after assign date\r",
									"const lineItemDueDate = lineItemAssignDate.add(1, 'week');\r",
									"pm.environment.set(\"lineitem_due_date\", lineItemDueDate.format());\r",
									"\r",
									"// create a unique lineItemId\r",
									"pm.environment.set(\"lineitem_id\", uuid());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lineItem\": {\r\n        \"title\": \"{{lineitem_title}}\",\r\n        \"description\": \"Test Assignment created by GradeSync Postman Collection\",\r\n        \"dueDate\": \"{{lineitem_due_date}}\",\r\n        \"assignDate\": \"{{lineitem_assign_date}}\",\r\n        \"resultValueMin\": 0.0,\r\n        \"resultValueMax\": 100.0,\r\n        \"class\": {\r\n            \"type\": \"class\",\r\n            \"sourcedId\": \"{{class_id}}\"\r\n        },\r\n        \"gradingPeriod\": {\r\n            \"type\": \"academicSession\",\r\n            \"sourcedId\": \"{{term_id}}\"\r\n        },\r\n        \"sourcedId\": \"{{lineitem_id}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/lineitems/{{lineitem_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"lineitems",
								"{{lineitem_id}}"
							]
						},
						"description": "Create a lineitem or update the existing one for a class"
					},
					"response": []
				},
				{
					"name": "Get LineItem For Class by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"pm.test(\"Get LineItems For Class\", () => {\r",
									"    pm.expect(responseCode.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"LineItems contain new LineItem\", () => {\r",
									"    const jsonData = JSON.parse(responseBody);\r",
									"    pm.expect(jsonData).to.have.key('lineItems');\r",
									"    pm.expect(jsonData.lineItems)\r",
									"        .to.be.an('array')\r",
									"        .to.have.lengthOf(1);\r",
									"        \r",
									"    const lineItemId = pm.environment.get('lineitem_id');\r",
									"    pm.expect(jsonData.lineItems[0].sourcedId).to.eql(lineItemId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d8aacdfc-ef24-428c-82bf-85260ffd622b",
								"exec": [
									"if (pm.environment.get(\"class_id\"))\r",
									"{\r",
									"    console.log(\"Missing Class Id, Please execute GradeSync Collection Requests in order to ensure it is set\");\r",
									"}\r",
									"\r",
									"if (pm.environment.get(\"lineitem_id\"))\r",
									"{\r",
									"    console.log(\"Missing LineItem Id, Please execute GradeSync Collection Requests in order to ensure it is set\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes/{{class_id}}/lineitems?filter=sourcedId='{{lineitem_id}}'",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes",
								"{{class_id}}",
								"lineitems"
							],
							"query": [
								{
									"key": "filter",
									"value": "sourcedId='{{lineitem_id}}'"
								}
							]
						},
						"description": "Gets a page of lineitem by ID for a Class"
					},
					"response": []
				},
				{
					"name": "Put Result for LineItem for Student",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"pm.test(\"Put Result for LineItem for Student\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1c461993-18e5-47e0-8e94-b5205234ba26",
								"exec": [
									"const moment = require('moment');\r",
									"const uuid = require('uuid');\r",
									"\r",
									"// set score date to UtcNow\r",
									"const utcNow = moment.utc();\r",
									"pm.environment.set(\"result_score_date\", utcNow.format());\r",
									"\r",
									"// Set a random score between 0-100 (for GradeType = \"Points\")\r",
									"pm.environment.set(\"result_score\", (Math.random(0, 1) * 100).toFixed(1));\r",
									"\r",
									"// Create a unique resultId, if one is not created.\r",
									"pm.environment.set(\"result_id\", `result-${uuid()}`);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"result\": {\r\n        \"score\": {{result_score}},\r\n        \"lineItem\": {\r\n            \"sourcedId\": \"{{lineitem_id}}\"\r\n        },\r\n        \"student\": {\r\n            \"sourcedId\": \"{{student_id}}\"\r\n        },\r\n        \"scoreDate\": \"{{result_score_date}}\",\r\n        \"scoreStatus\": \"fully graded\",\r\n        \"sourcedId\": \"{{result_id}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/results/{{result_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"results",
								"{{result_id}}"
							]
						},
						"description": "Puts a result for a student into a lineItem."
					},
					"response": []
				},
				{
					"name": "Get Results For LineItem For Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"pm.test(\"Get Results For LineItems For Class\", () => {\r",
									"    pm.expect(responseCode.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Results contain new Result\", () => {\r",
									"    const jsonData = JSON.parse(responseBody);\r",
									"    pm.expect(jsonData).to.have.key('results');\r",
									"    pm.expect(jsonData.results)\r",
									"        .to.be.an('array')\r",
									"        .to.have.lengthOf(1);   // should only contain newly added result \r",
									"    \r",
									"    const resultId = pm.environment.get(\"result_id\");\r",
									"    pm.expect(jsonData.results[0].sourcedId).to.eql(resultId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "faf43b57-a352-4ba6-90f7-e2b5a20091a9",
								"exec": [
									"if (pm.environment.get(\"class_id\"))\r",
									"{\r",
									"    console.log(\"Missing Class Id, Please execute GradeSync Collection Requests in order to ensure it is set\");\r",
									"}\r",
									"\r",
									"if (pm.environment.get(\"lineitem_id\"))\r",
									"{\r",
									"    console.log(\"Missing LineItem Id, Please execute GradeSync Collection Requests in order to ensure it is set\");\r",
									"}\r",
									"\r",
									"if (pm.environment.get(\"result_id\"))\r",
									"{\r",
									"    console.log(\"Missing Result Id, Please execute GradeSync Collection Requests in order to ensure it is set\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes/{{class_id}}/lineitems/{{lineitem_id}}/results",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes",
								"{{class_id}}",
								"lineitems",
								"{{lineitem_id}}",
								"results"
							]
						},
						"description": "Gets a page of results for a lineitem_id for a class_id"
					},
					"response": []
				},
				{
					"name": "Get Results For Student For Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"tests[\"Get LineItems For Class\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0e6b5c03-de4b-422a-80fe-ddfc513421ab",
								"exec": [
									"if (pm.environment.get(\"class_id\"))\r",
									"{\r",
									"    console.log(\"Missing Class Id, Please execute GradeSync Collection Requests in order to ensure it is set\");\r",
									"}\r",
									"\r",
									"if (pm.environment.get(\"student_id\"))\r",
									"{\r",
									"    console.log(\"Missing Student Id, Please execute GradeSync Collection Requests in order to ensure it is set\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/classes/{{class_id}}/students/{{student_id}}/results",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"classes",
								"{{class_id}}",
								"students",
								"{{student_id}}",
								"results"
							]
						},
						"description": "Gets a page of results for a student_id for a class_id"
					},
					"response": []
				},
				{
					"name": "[Optional][CleanUp] Delete Result by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"pm.test(\"Delete Result by ID\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});\r",
									"\r",
									"pm.test(\"Not a required API for GradeSync\", () => {});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1c461993-18e5-47e0-8e94-b5205234ba26",
								"exec": [
									"if (pm.environment.get(\"result_id\"))\r",
									"{\r",
									"    console.log(\"Missing Result Id, Please execute GradeSync Collection Requests in order to ensure it is set\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/results/{{result_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"results",
								"{{result_id}}"
							]
						},
						"description": "- **OPTIONAL** and not required for GradeSync to function\r\n- Deletes the result which is created / updated before\r\n- Added here to ensure we do necessary cleanup"
					},
					"response": []
				},
				{
					"name": "[Optional][CleanUp] Delete LineItem by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf27e668-9d02-4688-afba-4aef467686ed",
								"exec": [
									"pm.test(\"Delete LineItem by ID\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});\r",
									"\r",
									"pm.test(\"Not a required API for GradeSync\", () => {});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1c461993-18e5-47e0-8e94-b5205234ba26",
								"exec": [
									"if (pm.environment.get(\"lineitem_id\"))\r",
									"{\r",
									"    console.log(\"Missing LineItem Id, Please execute GradeSync Collection Requests in order to ensure it is set\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{OneRosterHost}}/ims/oneroster/v1p1/lineitems/{{lineitem_id}}",
							"host": [
								"{{OneRosterHost}}"
							],
							"path": [
								"ims",
								"oneroster",
								"v1p1",
								"lineitems",
								"{{lineitem_id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fe1ade4d-9d87-45e6-99a0-5adf7b6cf669",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "666dd8db-1bd4-46ba-8f90-1a8ecb0832e5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "oauth1",
		"oauth1": [
			{
				"key": "addParamsToHeader",
				"value": true,
				"type": "boolean"
			},
			{
				"key": "consumerSecret",
				"value": "{{OneRosterConsumerSecret}}",
				"type": "string"
			},
			{
				"key": "consumerKey",
				"value": "{{OneRosterConsumerKey}}",
				"type": "string"
			},
			{
				"key": "signatureMethod",
				"value": "HMAC-SHA1",
				"type": "string"
			},
			{
				"key": "version",
				"value": "1.0",
				"type": "string"
			},
			{
				"key": "addEmptyParamsToSign",
				"value": false,
				"type": "boolean"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "98200562-bf2b-4a24-b118-5f5c84d9b65c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e18aefb8-4fa0-4abe-94d3-036da62e6c7a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "e1b03bbb-162d-4d7e-b7e5-96ca0622a4ce",
			"key": "school_id",
			"value": "",
			"type": "string"
		},
		{
			"id": "557520bd-b486-41de-a836-47db335fb89e",
			"key": "class_id",
			"value": "",
			"type": "string"
		},
		{
			"id": "60d8419a-80e7-4b7a-b953-39c05d765cc0",
			"key": "student_id",
			"value": "",
			"type": "string"
		},
		{
			"id": "500afa8c-6ae7-438b-9357-1d3f97c00d46",
			"key": "teacher_id",
			"value": "",
			"type": "string"
		}
	]
}