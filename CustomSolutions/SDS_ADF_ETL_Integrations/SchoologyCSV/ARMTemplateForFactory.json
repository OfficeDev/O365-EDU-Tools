{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "adf-SchoologyCSVtoSDS"
        },
        "stsdsvnext_accountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'stsdsvnext'"
        },
        "SchoologyWebUrl_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://api.schoology.com/v1/"
        },
        "kvSchoologySDSVnext_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "https://kv-schoology-sds.vault.azure.net/"
        },
        "stsdsvnext_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://stschoologycsvsds.dfs.core.windows.net/"
        },
        "SDSAzureDataLakeStorageGen2_sasUri": {
            "type": "secureString",
            "metadata": "Secure string for 'sasUri' of 'SDSAzureDataLakeStorageGen2'"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/SchoologyWebUrl')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "RestService",
                "typeProperties": {
                    "url": "[parameters('SchoologyWebUrl_properties_typeProperties_url')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/kvSchoologySDSVnext')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('kvSchoologySDSVnext_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/stsdsvnext')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('stsdsvnext_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('stsdsvnext_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDSAzureDataLakeStorageGen2')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "sasUriParam": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "sasUri": "[parameters('SDSAzureDataLakeStorageGen2_sasUri')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/schoologyCourses_to_SDSVnextClasses_csv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "Schoology_Courses_CSV",
                                "type": "DatasetReference"
                            },
                            "name": "SchoologyCourses"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Classes",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVnextClasses",
                            "rejectedDataLinkedService": {
                                "referenceName": "stsdsvnext",
                                "type": "LinkedServiceReference"
                            }
                        }
                    ],
                    "transformations": [
                        {
                            "name": "selectRequiredColumns"
                        },
                        {
                            "name": "derivedSourcedId"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          {Course Name} as string,",
                        "          {Course Code} as string,",
                        "          {Section Name} as string,",
                        "          {Section School Code} as string,",
                        "          {School Building} as string,",
                        "          {Grading Periods} as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> SchoologyCourses",
                        "SchoologyCourses select(mapColumn(",
                        "          sourcedId = {Section School Code},",
                        "          courseSourcedId = {Course Code},",
                        "          orgSourcedId = {School Building},",
                        "          title = {Section Name}",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectRequiredColumns",
                        "selectRequiredColumns derive(sourcedId = replace(sourcedId, ' ', '_')) ~> derivedSourcedId",
                        "derivedSourcedId sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          orgSourcedId as string,",
                        "          title as string,",
                        "          sessionSourcedIds as string,",
                        "          courseSourcedId as string",
                        "     ),",
                        "     partitionFileNames:['classes.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          courseSourcedId,",
                        "          orgSourcedId,",
                        "          title",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> SDSVnextClasses"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Schoology_Courses_CSV')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Classes')]",
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/schoologySchools_to_SDSVnextOrgs_csv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "Schoology_Schools_CSV",
                                "type": "DatasetReference"
                            },
                            "name": "schoologySchools"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Orgs",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVnextOrgs"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "deriveTypeColumn"
                        },
                        {
                            "name": "selectRequiredFields"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          {Building Code} as string,",
                        "          {School Name} as string,",
                        "          Address1 as string,",
                        "          CIty as string,",
                        "          State as string,",
                        "          ZIP as string,",
                        "          Country as string,",
                        "          Phone as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> schoologySchools",
                        "selectRequiredFields derive(type = \"school\") ~> deriveTypeColumn",
                        "schoologySchools select(mapColumn(",
                        "          sourcedId = {Building Code},",
                        "          name = {School Name}",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectRequiredFields",
                        "deriveTypeColumn sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          name as string,",
                        "          type as string",
                        "     ),",
                        "     partitionFileNames:['orgs.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          name,",
                        "          type",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> SDSVnextOrgs"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Schoology_Schools_CSV')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Orgs')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/schoologyUsers_to_SDSVnext_NewUsers_csv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "Schoology_Users_CSV",
                                "type": "DatasetReference"
                            },
                            "name": "SchoologyUsers"
                        },
                        {
                            "dataset": {
                                "referenceName": "Schoology_Parents_CSV",
                                "type": "DatasetReference"
                            },
                            "name": "SchoologyParents"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Vnext_Users",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVnextUsers"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "union1"
                        },
                        {
                            "name": "selectRequiredFields"
                        },
                        {
                            "name": "deriveUsername"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          {First Name} as string,",
                        "          {Middle Name} as string,",
                        "          {Last Name} as string,",
                        "          {Unique User ID} as string,",
                        "          Role as string,",
                        "          School as string,",
                        "          {Grade Level} as string,",
                        "          {Additional Schools} as string,",
                        "          Email as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> SchoologyUsers",
                        "source(output(",
                        "          {First Name} as string,",
                        "          {Middle Name} as string,",
                        "          {Last Name} as string,",
                        "          {Unique User ID} as string,",
                        "          Role as string,",
                        "          School as string,",
                        "          {Grade Level} as string,",
                        "          {Additional School} as string,",
                        "          Email as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: true) ~> SchoologyParents",
                        "SchoologyUsers, SchoologyParents union(byName: true)~> union1",
                        "deriveUsername select(mapColumn(",
                        "          sourcedId = {Unique User ID},",
                        "          username,",
                        "          givenName = {First Name},",
                        "          familyName = {Last Name},",
                        "          email = Email",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectRequiredFields",
                        "union1 derive(username = iif(equals({Role}, 'PARENT'), trim({Unique User ID}), split({Email}, '@')[1]),",
                        "          {Unique User ID} = trim({Unique User ID})) ~> deriveUsername",
                        "selectRequiredFields sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          familyName as string,",
                        "          givenName as string,",
                        "          username as string,",
                        "          email as string",
                        "     ),",
                        "     partitionFileNames:['users.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          username,",
                        "          familyName,",
                        "          givenName,",
                        "          email",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> SDSVnextUsers"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Schoology_Users_CSV')]",
                "[concat(variables('factoryId'), '/datasets/Schoology_Parents_CSV')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Vnext_Users')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/schoologyUsers_to_SDSVnextRoles_csv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "Schoology_Users_CSV",
                                "type": "DatasetReference"
                            },
                            "name": "SchoologyUsers"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Roles",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVnextRoles",
                            "rejectedDataLinkedService": {
                                "referenceName": "stsdsvnext",
                                "type": "LinkedServiceReference"
                            }
                        }
                    ],
                    "transformations": [
                        {
                            "name": "selectRequiredColumns"
                        },
                        {
                            "name": "lowerCaseRole"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          {First Name} as string,",
                        "          {Middle Name} as string,",
                        "          {Last Name} as string,",
                        "          {Unique User ID} as string,",
                        "          Role as string,",
                        "          School as string,",
                        "          {Grade Level} as string,",
                        "          {Additional Schools} as string,",
                        "          Email as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> SchoologyUsers",
                        "SchoologyUsers select(mapColumn(",
                        "          userSourcedId = {Unique User ID},",
                        "          orgSourcedId = School,",
                        "          role = Role,",
                        "          grade = {Grade Level}",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectRequiredColumns",
                        "selectRequiredColumns derive(role = lower(role)) ~> lowerCaseRole",
                        "lowerCaseRole sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          userSourcedId as string,",
                        "          orgSourcedId as string,",
                        "          role as string,",
                        "          sessionSourcedId as string,",
                        "          grade as string,",
                        "          isPrimary as string,",
                        "          roleStartDate as string,",
                        "          roleEndDate as string",
                        "     ),",
                        "     partitionFileNames:['roles.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          userSourcedId,",
                        "          orgSourcedId,",
                        "          role,",
                        "          grade",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> SDSVnextRoles"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Schoology_Users_CSV')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Roles')]",
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDSVnext_All_Files_Validation')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "SDSVNext_Validation_Errors",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVnextUsersErrorLog"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Courses",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVNextCourses"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_AcademicSessions",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVNextAcademicsessions"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Classes",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVnextClasses"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Enrollments",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVNextEnrollments"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Orgs",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVNextOrgs"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Roles",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVNextRoles"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDSVNext_Validation_Errors",
                                "type": "DatasetReference"
                            },
                            "name": "AllErrors"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Courses",
                                "type": "DatasetReference"
                            },
                            "name": "InvalidCourses"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Courses",
                                "type": "DatasetReference"
                            },
                            "name": "ValidCourses"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_AcademicSessions",
                                "type": "DatasetReference"
                            },
                            "name": "InvalidAcademicSessions"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_AcademicSessions",
                                "type": "DatasetReference"
                            },
                            "name": "ValidacademicSessions"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Classes",
                                "type": "DatasetReference"
                            },
                            "name": "InvalidClasses"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Classes",
                                "type": "DatasetReference"
                            },
                            "name": "ValidClasses"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Enrollments",
                                "type": "DatasetReference"
                            },
                            "name": "InvalidEnrollments"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Enrollments",
                                "type": "DatasetReference"
                            },
                            "name": "ValidEnrollments"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Orgs",
                                "type": "DatasetReference"
                            },
                            "name": "InvalidOrgs"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Orgs",
                                "type": "DatasetReference"
                            },
                            "name": "ValidOrgs"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Roles",
                                "type": "DatasetReference"
                            },
                            "name": "InvalidRoles"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Roles",
                                "type": "DatasetReference"
                            },
                            "name": "ValidRoles"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "DefineInvalidCourses"
                        },
                        {
                            "name": "splitInvalidCourses"
                        },
                        {
                            "name": "CourseErrors"
                        },
                        {
                            "name": "DefineInvalidAcadamicSessions"
                        },
                        {
                            "name": "splitInvalidAcademicsessions"
                        },
                        {
                            "name": "AcademicsessionsErrors"
                        },
                        {
                            "name": "DefineInvalidClasses"
                        },
                        {
                            "name": "splitInvalidClasses"
                        },
                        {
                            "name": "ClassesErrors"
                        },
                        {
                            "name": "DefineInvalidEnrollments"
                        },
                        {
                            "name": "splitInvalidEnrollments"
                        },
                        {
                            "name": "EnrollmentsErrors"
                        },
                        {
                            "name": "DefineInvalidOrgs"
                        },
                        {
                            "name": "splitInvalidOrgs"
                        },
                        {
                            "name": "OrgsErrors"
                        },
                        {
                            "name": "DefineInvalidRoles"
                        },
                        {
                            "name": "splitInvalidRoles"
                        },
                        {
                            "name": "RolesErrors"
                        },
                        {
                            "name": "union1"
                        },
                        {
                            "name": "derivedColumn1"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     sdsStorageFolder as string",
                        "}",
                        "source(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder, '/validation.log'))]) ~> SDSVnextUsersErrorLog",
                        "source(output(",
                        "          sourcedId as string,",
                        "          orgSourcedId as string,",
                        "          title as string,",
                        "          code as string,",
                        "          schoolYearSourcedId as string,",
                        "          subject as string,",
                        "          grade as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/courses.csv'))]) ~> SDSVNextCourses",
                        "source(output(",
                        "          sourcedId as string,",
                        "          title as string,",
                        "          type as string,",
                        "          schoolYear as string,",
                        "          startDate as string,",
                        "          endDate as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/academicSessions.csv'))]) ~> SDSVNextAcademicsessions",
                        "source(output(",
                        "          sourcedId as string,",
                        "          courseSourcedId as string,",
                        "          orgSourcedId as string,",
                        "          title as string,",
                        "          code as string,",
                        "          sessionSourcedId as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/classes.csv'))]) ~> SDSVnextClasses",
                        "source(output(",
                        "          classSourcedId as string,",
                        "          userSourcedId as string,",
                        "          role as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/enrollments.csv'))]) ~> SDSVNextEnrollments",
                        "source(output(",
                        "          sourcedId as string,",
                        "          name as string,",
                        "          type as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/orgs.csv'))]) ~> SDSVNextOrgs",
                        "source(output(",
                        "          userSourcedId as string,",
                        "          orgSourcedId as string,",
                        "          role as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/roles.csv'))]) ~> SDSVNextRoles",
                        "SDSVNextCourses derive(InvalidSourcedId = isNull(sourcedId)||length(sourcedId)==0,",
                        "          InvalidorgSourcedId = isNull(orgSourcedId)||length(orgSourcedId)==0,",
                        "          Invalidtitle = isNull(title)||length(title)==0) ~> DefineInvalidCourses",
                        "DefineInvalidCourses split(InvalidSourcedId||InvalidorgSourcedId||Invalidtitle,",
                        "     disjoint: false) ~> splitInvalidCourses@(InvalidCourseRecords, ValidCourseRecords)",
                        "splitInvalidCourses@InvalidCourseRecords derive(sourcedId = sourcedId,",
                        "          type = \"courses\",",
                        "          errors = concat( iif(InvalidSourcedId, \"Invalid source id: \", \"\"), iif(InvalidorgSourcedId, \"Invalid Org source id: \", \"\"),iif(Invalidtitle, \"Inavlid tiltle: \", \"\"))) ~> CourseErrors",
                        "SDSVNextAcademicsessions derive(InvalidSourcedId = isNull(sourcedId)||length(sourcedId)==0,",
                        "          Invalidtitle = isNull(title)||length(title)==0,",
                        "          Inavalidtype = isNull(type)||length(type)==0,",
                        "          InvalidschoolYear = isNull(schoolYear)||length(schoolYear)==0,",
                        "          InvalidstartDate = isNull(startDate)||length(startDate)==0,",
                        "          InvalidendDate = isNull(endDate)||length(endDate)==0) ~> DefineInvalidAcadamicSessions",
                        "DefineInvalidAcadamicSessions split(InvalidSourcedId||Invalidtitle||Inavalidtype||InvalidschoolYear||InvalidstartDate||InvalidendDate,",
                        "     disjoint: false) ~> splitInvalidAcademicsessions@(Invalidrecords, ValidRecords)",
                        "splitInvalidAcademicsessions@Invalidrecords derive(sourcedId = sourcedId,",
                        "          type = \"academicsessions\",",
                        "          errors = concat( iif(InvalidSourcedId, \"Invalid source id: \", \"\"), iif(Invalidtitle, \"Invalid title: \", \"\"), iif(Inavalidtype, \"Invalid type: \", \"\"), iif(InvalidschoolYear, \"Invalid school year: \", \"\"), iif(InvalidstartDate, \"Invalid start date: \", \"\"), iif(InvalidendDate, \"Invalid end date: \", \"\"))) ~> AcademicsessionsErrors",
                        "SDSVnextClasses derive(InvalidSourcedId = isNull(sourcedId)||length(sourcedId)==0,",
                        "          InvalidorgSourcedId = isNull(orgSourcedId)||length(orgSourcedId)==0,",
                        "          Invalidtitle = isNull(title)||length(title)==0) ~> DefineInvalidClasses",
                        "DefineInvalidClasses split(InvalidSourcedId||InvalidorgSourcedId||Invalidtitle,",
                        "     disjoint: false) ~> splitInvalidClasses@(InvalidClassRecords, ValidClassRecords)",
                        "splitInvalidClasses@InvalidClassRecords derive(sourcedId = sourcedId,",
                        "          type = \"classes\",",
                        "          errors = concat( iif(InvalidSourcedId, \"Invalid source id: \", \"\"), iif(InvalidorgSourcedId, \"Invalid Org source id: \", \"\"),iif(Invalidtitle, \"Inavlid tiltle: \", \"\"))) ~> ClassesErrors",
                        "SDSVNextEnrollments derive(InvalidclassSourcedId = isNull(classSourcedId)||length(classSourcedId)==0,",
                        "          InvaliduserSourcedId = isNull(userSourcedId)||length(userSourcedId)==0,",
                        "          InvalidRole = isNull(role)||length(role)==0) ~> DefineInvalidEnrollments",
                        "DefineInvalidEnrollments split(InvalidclassSourcedId||InvaliduserSourcedId||InvalidRole,",
                        "     disjoint: false) ~> splitInvalidEnrollments@(InvalidEnrollmentsRecords, ValidEnrollmentsRecords)",
                        "splitInvalidEnrollments@InvalidEnrollmentsRecords derive(sourcedId = userSourcedId,",
                        "          type = \"enrollments\",",
                        "          errors = concat(    iif(InvaliduserSourcedId, 'Invalid User SourcedId; ', ''),     iif(InvalidclassSourcedId, 'Invalid Class SourcedId; ', ''), iif(InvalidRole, 'Invalid Role; ', ''))) ~> EnrollmentsErrors",
                        "SDSVNextOrgs derive(InvalidsourcedId = isNull(sourcedId)||length(sourcedId)==0,",
                        "          Invalidname = isNull(name)||length(name)==0,",
                        "          invalidType = isNull(type)||length(type)==0) ~> DefineInvalidOrgs",
                        "DefineInvalidOrgs split(InvalidsourcedId||Invalidname||invalidType,",
                        "     disjoint: false) ~> splitInvalidOrgs@(InvalidOrgsRecords, ValidOrgsRecords)",
                        "splitInvalidOrgs@InvalidOrgsRecords derive(sourcedId = sourcedId,",
                        "          type = \"orgs\",",
                        "          errors = concat(iif(InvalidsourcedId, 'Invalid SourcedId; ', ''))) ~> OrgsErrors",
                        "SDSVNextRoles derive(InvaliduserSourcedId = isNull(userSourcedId)||length(userSourcedId)==0,",
                        "          InvalidorgSourcedId = isNull(orgSourcedId)||length(orgSourcedId)==0,",
                        "          Invalidrole = isNull(role)||length(role)==0) ~> DefineInvalidRoles",
                        "DefineInvalidRoles split(InvaliduserSourcedId||InvalidorgSourcedId||Invalidrole,",
                        "     disjoint: false) ~> splitInvalidRoles@(InvalidRolesRecords, ValidRolesRecords)",
                        "splitInvalidRoles@InvalidRolesRecords derive(sourcedId = userSourcedId,",
                        "          type = \"roles\",",
                        "          errors = concat( iif(InvaliduserSourcedId, 'Invalid User SourcedId; ', ''), iif(InvalidorgSourcedId, 'Invalid Org SourcedId; ', ''), iif(Invalidrole, 'Invalid Role; ', '') )) ~> RolesErrors",
                        "SDSVnextUsersErrorLog, CourseErrors, AcademicsessionsErrors, ClassesErrors, EnrollmentsErrors, OrgsErrors, RolesErrors union(byName: true)~> union1",
                        "union1 derive(date = currentUTC()) ~> derivedColumn1",
                        "derivedColumn1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     partitionFileNames:['validation.log'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          type,",
                        "          date,",
                        "          errors",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> AllErrors",
                        "splitInvalidCourses@InvalidCourseRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          orgSourcedId as string,",
                        "          title as string,",
                        "          code as string,",
                        "          schoolYearSourcedId as string,",
                        "          subject as string,",
                        "          grade as string",
                        "     ),",
                        "     partitionFileNames:['invalid_Courses.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          orgSourcedId,",
                        "          title,",
                        "          code,",
                        "          schoolYearSourcedId,",
                        "          subject,",
                        "          grade",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> InvalidCourses",
                        "splitInvalidCourses@ValidCourseRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          orgSourcedId as string,",
                        "          title as string,",
                        "          code as string,",
                        "          schoolYearSourcedId as string,",
                        "          subject as string,",
                        "          grade as string",
                        "     ),",
                        "     partitionFileNames:['courses.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          orgSourcedId,",
                        "          title,",
                        "          code,",
                        "          schoolYearSourcedId,",
                        "          subject,",
                        "          grade",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> ValidCourses",
                        "splitInvalidAcademicsessions@Invalidrecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          title as string,",
                        "          type as string,",
                        "          schoolYear as string,",
                        "          startDate as string,",
                        "          endDate as string",
                        "     ),",
                        "     partitionFileNames:['Invalid_AcademicSessions.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          title,",
                        "          type,",
                        "          schoolYear,",
                        "          startDate,",
                        "          endDate",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> InvalidAcademicSessions",
                        "splitInvalidAcademicsessions@ValidRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          title as string,",
                        "          type as string,",
                        "          schoolYear as string,",
                        "          startDate as string,",
                        "          endDate as string",
                        "     ),",
                        "     partitionFileNames:['academicSessions.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          title,",
                        "          type,",
                        "          schoolYear,",
                        "          startDate,",
                        "          endDate",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> ValidacademicSessions",
                        "splitInvalidClasses@InvalidClassRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          orgSourcedId as string,",
                        "          title as string,",
                        "          sessionSourcedIds as string,",
                        "          courseSourcedId as string",
                        "     ),",
                        "     partitionFileNames:['Invalid_Classes.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> InvalidClasses",
                        "splitInvalidClasses@ValidClassRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          orgSourcedId as string,",
                        "          title as string,",
                        "          sessionSourcedIds as string,",
                        "          courseSourcedId as string",
                        "     ),",
                        "     partitionFileNames:['classes.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          orgSourcedId,",
                        "          title,",
                        "          courseSourcedId",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> ValidClasses",
                        "splitInvalidEnrollments@InvalidEnrollmentsRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          classSourcedId as string,",
                        "          userSourcedId as string,",
                        "          role as string",
                        "     ),",
                        "     partitionFileNames:['Invalid_Enrollments.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          classSourcedId,",
                        "          userSourcedId,",
                        "          role",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> InvalidEnrollments",
                        "splitInvalidEnrollments@ValidEnrollmentsRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          classSourcedId as string,",
                        "          userSourcedId as string,",
                        "          role as string",
                        "     ),",
                        "     partitionFileNames:['enrollments.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          classSourcedId,",
                        "          userSourcedId,",
                        "          role",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> ValidEnrollments",
                        "splitInvalidOrgs@InvalidOrgsRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          name as string,",
                        "          type as string",
                        "     ),",
                        "     partitionFileNames:['Invalid_Orgs.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          name,",
                        "          type",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> InvalidOrgs",
                        "splitInvalidOrgs@ValidOrgsRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          name as string,",
                        "          type as string",
                        "     ),",
                        "     partitionFileNames:['orgs.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          name,",
                        "          type",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> ValidOrgs",
                        "splitInvalidRoles@InvalidRolesRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          userSourcedId as string,",
                        "          orgSourcedId as string,",
                        "          role as string,",
                        "          sessionSourcedId as string,",
                        "          grade as string,",
                        "          isPrimary as string,",
                        "          roleStartDate as string,",
                        "          roleEndDate as string",
                        "     ),",
                        "     partitionFileNames:['Invalid_Roles.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          userSourcedId,",
                        "          orgSourcedId,",
                        "          role",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> InvalidRoles",
                        "splitInvalidRoles@ValidRolesRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          userSourcedId as string,",
                        "          orgSourcedId as string,",
                        "          role as string,",
                        "          sessionSourcedId as string,",
                        "          grade as string,",
                        "          isPrimary as string,",
                        "          roleStartDate as string,",
                        "          roleEndDate as string",
                        "     ),",
                        "     partitionFileNames:['roles.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          userSourcedId,",
                        "          orgSourcedId,",
                        "          role",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> ValidRoles"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDSVNext_Validation_Errors')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Courses')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_AcademicSessions')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Classes')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Enrollments')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Orgs')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Roles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/validate_SDS_Vnext_Users')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Vnext_Users",
                                "type": "DatasetReference"
                            },
                            "name": "sourceSDSVnextUsers"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDSVNext_Validation_Errors",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidUserRecordsLogs"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Vnext_Users",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidUsersRecords"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Vnext_Users",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidRecords"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "userValidations"
                        },
                        {
                            "name": "split1"
                        },
                        {
                            "name": "derivedColumn"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     sdsStorageFolder as string",
                        "}",
                        "source(output(",
                        "          sourcedId as string,",
                        "          familyName as string,",
                        "          givenName as string,",
                        "          username as string,",
                        "          email as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/users.csv'))]) ~> sourceSDSVnextUsers",
                        "sourceSDSVnextUsers derive(invalidSourcedId = isNull(sourcedId) || length(sourcedId)==0,",
                        "          invalidUserName = isNull(username) || length(username)==0,",
                        "          invalidFamilyName = isNull(familyName) || length(familyName)==0,",
                        "          invalidGivenName = isNull(givenName) || length(givenName)==0) ~> userValidations",
                        "userValidations split(invalidSourcedId || invalidUserName || invalidFamilyName || invalidGivenName,",
                        "     disjoint: false) ~> split1@(invalidRecords, validRecords)",
                        "split1@invalidRecords derive(sourcedId = sourcedId,",
                        "          type = \"users\",",
                        "          errors = concat(iif(invalidSourcedId, 'Invalid SourcedId; ', ''),iif(invalidUserName, 'Invalid User Name; ', ''), iif(invalidFamilyName, 'Invalid Family Name; ', ''), iif(invalidGivenName, 'Invalid Given Name; ', '')),",
                        "          date = currentUTC()) ~> derivedColumn",
                        "derivedColumn sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     partitionFileNames:['validation.log'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          type,",
                        "          errors,",
                        "          date",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkInvalidUserRecordsLogs",
                        "split1@invalidRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          familyName as string,",
                        "          givenName as string,",
                        "          username as string,",
                        "          email as string",
                        "     ),",
                        "     partitionFileNames:['invalid_user_records.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          familyName,",
                        "          givenName,",
                        "          username,",
                        "          email",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkInvalidUsersRecords",
                        "split1@validRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          familyName as string,",
                        "          givenName as string,",
                        "          username as string,",
                        "          email as string",
                        "     ),",
                        "     partitionFileNames:['users.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          familyName,",
                        "          givenName,",
                        "          username,",
                        "          email",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkValidRecords"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDS_Vnext_Users')]",
                "[concat(variables('factoryId'), '/datasets/SDSVNext_Validation_Errors')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/schoologyEnrollments_to_SDSVnextEnrollments_csv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "Schoology_Enrollments_CSV",
                                "type": "DatasetReference"
                            },
                            "name": "SchoologyEnrollments"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Enrollments",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVnextEnrollments"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "transformFields"
                        },
                        {
                            "name": "selectRequiredFields"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          {Course Code} as string,",
                        "          {Section School Code} as string,",
                        "          {User Unique ID} as string,",
                        "          Role as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> SchoologyEnrollments",
                        "selectRequiredFields derive(classSouredId = replace(classSourcedId, ' ', '_'),",
                        "          role = lower(role)) ~> transformFields",
                        "SchoologyEnrollments select(mapColumn(",
                        "          classSourcedId = {Section School Code},",
                        "          userSourcedId = {User Unique ID},",
                        "          role = Role",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectRequiredFields",
                        "transformFields sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          classSourcedId as string,",
                        "          userSourcedId as string,",
                        "          role as string",
                        "     ),",
                        "     partitionFileNames:['enrollments.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          classSourcedId = classSouredId,",
                        "          userSourcedId,",
                        "          role",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> SDSVnextEnrollments"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Schoology_Enrollments_CSV')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Enrollments')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDSVnext_Required_Files_Validation')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "SDSVNext_Validation_Errors",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVnextUsersErrorLog"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Orgs",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVNextOrgs"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Roles",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVNextRoles"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDSVNext_Validation_Errors",
                                "type": "DatasetReference"
                            },
                            "name": "AllErrors"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Orgs",
                                "type": "DatasetReference"
                            },
                            "name": "InvalidOrgs"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Orgs",
                                "type": "DatasetReference"
                            },
                            "name": "ValidOrgs"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Roles",
                                "type": "DatasetReference"
                            },
                            "name": "InvalidRoles"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Roles",
                                "type": "DatasetReference"
                            },
                            "name": "ValidRoles"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "DefineInvalidOrgs"
                        },
                        {
                            "name": "splitInvalidOrgs"
                        },
                        {
                            "name": "OrgsErrors"
                        },
                        {
                            "name": "DefineInvalidRoles"
                        },
                        {
                            "name": "splitInvalidRoles"
                        },
                        {
                            "name": "RolesErrors"
                        },
                        {
                            "name": "union1"
                        },
                        {
                            "name": "derivedColumn1"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     sdsStorageFolder as string",
                        "}",
                        "source(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder, '/validation.log'))]) ~> SDSVnextUsersErrorLog",
                        "source(output(",
                        "          sourcedId as string,",
                        "          name as string,",
                        "          type as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/orgs.csv'))]) ~> SDSVNextOrgs",
                        "source(output(",
                        "          userSourcedId as string,",
                        "          orgSourcedId as string,",
                        "          role as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/roles.csv'))]) ~> SDSVNextRoles",
                        "SDSVNextOrgs derive(InvalidsourcedId = isNull(sourcedId)||length(sourcedId)==0,",
                        "          Invalidname = isNull(name)||length(name)==0,",
                        "          invalidType = isNull(type)||length(type)==0) ~> DefineInvalidOrgs",
                        "DefineInvalidOrgs split(InvalidsourcedId||Invalidname||invalidType,",
                        "     disjoint: false) ~> splitInvalidOrgs@(InvalidOrgsRecords, ValidOrgsRecords)",
                        "splitInvalidOrgs@InvalidOrgsRecords derive(sourcedId = sourcedId,",
                        "          type = \"orgs\",",
                        "          errors = concat(iif(InvalidsourcedId, 'Invalid SourcedId; ', ''))) ~> OrgsErrors",
                        "SDSVNextRoles derive(InvaliduserSourcedId = isNull(userSourcedId)||length(userSourcedId)==0,",
                        "          InvalidorgSourcedId = isNull(orgSourcedId)||length(orgSourcedId)==0,",
                        "          Invalidrole = isNull(role)||length(role)==0) ~> DefineInvalidRoles",
                        "DefineInvalidRoles split(InvaliduserSourcedId || InvalidorgSourcedId || Invalidrole,",
                        "     disjoint: false) ~> splitInvalidRoles@(InvalidRolesRecords, ValidRolesRecords)",
                        "splitInvalidRoles@InvalidRolesRecords derive(sourcedId = userSourcedId,",
                        "          type = \"roles\",",
                        "          errors = concat( iif(InvaliduserSourcedId, 'Invalid User SourcedId; ', ''), iif(InvalidorgSourcedId, 'Invalid Org SourcedId; ', ''), iif(Invalidrole, 'Invalid Role; ', '') )) ~> RolesErrors",
                        "SDSVnextUsersErrorLog, OrgsErrors, RolesErrors union(byName: true)~> union1",
                        "union1 derive(date = currentUTC()) ~> derivedColumn1",
                        "derivedColumn1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     partitionFileNames:['validation.log'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          date,",
                        "          sourcedId,",
                        "          type,",
                        "          errors",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> AllErrors",
                        "splitInvalidOrgs@InvalidOrgsRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          name as string,",
                        "          type as string",
                        "     ),",
                        "     partitionFileNames:['invalid_Orgs_Records.csv.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          name,",
                        "          type",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> InvalidOrgs",
                        "splitInvalidOrgs@ValidOrgsRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          name as string,",
                        "          type as string",
                        "     ),",
                        "     partitionFileNames:['orgs.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          name,",
                        "          type",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> ValidOrgs",
                        "splitInvalidRoles@InvalidRolesRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          userSourcedId as string,",
                        "          orgSourcedId as string,",
                        "          role as string,",
                        "          sessionSourcedId as string,",
                        "          grade as string,",
                        "          isPrimary as string,",
                        "          roleStartDate as string,",
                        "          roleEndDate as string",
                        "     ),",
                        "     partitionFileNames:['invalid_Roles_Records.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          userSourcedId,",
                        "          orgSourcedId,",
                        "          role",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> InvalidRoles",
                        "splitInvalidRoles@ValidRolesRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          userSourcedId as string,",
                        "          orgSourcedId as string,",
                        "          role as string,",
                        "          sessionSourcedId as string,",
                        "          grade as string,",
                        "          isPrimary as string,",
                        "          roleStartDate as string,",
                        "          roleEndDate as string",
                        "     ),",
                        "     partitionFileNames:['roles.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          userSourcedId,",
                        "          orgSourcedId,",
                        "          role",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> ValidRoles"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDSVNext_Validation_Errors')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Orgs')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Roles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/validate_SDS_Vnext_NewUsers')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Vnext_Users",
                                "type": "DatasetReference"
                            },
                            "name": "sourceSDSVnextUsers"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDSVNext_Validation_Errors",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidUserRecordsLogs"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Vnext_Users",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidUsersRecords"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Vnext_Users",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidRecords"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "userValidations"
                        },
                        {
                            "name": "split1"
                        },
                        {
                            "name": "derivedColumn"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     sdsStorageFolder as string",
                        "}",
                        "source(output(",
                        "          sourcedId as string,",
                        "          familyName as string,",
                        "          givenName as string,",
                        "          username as string,",
                        "          email as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/users.csv'))]) ~> sourceSDSVnextUsers",
                        "sourceSDSVnextUsers derive(invalidSourcedId = isNull(sourcedId) || length(sourcedId)==0,",
                        "          invalidUserName = isNull(username) || length(username)==0,",
                        "          invalidFamilyName = isNull(familyName) || length(familyName)==0,",
                        "          invalidGivenName = isNull(givenName) || length(givenName)==0) ~> userValidations",
                        "userValidations split(invalidSourcedId || invalidUserName || invalidFamilyName || invalidGivenName,",
                        "     disjoint: false) ~> split1@(invalidRecords, validRecords)",
                        "split1@invalidRecords derive(sourcedId = sourcedId,",
                        "          type = \"users\",",
                        "          errors = concat(iif(invalidSourcedId, 'Invalid SourcedId; ', ''),iif(invalidUserName, 'Invalid User Name; ', ''), iif(invalidFamilyName, 'Invalid Family Name; ', ''), iif(invalidGivenName, 'Invalid Given Name; ', '')),",
                        "          date = currentUTC()) ~> derivedColumn",
                        "derivedColumn sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     partitionFileNames:['validation.log'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          type,",
                        "          errors,",
                        "          date",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkInvalidUserRecordsLogs",
                        "split1@invalidRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          familyName as string,",
                        "          givenName as string,",
                        "          username as string,",
                        "          email as string",
                        "     ),",
                        "     partitionFileNames:['invalid_user_records.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          familyName,",
                        "          givenName,",
                        "          username,",
                        "          email",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkInvalidUsersRecords",
                        "split1@validRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          familyName as string,",
                        "          givenName as string,",
                        "          username as string,",
                        "          email as string",
                        "     ),",
                        "     partitionFileNames:['users.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          familyName,",
                        "          givenName,",
                        "          username,",
                        "          email",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkValidRecords"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDS_Vnext_Users')]",
                "[concat(variables('factoryId'), '/datasets/SDSVNext_Validation_Errors')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/schoologyUsers_to_SDSVnext_OldUsers_csv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "Schoology_Users_CSV",
                                "type": "DatasetReference"
                            },
                            "name": "SchoologyUsers"
                        },
                        {
                            "dataset": {
                                "referenceName": "Schoology_Parents_CSV",
                                "type": "DatasetReference"
                            },
                            "name": "SchoologyParents"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Vnext_Users",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVnextUsers"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "union1"
                        },
                        {
                            "name": "selectRequiredFields"
                        },
                        {
                            "name": "deriveUsername"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          {First Name} as string,",
                        "          {Middle Name} as string,",
                        "          {Last Name} as string,",
                        "          {Unique User ID} as string,",
                        "          Role as string,",
                        "          School as string,",
                        "          {Grade Level} as string,",
                        "          {Additional Schools} as string,",
                        "          Email as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> SchoologyUsers",
                        "source(output(",
                        "          {First Name} as string,",
                        "          {Middle Name} as string,",
                        "          {Last Name} as string,",
                        "          {Unique User ID} as string,",
                        "          Role as string,",
                        "          School as string,",
                        "          {Grade Level} as string,",
                        "          {Additional School} as string,",
                        "          Email as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: true) ~> SchoologyParents",
                        "SchoologyUsers, SchoologyParents union(byName: true)~> union1",
                        "deriveUsername select(mapColumn(",
                        "          sourcedId = {Unique User ID},",
                        "          username,",
                        "          email = Email",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectRequiredFields",
                        "union1 derive(username = iif(equals({Role}, 'PARENT'), trim({Unique User ID}), split({Email}, '@')[1]),",
                        "          {Unique User ID} = trim({Unique User ID})) ~> deriveUsername",
                        "selectRequiredFields sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          familyName as string,",
                        "          givenName as string,",
                        "          username as string,",
                        "          email as string",
                        "     ),",
                        "     partitionFileNames:['users.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          username,",
                        "          email",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> SDSVnextUsers"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Schoology_Users_CSV')]",
                "[concat(variables('factoryId'), '/datasets/Schoology_Parents_CSV')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Vnext_Users')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/schoologyParentAssociations_to_SDSVnextRelationships_csv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "Schoology_Parent_Associations_CSV",
                                "type": "DatasetReference"
                            },
                            "name": "sourceRelationships",
                            "description": "Import data from Schoology_Parent_Associations"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Relationships",
                                "type": "DatasetReference"
                            },
                            "name": "sinkSDSVnextRelationships"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "deriveRelationshipRole"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          ParentID as string,",
                        "          StudentID as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> sourceRelationships",
                        "sourceRelationships derive(relationshipRole = \"parent\") ~> deriveRelationshipRole",
                        "deriveRelationshipRole sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          userSourcedId as string,",
                        "          relationshipUserSourcedId as string,",
                        "          relationshipRole as string",
                        "     ),",
                        "     partitionFileNames:['relationships.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          userSourcedId = StudentID,",
                        "          relationshipUserSourcedId = ParentID,",
                        "          relationshipRole",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkSDSVnextRelationships"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Schoology_Parent_Associations_CSV')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Relationships')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/schoologyCourses_to_SDSVnextCourses_csv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "Schoology_Courses_CSV",
                                "type": "DatasetReference"
                            },
                            "name": "SchoologyCourses"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Courses",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVnextCourses",
                            "rejectedDataLinkedService": {
                                "referenceName": "stsdsvnext",
                                "type": "LinkedServiceReference"
                            }
                        }
                    ],
                    "transformations": [
                        {
                            "name": "selectRequiredColumns"
                        },
                        {
                            "name": "deriveTitle"
                        },
                        {
                            "name": "removeDuplicateCourses"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          {Course Name} as string,",
                        "          {Course Code} as string,",
                        "          {Section Name} as string,",
                        "          {Section School Code} as string,",
                        "          {School Building} as string,",
                        "          {Grading Periods} as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> SchoologyCourses",
                        "removeDuplicateCourses select(mapColumn(",
                        "          schoology_course_code = {Course Code},",
                        "          schoology_course_name = {Course Name},",
                        "          schoology_school_building = {School Building}",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectRequiredColumns",
                        "selectRequiredColumns derive(title = concatWS('_', schoology_course_name, schoology_course_code)) ~> deriveTitle",
                        "SchoologyCourses aggregate(groupBy({Course Code},",
                        "          {Course Name},",
                        "          {School Building}),",
                        "     each(match(!in(['Course Code','Course Name','School Building'],'Course Code')), $$ = first($$))) ~> removeDuplicateCourses",
                        "deriveTitle sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          orgSourcedId as string,",
                        "          title as string,",
                        "          code as string,",
                        "          schoolYearSourcedId as string,",
                        "          subject as string,",
                        "          grade as string",
                        "     ),",
                        "     partitionFileNames:['courses.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId = schoology_course_code,",
                        "          orgSourcedId = schoology_school_building,",
                        "          title",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> SDSVnextCourses"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Schoology_Courses_CSV')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Courses')]",
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Validate_SDSVnext_Relationships')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Relationships",
                                "type": "DatasetReference"
                            },
                            "name": "sourceSDSVnextRelationships"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVNext_Validation_Errors",
                                "type": "DatasetReference"
                            },
                            "name": "sourceErrorLog"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDSVNext_Validation_Errors",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidationErrorLog"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Relationships",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidRelationshipRecords"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Relationships",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidRelationshipRecords"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "derivedColumn1"
                        },
                        {
                            "name": "split1"
                        },
                        {
                            "name": "derivedColumn2"
                        },
                        {
                            "name": "union1"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     sdsStorageFolder as string",
                        "}",
                        "source(output(",
                        "          userSourcedId as string,",
                        "          relationshipUserSourcedId as string,",
                        "          relationshipRole as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/relationships.csv'))]) ~> sourceSDSVnextRelationships",
                        "source(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/validation.log'))]) ~> sourceErrorLog",
                        "sourceSDSVnextRelationships derive(invalidUserSourcedId = isNull(userSourcedId) || length(userSourcedId)==0,",
                        "          invalidRelationshipUserSourcedId = isNull(relationshipUserSourcedId) || length(relationshipUserSourcedId) == 0,",
                        "          invalidRelationshipRole = isNull(relationshipRole) || length(relationshipRole) == 0) ~> derivedColumn1",
                        "derivedColumn1 split(invalidUserSourcedId || invalidRelationshipUserSourcedId || invalidRelationshipRole,",
                        "     disjoint: false) ~> split1@(invalidRelationshipRecords, validRelationshipRecords)",
                        "split1@invalidRelationshipRecords derive(sourcedId = userSourcedId,",
                        "          type = \"demographics\",",
                        "          error = concat(iif(invalidUserSourcedId, 'Invalid User SourcedId; ', ''), iif(invalidRelationshipUserSourcedId, 'Invalid Relationship User SourcedId; ', ''), iif(invalidRelationshipRole, 'Invalid Relationship Role; ', ''))) ~> derivedColumn2",
                        "derivedColumn2, sourceErrorLog union(byName: true)~> union1",
                        "union1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     partitionFileNames:['validation.log'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          type,",
                        "          error",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkValidationErrorLog",
                        "split1@invalidRelationshipRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          userSourcedId as string,",
                        "          relationshipUserSourcedId as string,",
                        "          relationshipRole as string",
                        "     ),",
                        "     partitionFileNames:['invalid_relationships_records.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          userSourcedId,",
                        "          relationshipUserSourcedId,",
                        "          relationshipRole",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkInvalidRelationshipRecords",
                        "split1@validRelationshipRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          userSourcedId as string,",
                        "          relationshipUserSourcedId as string,",
                        "          relationshipRole as string",
                        "     ),",
                        "     partitionFileNames:['relationships.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          userSourcedId,",
                        "          relationshipUserSourcedId,",
                        "          relationshipRole",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkValidRelationshipRecords"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Relationships')]",
                "[concat(variables('factoryId'), '/datasets/SDSVNext_Validation_Errors')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Validate_SDSVnext_Demographics')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Demographics",
                                "type": "DatasetReference"
                            },
                            "name": "sourceSDSVnextDemographics"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVNext_Validation_Errors",
                                "type": "DatasetReference"
                            },
                            "name": "sourceErrorLog"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDSVNext_Validation_Errors",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidationErrorLog"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Demographics",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidDemographicsRecords"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Demographics",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidDemographicsRecords"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "derivedColumn1"
                        },
                        {
                            "name": "split1"
                        },
                        {
                            "name": "derivedColumn2"
                        },
                        {
                            "name": "union1"
                        },
                        {
                            "name": "derivedColumn3"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     sdsStorageFolder as string",
                        "}",
                        "source(output(",
                        "          userSourcedId as string,",
                        "          sex as string,",
                        "          birthDate as string,",
                        "          birthCity as string,",
                        "          birthState as string,",
                        "          birthCountry as string,",
                        "          ethnicityCodes as string,",
                        "          raceCodes as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/demographics.csv'))]) ~> sourceSDSVnextDemographics",
                        "source(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/validation.log'))]) ~> sourceErrorLog",
                        "sourceSDSVnextDemographics derive(invalidUserSourcedId = isNull(userSourcedId) || length(userSourcedId)==0) ~> derivedColumn1",
                        "derivedColumn1 split(invalidUserSourcedId,",
                        "     disjoint: false) ~> split1@(invalidUserRecords, validUserRecords)",
                        "split1@invalidUserRecords derive(sourcedId = userSourcedId,",
                        "          type = \"demographics\",",
                        "          errors = concat(iif(invalidUserSourcedId, 'Invalid User SourcedId; ', ''))) ~> derivedColumn2",
                        "derivedColumn2, sourceErrorLog union(byName: true)~> union1",
                        "union1 derive(date = currentUTC()) ~> derivedColumn3",
                        "derivedColumn3 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     partitionFileNames:['validation.log'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          type,",
                        "          errors,",
                        "          date",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkValidationErrorLog",
                        "split1@invalidUserRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          userSourcedId as string,",
                        "          sex as string,",
                        "          birthDate as string,",
                        "          birthCity as string,",
                        "          birthState as string,",
                        "          birthCountry as string,",
                        "          ethnicityCodes as string,",
                        "          raceCodes as string",
                        "     ),",
                        "     partitionFileNames:['invalid_demographics_records.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          userSourcedId,",
                        "          sex,",
                        "          birthDate,",
                        "          birthCity,",
                        "          birthState,",
                        "          birthCountry,",
                        "          ethnicityCodes,",
                        "          raceCodes",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkInvalidDemographicsRecords",
                        "split1@validUserRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          userSourcedId as string,",
                        "          sex as string,",
                        "          birthDate as string,",
                        "          birthCity as string,",
                        "          birthState as string,",
                        "          birthCountry as string,",
                        "          ethnicityCodes as string,",
                        "          raceCodes as string",
                        "     ),",
                        "     partitionFileNames:['demographics.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          userSourcedId,",
                        "          sex,",
                        "          birthDate,",
                        "          birthCity,",
                        "          birthState,",
                        "          birthCountry,",
                        "          ethnicityCodes,",
                        "          raceCodes",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkValidDemographicsRecords"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Demographics')]",
                "[concat(variables('factoryId'), '/datasets/SDSVNext_Validation_Errors')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/validate_SDS_Vnext_OldUsers')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Vnext_Users",
                                "type": "DatasetReference"
                            },
                            "name": "sourceSDSVnextUsers"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDSVNext_Validation_Errors",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidUserRecordsLogs"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Vnext_Users",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidUsersRecords"
                        },
                        {
                            "dataset": {
                                "referenceName": "Schoology_Users",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidRecords"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "userValidations"
                        },
                        {
                            "name": "split1"
                        },
                        {
                            "name": "derivedColumn"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     sdsStorageFolder as string",
                        "}",
                        "source(output(",
                        "          sourcedId as string,",
                        "          familyName as string,",
                        "          givenName as string,",
                        "          username as string,",
                        "          email as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/users.csv'))]) ~> sourceSDSVnextUsers",
                        "sourceSDSVnextUsers derive(invalidSourcedId = isNull(sourcedId) || length(sourcedId)==0,",
                        "          invalidUserName = isNull(username) || length(username)==0) ~> userValidations",
                        "userValidations split(invalidSourcedId || invalidUserName,",
                        "     disjoint: false) ~> split1@(invalidRecords, validRecords)",
                        "split1@invalidRecords derive(sourcedId = sourcedId,",
                        "          type = \"users\",",
                        "          errors = concat(iif(invalidSourcedId, 'Invalid SourcedId; ', ''),iif(invalidUserName, 'Invalid User Name; ', '')),",
                        "          date = currentUTC()) ~> derivedColumn",
                        "derivedColumn sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     partitionFileNames:['validation.log'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          type,",
                        "          errors,",
                        "          date",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkInvalidUserRecordsLogs",
                        "split1@invalidRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          familyName as string,",
                        "          givenName as string,",
                        "          username as string,",
                        "          email as string",
                        "     ),",
                        "     partitionFileNames:['invalid_user_records.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          username,",
                        "          email",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkInvalidUsersRecords",
                        "split1@validRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          user as (uid as string, id as integer, school_id as integer, synced as integer, school_uid as string, name_title as string, name_title_show as integer, name_first as string, name_first_preferred as string, use_preferred_first_name as string, name_middle as string, name_middle_show as integer, name_last as string, name_display as string, username as string, primary_email as string, picture_url as string, gender as string, position as string, grad_year as string, password as string, role_id as integer, tz_offset as integer, tz_name as string, parents as string, child_uids as string, language as string, additional_buildings as string)[],",
                        "          total as string,",
                        "          links as (self as string, next as string, prev as string)",
                        "     ),",
                        "     partitionFileNames:['users.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          username,",
                        "          email",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkValidRecords"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDS_Vnext_Users')]",
                "[concat(variables('factoryId'), '/datasets/SDSVNext_Validation_Errors')]",
                "[concat(variables('factoryId'), '/datasets/Schoology_Users')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDSVnext_Roster_Files_Validation')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "SDSVNext_Validation_Errors",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVnextUsersErrorLog"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Courses",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVNextCourses"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Classes",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVnextClasses"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Enrollments",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVNextEnrollments"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Orgs",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVNextOrgs"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Roles",
                                "type": "DatasetReference"
                            },
                            "name": "SDSVNextRoles"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDSVNext_Validation_Errors",
                                "type": "DatasetReference"
                            },
                            "name": "AllErrors"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Courses",
                                "type": "DatasetReference"
                            },
                            "name": "InvalidCourses"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Courses",
                                "type": "DatasetReference"
                            },
                            "name": "ValidCourses"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Classes",
                                "type": "DatasetReference"
                            },
                            "name": "InvalidClasses"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Classes",
                                "type": "DatasetReference"
                            },
                            "name": "ValidClasses"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Enrollments",
                                "type": "DatasetReference"
                            },
                            "name": "InvalidEnrollments"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Enrollments",
                                "type": "DatasetReference"
                            },
                            "name": "ValidEnrollments"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Orgs",
                                "type": "DatasetReference"
                            },
                            "name": "InvalidOrgs"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Orgs",
                                "type": "DatasetReference"
                            },
                            "name": "ValidOrgs"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Roles",
                                "type": "DatasetReference"
                            },
                            "name": "InvalidRoles"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDSVnext_Roles",
                                "type": "DatasetReference"
                            },
                            "name": "ValidRoles"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "DefineInvalidCourses"
                        },
                        {
                            "name": "splitInvalidCourses"
                        },
                        {
                            "name": "CourseErrors"
                        },
                        {
                            "name": "DefineInvalidClasses"
                        },
                        {
                            "name": "splitInvalidClasses"
                        },
                        {
                            "name": "ClassesErrors"
                        },
                        {
                            "name": "DefineInvalidEnrollments"
                        },
                        {
                            "name": "splitInvalidEnrollments"
                        },
                        {
                            "name": "EnrollmentsErrors"
                        },
                        {
                            "name": "DefineInvalidOrgs"
                        },
                        {
                            "name": "splitInvalidOrgs"
                        },
                        {
                            "name": "OrgsErrors"
                        },
                        {
                            "name": "DefineInvalidRoles"
                        },
                        {
                            "name": "splitInvalidRoles"
                        },
                        {
                            "name": "RolesErrors"
                        },
                        {
                            "name": "union1"
                        },
                        {
                            "name": "derivedColumn1"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     sdsStorageFolder as string",
                        "}",
                        "source(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder, '/validation.log'))]) ~> SDSVnextUsersErrorLog",
                        "source(output(",
                        "          sourcedId as string,",
                        "          orgSourcedId as string,",
                        "          title as string,",
                        "          code as string,",
                        "          schoolYearSourcedId as string,",
                        "          subject as string,",
                        "          grade as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/courses.csv'))]) ~> SDSVNextCourses",
                        "source(output(",
                        "          sourcedId as string,",
                        "          courseSourcedId as string,",
                        "          orgSourcedId as string,",
                        "          title as string,",
                        "          code as string,",
                        "          sessionSourcedId as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/classes.csv'))]) ~> SDSVnextClasses",
                        "source(output(",
                        "          classSourcedId as string,",
                        "          userSourcedId as string,",
                        "          role as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/enrollments.csv'))]) ~> SDSVNextEnrollments",
                        "source(output(",
                        "          sourcedId as string,",
                        "          name as string,",
                        "          type as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/orgs.csv'))]) ~> SDSVNextOrgs",
                        "source(output(",
                        "          userSourcedId as string,",
                        "          orgSourcedId as string,",
                        "          role as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/roles.csv'))]) ~> SDSVNextRoles",
                        "SDSVNextCourses derive(InvalidSourcedId = isNull(sourcedId)||length(sourcedId)==0,",
                        "          InvalidorgSourcedId = isNull(orgSourcedId)||length(orgSourcedId)==0,",
                        "          Invalidtitle = isNull(title)||length(title)==0) ~> DefineInvalidCourses",
                        "DefineInvalidCourses split(InvalidSourcedId||InvalidorgSourcedId||Invalidtitle,",
                        "     disjoint: false) ~> splitInvalidCourses@(InvalidCourseRecords, ValidCourseRecords)",
                        "splitInvalidCourses@InvalidCourseRecords derive(sourcedId = sourcedId,",
                        "          type = \"courses\",",
                        "          errors = concat( iif(InvalidSourcedId, \"Invalid source id: \", \"\"), iif(InvalidorgSourcedId, \"Invalid Org source id: \", \"\"),iif(Invalidtitle, \"Inavlid tiltle: \", \"\"))) ~> CourseErrors",
                        "SDSVnextClasses derive(InvalidSourcedId = isNull(sourcedId)||length(sourcedId)==0,",
                        "          InvalidorgSourcedId = isNull(orgSourcedId)||length(orgSourcedId)==0,",
                        "          Invalidtitle = isNull(title)||length(title)==0) ~> DefineInvalidClasses",
                        "DefineInvalidClasses split(InvalidSourcedId||InvalidorgSourcedId||Invalidtitle,",
                        "     disjoint: false) ~> splitInvalidClasses@(InvalidClassRecords, ValidClassRecords)",
                        "splitInvalidClasses@InvalidClassRecords derive(sourcedId = sourcedId,",
                        "          type = \"classes\",",
                        "          errors = concat( iif(InvalidSourcedId, \"Invalid source id: \", \"\"), iif(InvalidorgSourcedId, \"Invalid Org source id: \", \"\"),iif(Invalidtitle, \"Inavlid tiltle: \", \"\"))) ~> ClassesErrors",
                        "SDSVNextEnrollments derive(InvalidclassSourcedId = isNull(classSourcedId)||length(classSourcedId)==0,",
                        "          InvaliduserSourcedId = isNull(userSourcedId)||length(userSourcedId)==0,",
                        "          InvalidRole = isNull(role)||length(role)==0) ~> DefineInvalidEnrollments",
                        "DefineInvalidEnrollments split(InvalidclassSourcedId||InvaliduserSourcedId||InvalidRole,",
                        "     disjoint: false) ~> splitInvalidEnrollments@(InvalidEnrollmentsRecords, ValidEnrollmentsRecords)",
                        "splitInvalidEnrollments@InvalidEnrollmentsRecords derive(sourcedId = userSourcedId,",
                        "          type = \"enrollments\",",
                        "          errors = concat(    iif(InvaliduserSourcedId, 'Invalid User SourcedId; ', ''),     iif(InvalidclassSourcedId, 'Invalid Class SourcedId; ', ''), iif(InvalidRole, 'Invalid Role; ', ''))) ~> EnrollmentsErrors",
                        "SDSVNextOrgs derive(InvalidsourcedId = isNull(sourcedId)||length(sourcedId)==0,",
                        "          Invalidname = isNull(name)||length(name)==0,",
                        "          invalidType = isNull(type)||length(type)==0) ~> DefineInvalidOrgs",
                        "DefineInvalidOrgs split(InvalidsourcedId||Invalidname||invalidType,",
                        "     disjoint: false) ~> splitInvalidOrgs@(InvalidOrgsRecords, ValidOrgsRecords)",
                        "splitInvalidOrgs@InvalidOrgsRecords derive(sourcedId = sourcedId,",
                        "          type = \"orgs\",",
                        "          errors = concat(iif(InvalidsourcedId, 'Invalid SourcedId; ', ''))) ~> OrgsErrors",
                        "SDSVNextRoles derive(InvaliduserSourcedId = isNull(userSourcedId)||length(userSourcedId)==0,",
                        "          InvalidorgSourcedId = isNull(orgSourcedId)||length(orgSourcedId)==0,",
                        "          Invalidrole = isNull(role)||length(role)==0) ~> DefineInvalidRoles",
                        "DefineInvalidRoles split(InvaliduserSourcedId||InvalidorgSourcedId||Invalidrole,",
                        "     disjoint: false) ~> splitInvalidRoles@(InvalidRolesRecords, ValidRolesRecords)",
                        "splitInvalidRoles@InvalidRolesRecords derive(sourcedId = userSourcedId,",
                        "          type = \"roles\",",
                        "          errors = concat( iif(InvaliduserSourcedId, 'Invalid User SourcedId; ', ''), iif(InvalidorgSourcedId, 'Invalid Org SourcedId; ', ''), iif(Invalidrole, 'Invalid Role; ', '') )) ~> RolesErrors",
                        "SDSVnextUsersErrorLog, CourseErrors, ClassesErrors, EnrollmentsErrors, OrgsErrors, RolesErrors union(byName: true)~> union1",
                        "union1 derive(date = currentUTC()) ~> derivedColumn1",
                        "derivedColumn1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     partitionFileNames:['validation.log'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          type,",
                        "          date,",
                        "          errors",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> AllErrors",
                        "splitInvalidCourses@InvalidCourseRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          orgSourcedId as string,",
                        "          title as string,",
                        "          code as string,",
                        "          schoolYearSourcedId as string,",
                        "          subject as string,",
                        "          grade as string",
                        "     ),",
                        "     partitionFileNames:['invalid_Courses.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          orgSourcedId,",
                        "          title,",
                        "          code,",
                        "          schoolYearSourcedId,",
                        "          subject,",
                        "          grade",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> InvalidCourses",
                        "splitInvalidCourses@ValidCourseRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          orgSourcedId as string,",
                        "          title as string,",
                        "          code as string,",
                        "          schoolYearSourcedId as string,",
                        "          subject as string,",
                        "          grade as string",
                        "     ),",
                        "     partitionFileNames:['courses.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          orgSourcedId,",
                        "          title,",
                        "          code,",
                        "          schoolYearSourcedId,",
                        "          subject,",
                        "          grade",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> ValidCourses",
                        "splitInvalidClasses@InvalidClassRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          orgSourcedId as string,",
                        "          title as string,",
                        "          sessionSourcedIds as string,",
                        "          courseSourcedId as string",
                        "     ),",
                        "     partitionFileNames:['Invalid_Classes.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> InvalidClasses",
                        "splitInvalidClasses@ValidClassRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          orgSourcedId as string,",
                        "          title as string,",
                        "          sessionSourcedIds as string,",
                        "          courseSourcedId as string",
                        "     ),",
                        "     partitionFileNames:['classes.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          orgSourcedId,",
                        "          title,",
                        "          courseSourcedId",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> ValidClasses",
                        "splitInvalidEnrollments@InvalidEnrollmentsRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          classSourcedId as string,",
                        "          userSourcedId as string,",
                        "          role as string",
                        "     ),",
                        "     partitionFileNames:['Invalid_Enrollments.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          classSourcedId,",
                        "          userSourcedId,",
                        "          role",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> InvalidEnrollments",
                        "splitInvalidEnrollments@ValidEnrollmentsRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          classSourcedId as string,",
                        "          userSourcedId as string,",
                        "          role as string",
                        "     ),",
                        "     partitionFileNames:['enrollments.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          classSourcedId,",
                        "          userSourcedId,",
                        "          role",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> ValidEnrollments",
                        "splitInvalidOrgs@InvalidOrgsRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          name as string,",
                        "          type as string",
                        "     ),",
                        "     partitionFileNames:['Invalid_Orgs.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          name,",
                        "          type",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> InvalidOrgs",
                        "splitInvalidOrgs@ValidOrgsRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          name as string,",
                        "          type as string",
                        "     ),",
                        "     partitionFileNames:['orgs.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          name,",
                        "          type",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> ValidOrgs",
                        "splitInvalidRoles@InvalidRolesRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          userSourcedId as string,",
                        "          orgSourcedId as string,",
                        "          role as string,",
                        "          sessionSourcedId as string,",
                        "          grade as string,",
                        "          isPrimary as string,",
                        "          roleStartDate as string,",
                        "          roleEndDate as string",
                        "     ),",
                        "     partitionFileNames:['Invalid_Roles.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          userSourcedId,",
                        "          orgSourcedId,",
                        "          role",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> InvalidRoles",
                        "splitInvalidRoles@ValidRolesRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          userSourcedId as string,",
                        "          orgSourcedId as string,",
                        "          role as string,",
                        "          sessionSourcedId as string,",
                        "          grade as string,",
                        "          isPrimary as string,",
                        "          roleStartDate as string,",
                        "          roleEndDate as string",
                        "     ),",
                        "     partitionFileNames:['roles.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          userSourcedId,",
                        "          orgSourcedId,",
                        "          role",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> ValidRoles"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDSVNext_Validation_Errors')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Courses')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Classes')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Enrollments')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Orgs')]",
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Roles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDSVnext_Classes')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS_Vnext_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "sourcedId",
                        "type": "String"
                    },
                    {
                        "name": "orgSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "title",
                        "type": "String"
                    },
                    {
                        "name": "sessionSourcedIds",
                        "type": "String"
                    },
                    {
                        "name": "courseSourcedId",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDSVnext_Enrollments')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS_Vnext_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "classSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "userSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "role",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDSVnext_Orgs')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "StorageContainer": {
                        "type": "string"
                    },
                    "StorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS_Vnext_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().StorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().StorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "sourcedId",
                        "type": "String"
                    },
                    {
                        "name": "name",
                        "type": "String"
                    },
                    {
                        "name": "type",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Schoology_Import_CSVs')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "schoologyImportCsvPath": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Schoology_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": {
                            "value": "@dataset().schoologyImportCsvPath",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Schoology_Users_CSV')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Schoology_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().fileName",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "First Name",
                        "type": "String"
                    },
                    {
                        "name": "Middle Name",
                        "type": "String"
                    },
                    {
                        "name": "Last Name",
                        "type": "String"
                    },
                    {
                        "name": "Unique User ID",
                        "type": "String"
                    },
                    {
                        "name": "Role",
                        "type": "String"
                    },
                    {
                        "name": "School",
                        "type": "String"
                    },
                    {
                        "name": "Grade Level",
                        "type": "String"
                    },
                    {
                        "name": "Additional Schools",
                        "type": "String"
                    },
                    {
                        "name": "Email",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Schoology_CSV_Sink_Data')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "container": {
                        "type": "string"
                    },
                    "folder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Schoology_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().folder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().container",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDSVnext_Demographics')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS_Vnext_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "userSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "sex",
                        "type": "String"
                    },
                    {
                        "name": "birthDate",
                        "type": "String"
                    },
                    {
                        "name": "birthCity",
                        "type": "String"
                    },
                    {
                        "name": "birthState",
                        "type": "String"
                    },
                    {
                        "name": "birthCountry",
                        "type": "String"
                    },
                    {
                        "name": "ethnicityCodes",
                        "type": "String"
                    },
                    {
                        "name": "raceCodes",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDSVnext_AcademicSessions')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS_Vnext_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "sourcedId",
                        "type": "String"
                    },
                    {
                        "name": "title",
                        "type": "String"
                    },
                    {
                        "name": "type",
                        "type": "String"
                    },
                    {
                        "name": "schoolYear",
                        "type": "String"
                    },
                    {
                        "name": "startDate",
                        "type": "String"
                    },
                    {
                        "name": "endDate",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Schoology_Users')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Schoology_Datasets"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@{dataset().sdsStorageFolder}",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    }
                },
                "schema": {
                    "type": "object",
                    "properties": {
                        "user": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uid": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "integer"
                                    },
                                    "school_id": {
                                        "type": "integer"
                                    },
                                    "synced": {
                                        "type": "integer"
                                    },
                                    "school_uid": {
                                        "type": "string"
                                    },
                                    "name_title": {
                                        "type": "string"
                                    },
                                    "name_title_show": {
                                        "type": "integer"
                                    },
                                    "name_first": {
                                        "type": "string"
                                    },
                                    "name_first_preferred": {
                                        "type": "string"
                                    },
                                    "use_preferred_first_name": {
                                        "type": "string"
                                    },
                                    "name_middle": {
                                        "type": "string"
                                    },
                                    "name_middle_show": {
                                        "type": "integer"
                                    },
                                    "name_last": {
                                        "type": "string"
                                    },
                                    "name_display": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "primary_email": {
                                        "type": "string"
                                    },
                                    "picture_url": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "null"
                                    },
                                    "position": {
                                        "type": "null"
                                    },
                                    "grad_year": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "role_id": {
                                        "type": "integer"
                                    },
                                    "tz_offset": {
                                        "type": "integer"
                                    },
                                    "tz_name": {
                                        "type": "string"
                                    },
                                    "parents": {
                                        "type": "null"
                                    },
                                    "child_uids": {
                                        "type": "null"
                                    },
                                    "language": {
                                        "type": "string"
                                    },
                                    "additional_buildings": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "total": {
                            "type": "string"
                        },
                        "links": {
                            "type": "object",
                            "properties": {
                                "self": {
                                    "type": "string"
                                },
                                "next": {
                                    "type": "string"
                                },
                                "prev": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDS_Grade_Values')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "SDS_GradeValues.csv",
                        "fileSystem": "gradevalues"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "Schoology_Grade",
                        "type": "String"
                    },
                    {
                        "name": "SDS_Grade_Levels_Description",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDSVnext_Roles')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS_Vnext_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "userSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "orgSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "role",
                        "type": "String"
                    },
                    {
                        "name": "sessionSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "grade",
                        "type": "String"
                    },
                    {
                        "name": "isPrimary",
                        "type": "String"
                    },
                    {
                        "name": "roleStartDate",
                        "type": "String"
                    },
                    {
                        "name": "roleEndDate",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDS_Course_Subject_AreaValues')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "SDSSubjectAreaValues.csv",
                        "fileSystem": "subjectareacodes"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "Schoology_Course_Subject_Areas",
                        "type": "String"
                    },
                    {
                        "name": "Value",
                        "type": "String"
                    },
                    {
                        "name": "SDS_Subject_Description",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Schoology_Parent_Associations_CSV')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Schoology_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().fileName",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "ParentID",
                        "type": "String"
                    },
                    {
                        "name": "StudentID",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Schoology_Courses_CSV')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Schoology_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().fileName",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "Course Name",
                        "type": "String"
                    },
                    {
                        "name": "Course Code",
                        "type": "String"
                    },
                    {
                        "name": "Section Name",
                        "type": "String"
                    },
                    {
                        "name": "Section School Code",
                        "type": "String"
                    },
                    {
                        "name": "School Building",
                        "type": "String"
                    },
                    {
                        "name": "Grading Periods",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDSVNext_Validation_Errors')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS_Vnext_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDS_Vnext_Users')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS_Vnext_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "sourcedId",
                        "type": "String"
                    },
                    {
                        "name": "familyName",
                        "type": "String"
                    },
                    {
                        "name": "givenName",
                        "type": "String"
                    },
                    {
                        "name": "username",
                        "type": "String"
                    },
                    {
                        "name": "email",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Schoology_Parents_CSV')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Schoology_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().fileName",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "First Name",
                        "type": "String"
                    },
                    {
                        "name": "Middle Name",
                        "type": "String"
                    },
                    {
                        "name": "Last Name",
                        "type": "String"
                    },
                    {
                        "name": "Unique User ID",
                        "type": "String"
                    },
                    {
                        "name": "Role",
                        "type": "String"
                    },
                    {
                        "name": "School",
                        "type": "String"
                    },
                    {
                        "name": "Grade Level",
                        "type": "String"
                    },
                    {
                        "name": "Additional School",
                        "type": "String"
                    },
                    {
                        "name": "Email",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Schoology_Schools_CSV')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Schoology_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().fileName",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "Building Code",
                        "type": "String"
                    },
                    {
                        "name": "School Name",
                        "type": "String"
                    },
                    {
                        "name": "Address1",
                        "type": "String"
                    },
                    {
                        "name": "CIty",
                        "type": "String"
                    },
                    {
                        "name": "State",
                        "type": "String"
                    },
                    {
                        "name": "ZIP",
                        "type": "String"
                    },
                    {
                        "name": "Country",
                        "type": "String"
                    },
                    {
                        "name": "Phone",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDSVnext_Courses')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS_Vnext_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "sourcedId",
                        "type": "String"
                    },
                    {
                        "name": "orgSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "title",
                        "type": "String"
                    },
                    {
                        "name": "code",
                        "type": "String"
                    },
                    {
                        "name": "schoolYearSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "subject",
                        "type": "String"
                    },
                    {
                        "name": "grade",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDS_Vnext_Files')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS_Vnext_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": "sds"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": false,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Schoology_Enrollments_CSV')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Schoology_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().fileName",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "Course Code",
                        "type": "String"
                    },
                    {
                        "name": "Section School Code",
                        "type": "String"
                    },
                    {
                        "name": "User Unique ID",
                        "type": "String"
                    },
                    {
                        "name": "Role",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDSVnext_Relationships')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "stsdsvnext",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS_Vnext_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "userSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "relationshipUserSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "relationshipRole",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/stsdsvnext')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SDS_Vnext_storage')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SDSAzureDataLakeStorageGen2",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "sasUriParam": {
                            "value": "@dataset().sasUriParam",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "sasUriParam": {
                        "type": "string"
                    },
                    "dataConnectorId": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "containerId": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS_Vnext_Datasets"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@{dataset().dataConnectorId}/@{dataset().containerId}",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().tenantId",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": false,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SDSAzureDataLakeStorageGen2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Send_email_reports')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetClientSecretForSdsApi",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@{pipeline().globalParameters.ClientSecretForSdsApiKeyVaultUrl}?api-version=7.0",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "GetBearerToken",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GetClientSecretForSdsApi",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "https://login.microsoftonline.com/@{pipeline().globalParameters.tenantid}/oauth2/v2.0/token",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "grant_type=client_credentials&client_id=@{pipeline().globalParameters.entraAppclientId}&client_secret=@{activity('GetClientSecretForSdsApi').output.value}&scope=https://graph.microsoft.com/.default",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "If Condition1",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "GetBearerToken",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(length(pipeline().parameters.allFilesRecordCountArray), 3)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Set Body1",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "body1",
                                        "value": {
                                            "value": "@{pipeline().parameters.bodyHeader}\\n\\n\nRecord counts for sent files:\\n\norgs.csv - @{pipeline().parameters.requiredFilesRecordsCountArray[0]}\\n\nusers.csv - @{pipeline().parameters.requiredFilesRecordsCountArray[1]}\\n\nroles.csv - @{pipeline().parameters.requiredFilesRecordsCountArray[2]}\\n\\n\nValidation error count: @{pipeline().parameters.check_validation_errors}\\n\\n\n[Note that the record counts in this message have a max value of 5000 (or 4999 plus the header record), so treat a count of 5000 (or 4999) to signify a record count that is some value greater than 5000.]",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "sendMail_copy1",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Body1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            },
                                            "Content-Type": "application/json"
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/v1.0/users/@{pipeline().globalParameters.reportSendAsUPN}/sendMail",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\"message\":{\"subject\":\"@{pipeline().parameters.subject}\",\"body\":{\"contentType\":\"Text\",\"content\":\"@{variables('body1')}\"},\"toRecipients\":@{pipeline().globalParameters.reportRecipientEmails}}}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Set Body",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "body",
                                        "value": {
                                            "value": "@{pipeline().parameters.bodyHeader}\\n\\n\nRecord counts for sent files:\\n\norgs.csv - @{pipeline().parameters.allFilesRecordCountArray[0]}\\n\nusers.csv - @{pipeline().parameters.allFilesRecordCountArray[1]}\\n\nroles.csv - @{pipeline().parameters.allFilesRecordCountArray[2]}\\n\ncourses.csv - @{pipeline().parameters.allFilesRecordCountArray[3]}\\n\nclasses.csv - @{pipeline().parameters.allFilesRecordCountArray[4]}\\n\nacademicSessions.csv - @{pipeline().parameters.allFilesRecordCountArray[5]}\\n\nenrollments.csv - @{pipeline().parameters.allFilesRecordCountArray[6]}\\n\ndemographics.csv - @{pipeline().parameters.allFilesRecordCountArray[7]}\\n\nrelationships.csv - @{pipeline().parameters.allFilesRecordCountArray[8]}\\n\\n\nValidation error count: @{pipeline().parameters.check_validation_errors}\\n\\n\n[Note that the record counts in this message have a max value of 5000 (or 4999 plus the header record), so treat a count of 5000 (or 4999) to signify a record count that is some value greater than 5000.]",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "sendMail",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Body",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            },
                                            "Content-Type": "application/json"
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/v1.0/users/@{pipeline().globalParameters.reportSendAsUPN}/sendMail",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\"message\":{\"subject\":\"@{pipeline().parameters.subject}\",\"body\":{\"contentType\":\"Text\",\"content\":\"@{variables('body')}\"},\"toRecipients\":@{pipeline().globalParameters.reportRecipientEmails}}}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "allFilesRecordCountArray": {
                        "type": "array"
                    },
                    "requiredFilesRecordsCountArray": {
                        "type": "array"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "check_validation_errors": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "bodyHeader": {
                        "type": "string"
                    }
                },
                "variables": {
                    "body": {
                        "type": "String"
                    },
                    "body1": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "sub_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-13T14:46:10Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Update_Groups_With_LTI_Data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "UpdateGroupWithLTI",
                        "type": "ForEach",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.sectionsArray",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "AddGrpLTIExtData",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "GetAADGroup",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "PATCH",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',pipeline().parameters.graphToken)",
                                                "type": "Expression"
                                            },
                                            "Content-Type": "application/json"
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/v1.0/groups/@{activity('GetAADGroup').output.value[0].id}",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{ \n    \"microsoft_EducationClassLmsExt\": { \n        \"ltiContextId\": \"@{item().id}\",\n        \"lmsCourseId\": \"@{item().course_id}\", \n        \"lmsSectionId\": \"@{item().id}\", \n        \"lmsCourseName\": \"@{item().course_title}\", \n        \"lmsSectionName\":  \"@{item().section_title}\"\n    }\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "GetAADGroup",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ', pipeline().parameters.graphToken)",
                                                "type": "Expression"
                                            },
                                            "Content-Type": "application/json"
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/v1.0/groups?$filter=extension_fe2174665583431c953114ff7268b7b3_Education_SyncSource_SectionId%20eq%20'@{replace(item().section_school_code, ' ', '_')}'",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "sectionsArray": {
                        "type": "array"
                    },
                    "graphToken": {
                        "type": "securestring"
                    }
                },
                "folder": {
                    "name": "sub_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-13T14:46:10Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Schoology_LTI_to_SDS_Classes')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetSchoologyOauthSignature",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@{pipeline().globalParameters.schoologyOauthSignature}?api-version=7.0",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "GetValidClasses",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": {
                                        "value": "classes.csv",
                                        "type": "Expression"
                                    },
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "SDSVnext_Classes",
                                "type": "DatasetReference",
                                "parameters": {
                                    "sdsStorageContainer": {
                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                        "type": "Expression"
                                    },
                                    "sdsStorageFolder": {
                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "TestFilter",
                        "description": "",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "GetValidClasses",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetValidClasses').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().sourcedId, '0041_A0101_231')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "GetClientSecretForSdsApi",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@{pipeline().globalParameters.ClientSecretForSdsApiKeyVaultUrl}?api-version=7.0",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "GetGraphToken",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GetClientSecretForSdsApi",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "https://login.microsoftonline.com/@{pipeline().globalParameters.tenantid}/oauth2/token",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "grant_type=client_credentials&client_id=@{pipeline().globalParameters.entraAppClientId}&client_secret=@{activity('GetClientSecretForSdsApi').output.value}&resource=00000003-0000-0000-c000-000000000000",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "BatchClasses",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "TestFilter",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetValidClasses').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "CreateNestedArray",
                                    "type": "IfCondition",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@less(length(variables('classBatch')), 50)",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "AddBatchToRow",
                                                "type": "AppendVariable",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "classes",
                                                    "value": {
                                                        "value": "@join(variables('classBatch'), ',')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "StartNewBatch",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "AddBatchToRow",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "classBatch",
                                                    "value": [
                                                        "@replace(item().sourcedId, '_', ' ')"
                                                    ]
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "AppendToBatch",
                                                "type": "AppendVariable",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "classBatch",
                                                    "value": {
                                                        "value": "@replace(item().sourcedId, '_', ' ')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "TransferLTIData",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetGraphToken",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetSchoologyOauthSignature",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "AddLastBatch",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('classes')",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "GetSchoologySectionsFromAPI",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {
                                            "Authorization": {
                                                "value": "OAuth realm=\"Schoology API\", oauth_consumer_key=@{pipeline().globalParameters.schoologyConsumerKey}, oauth_token=\"\", oauth_signature_method=\"PLAINTEXT\", oauth_timestamp=\"@{div(sub(ticks(utcnow()),ticks('1970-01-01')),10000000)}\", oauth_nonce=\"@{guid()}\", oauth_version=\"1.0\", oauth_signature=@{activity('GetSchoologyOauthSignature').output.value}",
                                                "type": "Expression"
                                            }
                                        },
                                        "url": {
                                            "value": "@{pipeline().globalParameters.schoologyBaseURL}/sections?section_school_codes=@{item()}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "UpdateGroupsWithLTI",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "FilterNoRecords",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Update_Groups_With_LTI_Data",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "sectionsArray": {
                                                "value": "@activity('GetSchoologySectionsFromAPI').output.section",
                                                "type": "Expression"
                                            },
                                            "graphToken": {
                                                "value": "@activity('GetGraphToken').output.access_token",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "FilterNoRecords",
                                    "type": "Filter",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSchoologySectionsFromAPI",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "items": {
                                            "value": "@activity('GetSchoologySectionsFromAPI').output.section",
                                            "type": "Expression"
                                        },
                                        "condition": {
                                            "value": "@not(empty(item()))",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "AddLastBatch",
                        "type": "AppendVariable",
                        "dependsOn": [
                            {
                                "activity": "BatchClasses",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "classes",
                            "value": {
                                "value": "@join(variables('classBatch'), ',')",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "variables": {
                    "classes": {
                        "type": "Array"
                    },
                    "classBatch": {
                        "type": "Array"
                    }
                },
                "folder": {
                    "name": "sub_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-13T14:46:12Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDSVnext_Classes')]",
                "[concat(variables('factoryId'), '/pipelines/Update_Groups_With_LTI_Data')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Get_Schoology_Import_CSVs')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "CopyImportCSVs",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFileName": "*",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "Schoology_Import_CSVs",
                                "type": "DatasetReference",
                                "parameters": {
                                    "schoologyImportCsvPath": {
                                        "value": "@pipeline().parameters.schoologyImportCsvPath",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Schoology_CSV_Sink_Data",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                        "type": "Expression"
                                    },
                                    "folder": {
                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "schoologyImportCsvPath": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "sub_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-13T14:46:12Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Schoology_Import_CSVs')]",
                "[concat(variables('factoryId'), '/datasets/Schoology_CSV_Sink_Data')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Upload_to_SDS_Vnext')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetClientSecretForSdsApi",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@{pipeline().globalParameters.ClientSecretForSdsApiKeyVaultUrl}?api-version=7.0",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "GetBearerToken",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GetClientSecretForSdsApi",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "https://login.microsoftonline.com/@{pipeline().globalParameters.tenantid}/oauth2/v2.0/token",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "grant_type=client_credentials&client_id=@{pipeline().globalParameters.entraAppClientId}&client_secret=@{activity('GetClientSecretForSdsApi').output.value}&scope=https://graph.microsoft.com/.default",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "GetUploadUrl",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "UntilInboundFlowReady",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {
                                "Authorization": {
                                    "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                    "type": "Expression"
                                }
                            },
                            "url": {
                                "value": "https://graph.microsoft.com/beta/external/industryData/dataConnectors/@{variables('dataConnectorId')}/microsoft.graph.industryData.azureDataLakeConnector/microsoft.graph.industryData.getUploadSession()",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "setUploadHost",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "GetUploadUrl",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "uploadHost",
                            "value": {
                                "value": "@split(activity('GetUploadUrl').output.sessionUrl,'/')[2]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "setContainerId",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "setUploadHost",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "containerId",
                            "value": {
                                "value": "@activity('GetUploadUrl').output.containerId",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "setUploadSessionSASToken",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "setContainerId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "uploadSessionSASToken",
                            "value": {
                                "value": "@split(activity('GetUploadUrl').output.sessionUrl,'?')[1]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "setSASUrlParts",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "setUploadSessionSASToken",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "SASUrlParts",
                            "value": {
                                "value": "@split(activity('GetUploadUrl').output.sessionUrl,'?')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "uploadCsvFilesToSDS",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "setSASUrlParts",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@pipeline().parameters.directory",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*.csv",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".csv"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SDS_Vnext_Files",
                                "type": "DatasetReference",
                                "parameters": {
                                    "sdsStorageFolder": "na"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "SDS_Vnext_storage",
                                "type": "DatasetReference",
                                "parameters": {
                                    "sasUriParam": {
                                        "value": "@{variables('SASUrlParts')[0]}?@{variables('SASUrlParts')[1]}",
                                        "type": "Expression"
                                    },
                                    "dataConnectorId": {
                                        "value": "@variables('dataConnectorId')",
                                        "type": "Expression"
                                    },
                                    "tenantId": {
                                        "value": "@pipeline().globalParameters.tenantid",
                                        "type": "Expression"
                                    },
                                    "containerId": {
                                        "value": "@variables('containerId')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "VerifyUpload",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "uploadCsvFilesToSDS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Authorization": {
                                    "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                    "type": "Expression"
                                }
                            },
                            "turnOffAsync": true,
                            "url": {
                                "value": "https://graph.microsoft.com/beta/external/industryData/dataConnectors/@{variables('dataConnectorId')}/validate()",
                                "type": "Expression"
                            },
                            "body": {}
                        }
                    },
                    {
                        "name": "UntilValidationStop",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "VerifyUpload",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('CheckValidationResult').output.status,'succeeded')",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "CheckValidationResult",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            }
                                        },
                                        "url": {
                                            "value": "@activity('VerifyUpload').output.ADFWebActivityResponseHeaders.location",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "timeout": "0.12:00:00"
                        }
                    },
                    {
                        "name": "GetInboundFlows",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GetBearerToken",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {
                                "Authorization": {
                                    "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                    "type": "Expression"
                                }
                            },
                            "url": {
                                "value": "https://graph.microsoft.com/beta/external/industryData/inboundFlows",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "NewOrExistingSystem",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "GetInboundFlows",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@empty(activity('GetInboundFlows').output.value)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "setDataConnectorId",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "GetDataConnector",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "dataConnectorId",
                                        "value": {
                                            "value": "@{activity('GetDataConnector').output.dataConnector.id}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "GetDataConnector",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            }
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/beta/external/industryData/inboundFlows/@{if(contains(activity('GetInboundFlows').output.value, pipeline().globalParameters.sdsInboundFlowId), pipeline().globalParameters.sdsInboundFlowId, activity('GetInboundFlows').output.value[0].id)}?$expand=dataConnector",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "setInboundFlowId",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "setDataConnectorId",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "inboundFlowId",
                                        "value": {
                                            "value": "@{if(contains(activity('GetInboundFlows').output.value, pipeline().globalParameters.sdsInboundFlowId), pipeline().globalParameters.sdsInboundFlowId, activity('GetInboundFlows').output.value[0].id)}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "CreateSourceSystem",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            },
                                            "Content-Type": "application/json"
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/beta/external/industryData/sourceSystems",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n  \"displayName\": \"ADF CSV2.1 Source\",\n  \"vendor\": \"Microsoft\",\n  \"userMatchingSettings\": [\n    {\n      \"sourceIdentifier\": {\n        \"code\": \"@{pipeline().globalParameters.staffSourceIdentifier}\"\n      },\n      @{if(contains(pipeline().globalParameters.staffDomainAddon,'.'), concat('\"domainName\":', '\"',pipeline().globalParameters.staffDomainAddon, '\",'), null)}\n      \"matchTarget\": {\n        \"code\": \"@{pipeline().globalParameters.staffMatchTarget}\"\n      },\n      \"roleGroup@odata.bind\": \"https://graph.microsoft.com/beta/external/industryData/roleGroups/staff\",\n      \"priorityOrder\": 0\n    },\n    {\n      \"sourceIdentifier\": {\n        \"code\": \"@{pipeline().globalParameters.studentSourceIdentifier}\"\n      },\n      @{if(contains(pipeline().globalParameters.studentDomainAddon, '.'), concat('\"domainName\":', '\"', pipeline().globalParameters.studentDomainAddon, '\",'), null)}\n      \"matchTarget\": {\n        \"code\": \"@{pipeline().globalParameters.studentMatchTarget}\"\n      },\n      \"roleGroup@odata.bind\": \"https://graph.microsoft.com/beta/external/industryData/roleGroups/students\",\n      \"priorityOrder\": 1\n    }\n  ]\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "CreateDataConnector",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "CreateSourceSystem",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            },
                                            "Content-Type": "application/json"
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/beta/external/industryData/dataConnectors",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n  \"displayName\": \"ADF CSV2.1 Connector\",\n  \"sourceSystem@odata.bind\": \"https://graph.microsoft.com/beta/external/industryData/sourceSystems/@{activity('CreateSourceSystem').output.id}\",\n  \"@odata.type\": \"#microsoft.graph.industryData.azureDataLakeConnector\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "CreateYearTimePeriodDefinition",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "CreateDataConnector",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            },
                                            "Content-Type": "application/json"
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/beta/external/industryData/years",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n  \"displayName\": \"ADF CSV2.1 Year\",\n  \"year\": {\n    \"code\": \"@{split(pipeline().globalParameters.yearStartDate, '-')[0]}\"\n  },\n  \"startDate\": \"@{pipeline().globalParameters.yearStartDate}\",\n  \"endDate\": \"@{pipeline().globalParameters.yearEndDate}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "CreateInboundFlow",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "CreateYearTimePeriodDefinition",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            },
                                            "Content-Type": "application/json"
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/beta/external/industryData/inboundFlows",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n  \"@odata.type\": \"#microsoft.graph.industryData.inboundFileFlow\",\n  \"dataConnector@odata.bind\": \"https://graph.microsoft.com/beta/external/industryData/dataConnectors/@{activity('CreateDataConnector').output.id}\",\n  \"dataDomain\": \"educationRostering\",\n  \"displayName\": \"ADF CSV2.1 Inbound Flow\",\n  \"effectiveDateTime\": \"@{utcNow()}\",\n  \"expirationDateTime\": \"@{concat(pipeline().globalParameters.expirationDateTime, 'T05:00:00Z')}\",\n  \"year@odata.bind\": \"https://graph.microsoft.com/beta/external/industryData/years/@{activity('CreateYearTimePeriodDefinition').output.id}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SetNewDataConnectorId",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "CreateInboundFlow",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "dataConnectorId",
                                        "value": {
                                            "value": "@activity('CreateDataConnector').output.id",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SetNewInboundFlowId",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SetNewDataConnectorId",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "inboundFlowId",
                                        "value": {
                                            "value": "@activity('CreateInboundFlow').output.id",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "UntilInboundFlowReady",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "NewOrExistingSystem",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('CheckInboundFlow').output.readinessStatus,'ready')",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "CheckInboundFlow",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            }
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/beta/external/industryData/inboundFlows/@{variables('inboundFlowId')}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "timeout": "0.12:00:00"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "directory": {
                        "type": "string"
                    }
                },
                "variables": {
                    "SASUrlParts": {
                        "type": "Array"
                    },
                    "containerId": {
                        "type": "String"
                    },
                    "uploadHost": {
                        "type": "String"
                    },
                    "uploadSessionSASToken": {
                        "type": "String"
                    },
                    "dataConnectorId": {
                        "type": "String"
                    },
                    "inboundFlowId": {
                        "type": "String"
                    },
                    "fileName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "sub_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-13T14:46:13Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDS_Vnext_Files')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Vnext_storage')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Validate_and_Upload')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "If Condition for Users",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.isNewUsers,true)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Validate_SDS_OldUsers",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "validate_SDS_Vnext_OldUsers",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "sdsStorageFolder": {
                                                    "value": "'@{pipeline().parameters.sdsStorageFolder}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "sourceSDSVnextUsers": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidUserRecordsLogs": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidUsersRecords": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidRecords": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Validate_SDS_NewUsers",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "validate_SDS_Vnext_NewUsers",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "sdsStorageFolder": {
                                                    "value": "'@{pipeline().parameters.sdsStorageFolder}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "sourceSDSVnextUsers": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidUserRecordsLogs": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidUsersRecords": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidRecords": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ifAcademicSessionsExist",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "check_AcademicSessions_Exists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('check_AcademicSessions_Exists').output.exists,true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "SDSVnext_All_Files_Validation",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "SDSVnext_All_Files_Validation",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "sdsStorageFolder": {
                                                    "value": "'@{pipeline().parameters.sdsStorageFolder}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "SDSVnextUsersErrorLog": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVNextCourses": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVNextAcademicsessions": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVnextClasses": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVNextEnrollments": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVNextOrgs": {
                                                    "StorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "StorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVNextRoles": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "AllErrors": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "InvalidCourses": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "ValidCourses": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "InvalidAcademicSessions": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "ValidacademicSessions": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "InvalidClasses": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "ValidClasses": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "InvalidEnrollments": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "ValidEnrollments": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "InvalidOrgs": {
                                                    "StorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "StorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "ValidOrgs": {
                                                    "StorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "StorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "InvalidRoles": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "ValidRoles": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                },
                                {
                                    "name": "check_org_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_All_Files_Validation",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "orgs.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_users_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_All_Files_Validation",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "users.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_roles_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_All_Files_Validation",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "roles.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_courses_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_All_Files_Validation",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "courses.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_classes_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_All_Files_Validation",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "classes.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_enrollments_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_All_Files_Validation",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "enrollments.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Set_allFileRecordsarray",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "check_org_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_users_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_roles_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_courses_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_classes_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_enrollments_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_academic_sessions_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "allFilesRecordCountArray",
                                        "value": {
                                            "value": "@createArray(\nsub(activity('check_org_csv').output.count,1),\nsub(activity('check_users_csv').output.count,1),\nsub(activity('check_roles_csv').output.count,1),\nsub(activity('check_courses_csv').output.count,1),\nsub(activity('check_classes_csv').output.count,1),\nsub(activity('check_academic_sessions_csv').output.count,1),\nsub(activity('check_enrollments_csv').output.count,1)\n)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "check_academic_sessions_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_All_Files_Validation",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "academicSessions.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ifDemographicsExists",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "check_Demographics_Exists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('check_Demographics_Exists').output.exists,true)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Append No Demographic File",
                                    "type": "AppendVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "allFilesRecordCountArray",
                                        "value": "No Demographic File"
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "SDSVnext_Demographics_Validations",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "Validate_SDSVnext_Demographics",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "sdsStorageFolder": {
                                                    "value": "'@{pipeline().parameters.sdsStorageFolder}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "sourceSDSVnextDemographics": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sourceErrorLog": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidationErrorLog": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidDemographicsRecords": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidDemographicsRecords": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                },
                                {
                                    "name": "Check_Demographics",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_Demographics_Validations",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "demographics.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Append_Demographics_Count",
                                    "type": "AppendVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Check_Demographics",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "allFilesRecordCountArray",
                                        "value": {
                                            "value": "@sub(activity('Check_Demographics').output.count,1)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "check_Demographics_Exists",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "ValidateRosterFiles",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "SDS_Vnext_Files",
                                "type": "DatasetReference",
                                "parameters": {
                                    "sdsStorageFolder": {
                                        "value": "@{pipeline().parameters.sdsStorageFolder}/demographics.csv",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ValidateRosterFiles",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "ifAcademicSessionsExist",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(length(variables('allFilesRecordCountArray')), 0)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Validate_SDS_Required_Files",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "SDSVnext_Required_Files_Validation",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "sdsStorageFolder": {
                                                    "value": "'@{pipeline().parameters.sdsStorageFolder}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "SDSVnextUsersErrorLog": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVNextOrgs": {
                                                    "StorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "StorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVNextRoles": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "AllErrors": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "InvalidOrgs": {
                                                    "StorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "StorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "ValidOrgs": {
                                                    "StorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "StorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "InvalidRoles": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "ValidRoles": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                },
                                {
                                    "name": "check_orgs_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Validate_SDS_Required_Files",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "orgs.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_user_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Validate_SDS_Required_Files",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "users.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_role_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Validate_SDS_Required_Files",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "roles.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "set_requried_files_record_count_array",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "check_orgs_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_user_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_role_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "requiredFilesRecordsCountArray",
                                        "value": {
                                            "value": "@createArray(\nsub(activity('check_orgs_csv').output.count,1),\nsub(activity('check_user_csv').output.count,1),\nsub(activity('check_role_csv').output.count,1)\n)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "SDSVnext_Roster_Files_Validations",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "SDSVnext_Roster_Files_Validation",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "sdsStorageFolder": {
                                                    "value": "'@{pipeline().parameters.sdsStorageFolder}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "SDSVnextUsersErrorLog": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVNextCourses": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVnextClasses": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVNextEnrollments": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVNextOrgs": {
                                                    "StorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "StorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVNextRoles": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "AllErrors": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "InvalidCourses": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "ValidCourses": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/valid"
                                                },
                                                "InvalidClasses": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/invalid"
                                                },
                                                "ValidClasses": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/valid"
                                                },
                                                "InvalidEnrollments": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/invalid"
                                                },
                                                "ValidEnrollments": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/valid"
                                                },
                                                "InvalidOrgs": {
                                                    "StorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "StorageFolder": "@{pipeline().parameters.sdsStorageFolder}/invalid"
                                                },
                                                "ValidOrgs": {
                                                    "StorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "StorageFolder": "@{pipeline().parameters.sdsStorageFolder}/valid"
                                                },
                                                "InvalidRoles": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/invalid"
                                                },
                                                "ValidRoles": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/valid"
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                },
                                {
                                    "name": "check_org_csv_roster",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_Roster_Files_Validations",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "orgs.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_users_csv_roster",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_Roster_Files_Validations",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "users.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_roles_csv_roster",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_Roster_Files_Validations",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "roles.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_courses_csv_roster",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_Roster_Files_Validations",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "courses.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_classes_csv_roster",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_Roster_Files_Validations",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "classes.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_enrollments_csv_roster",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_Roster_Files_Validations",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "enrollments.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Set_allFileRecordsarray_roster",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "check_org_csv_roster",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_users_csv_roster",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_roles_csv_roster",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_courses_csv_roster",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_classes_csv_roster",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_enrollments_csv_roster",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "allFilesRecordCountArray",
                                        "value": {
                                            "value": "@createArray(\nsub(activity('check_org_csv_roster').output.count,1),\nsub(activity('check_users_csv_roster').output.count,1),\nsub(activity('check_roles_csv_roster').output.count,1),\nsub(activity('check_courses_csv_roster').output.count,1),\nsub(activity('check_classes_csv_roster').output.count,1),\n'No Academic Sessions File',\nsub(activity('check_enrollments_csv_roster').output.count,1)\n)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "check_Relationships_Exists",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "ifDemographicsExists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "SDS_Vnext_Files",
                                "type": "DatasetReference",
                                "parameters": {
                                    "sdsStorageFolder": {
                                        "value": "@{pipeline().parameters.sdsStorageFolder}/relationships.csv",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "check_validation_errors",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ifRelationshipsExists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "validation.log",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "SDS_Vnext_Files",
                                "type": "DatasetReference",
                                "parameters": {
                                    "sdsStorageFolder": "na"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "upload_if_validation_succeeds",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "check_validation_errors",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(\nless(sub(int(activity('check_validation_errors').output.count),1), pipeline().globalParameters.validationErrorThreshold),\nor(not(pipeline().globalParameters.checkForEmptyFilesBeforeSending), if(empty(variables('requiredFilesRecordsCountArray')),not(contains(variables('allFilesRecordCountArray'),0)),not(contains(variables('requiredFilesRecordsCountArray'),0)))\n))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Send_validation_errors_email_report",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Send_email_reports",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "allFilesRecordCountArray": {
                                                "value": "@variables('allFilesRecordCountArray')",
                                                "type": "Expression"
                                            },
                                            "requiredFilesRecordsCountArray": {
                                                "value": "@variables('requiredFilesRecordsCountArray')",
                                                "type": "Expression"
                                            },
                                            "sdsStorageFolder": {
                                                "value": "@pipeline().parameters.sdsStorageFolder",
                                                "type": "Expression"
                                            },
                                            "check_validation_errors": {
                                                "value": "@activity('check_validation_errors').output.count",
                                                "type": "Expression"
                                            },
                                            "subject": {
                                                "value": "ADF: SDS upload validation failed for @{pipeline().parameters.sdsStorageFolder}/valid",
                                                "type": "Expression"
                                            },
                                            "bodyHeader": {
                                                "value": "ADF failed SDS upload for @{pipeline().parameters.sdsStorageFolder}/valid \\n\nSee ADF run logs for more details.\\n",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Upload_to_SDS_Vnext",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Upload_to_SDS_Vnext",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "directory": {
                                                "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Send_email_report",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Upload_to_SDS_Vnext",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Send_email_reports",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "allFilesRecordCountArray": {
                                                "value": "@variables('allFilesRecordCountArray')",
                                                "type": "Expression"
                                            },
                                            "requiredFilesRecordsCountArray": {
                                                "value": "@variables('requiredFilesRecordsCountArray')",
                                                "type": "Expression"
                                            },
                                            "sdsStorageFolder": {
                                                "value": "@pipeline().parameters.sdsStorageFolder",
                                                "type": "Expression"
                                            },
                                            "check_validation_errors": {
                                                "value": "@activity('check_validation_errors').output.count",
                                                "type": "Expression"
                                            },
                                            "subject": {
                                                "value": "ADF: successful SDS upload for @{pipeline().parameters.sdsStorageFolder}/valid",
                                                "type": "Expression"
                                            },
                                            "bodyHeader": {
                                                "value": "ADF upload to SDS for @{pipeline().parameters.sdsStorageFolder}/valid sent successfully.\\n\nCheck sds.microsoft.com for updates on the status of the sync.",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Send_email_report_copy1",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Upload_to_SDS_Vnext",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Send_email_reports",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "allFilesRecordCountArray": {
                                                "value": "@variables('allFilesRecordCountArray')",
                                                "type": "Expression"
                                            },
                                            "requiredFilesRecordsCountArray": {
                                                "value": "@variables('requiredFilesRecordsCountArray')",
                                                "type": "Expression"
                                            },
                                            "sdsStorageFolder": {
                                                "value": "@pipeline().parameters.sdsStorageFolder",
                                                "type": "Expression"
                                            },
                                            "check_validation_errors": {
                                                "value": "@activity('check_validation_errors').output.count",
                                                "type": "Expression"
                                            },
                                            "subject": {
                                                "value": "ADF: failed SDS upload for @{pipeline().parameters.sdsStorageFolder}/valid",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "check_AcademicSessions_Exists",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "If Condition for Users",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "SDS_Vnext_Files",
                                "type": "DatasetReference",
                                "parameters": {
                                    "sdsStorageFolder": {
                                        "value": "@{pipeline().parameters.sdsStorageFolder}/academicSessions.csv",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ifRelationshipsExists",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "check_Relationships_Exists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('check_Relationships_Exists').output.exists,true)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Append No Relationship File",
                                    "type": "AppendVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "allFilesRecordCountArray",
                                        "value": {
                                            "value": "No Relationship File",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "SDSVnext_Relationships_Validations",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "Validate_SDSVnext_Relationships",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "sdsStorageFolder": {
                                                    "value": "'@{pipeline().parameters.sdsStorageFolder}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "sourceSDSVnextRelationships": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sourceErrorLog": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidationErrorLog": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidRelationshipRecords": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidRelationshipRecords": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                },
                                {
                                    "name": "Check_Relationships",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SDSVnext_Relationships_Validations",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "relationships.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Vnext_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "sdsStorageFolder": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Append_Relationships_Count",
                                    "type": "AppendVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Check_Relationships",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "allFilesRecordCountArray",
                                        "value": {
                                            "value": "@sub(activity('Check_Relationships').output.count,1)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "isNewUsers": {
                        "type": "bool"
                    }
                },
                "variables": {
                    "allFilesRecordCountArray": {
                        "type": "Array",
                        "defaultValue": []
                    },
                    "requiredFilesRecordsCountArray": {
                        "type": "Array",
                        "defaultValue": []
                    }
                },
                "folder": {
                    "name": "sub_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-13T14:46:14Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDS_Vnext_Files')]",
                "[concat(variables('factoryId'), '/dataflows/validate_SDS_Vnext_OldUsers')]",
                "[concat(variables('factoryId'), '/dataflows/validate_SDS_Vnext_NewUsers')]",
                "[concat(variables('factoryId'), '/dataflows/SDSVnext_All_Files_Validation')]",
                "[concat(variables('factoryId'), '/dataflows/Validate_SDSVnext_Demographics')]",
                "[concat(variables('factoryId'), '/dataflows/SDSVnext_Required_Files_Validation')]",
                "[concat(variables('factoryId'), '/dataflows/SDSVnext_Roster_Files_Validation')]",
                "[concat(variables('factoryId'), '/pipelines/Send_email_reports')]",
                "[concat(variables('factoryId'), '/pipelines/Upload_to_SDS_Vnext')]",
                "[concat(variables('factoryId'), '/dataflows/Validate_SDSVnext_Relationships')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Schoology_to_SDS_CSV_Transform')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "DeletePreviousExecutionFiles",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "Schoology_CSV_Sink_Data",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                        "type": "Expression"
                                    },
                                    "folder": {
                                        "value": "@{pipeline().parameters.sdsStorageFolder}/outgoing",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "TransformRosterFiles",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "DeletePreviousExecutionFiles",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(not(empty(pipeline().globalParameters.schoologyImportFileNames.courses)), not(empty(pipeline().globalParameters.schoologyImportFileNames.enrollments)))",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "schoologyCourses_to_SDSVnextCourses_csv",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "schoologyCourses_to_SDSVnextCourses_csv",
                                            "type": "DataFlowReference",
                                            "parameters": {},
                                            "datasetParameters": {
                                                "SchoologyCourses": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/incoming",
                                                        "type": "Expression"
                                                    },
                                                    "fileName": {
                                                        "value": "@pipeline().globalParameters.schoologyImportFileNames.courses",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVnextCourses": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/outgoing",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                },
                                {
                                    "name": "schoologyCourses_to_SDSVnextClasses_csv",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [
                                        {
                                            "activity": "schoologyCourses_to_SDSVnextCourses_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "schoologyCourses_to_SDSVnextClasses_csv",
                                            "type": "DataFlowReference",
                                            "parameters": {},
                                            "datasetParameters": {
                                                "SchoologyCourses": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/incoming",
                                                        "type": "Expression"
                                                    },
                                                    "fileName": {
                                                        "value": "@pipeline().globalParameters.schoologyImportFileNames.classes",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVnextClasses": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/outgoing",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                },
                                {
                                    "name": "schoologyEnrollments_to_SDSVnextEnrollments_csv",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [
                                        {
                                            "activity": "schoologyCourses_to_SDSVnextClasses_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "schoologyEnrollments_to_SDSVnextEnrollments_csv",
                                            "type": "DataFlowReference",
                                            "parameters": {},
                                            "datasetParameters": {
                                                "SchoologyEnrollments": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/incoming",
                                                        "type": "Expression"
                                                    },
                                                    "fileName": {
                                                        "value": "@pipeline().globalParameters.schoologyImportFileNames.enrollments",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVnextEnrollments": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/outgoing"
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "TransformNewOrExisingUsers",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "setParentsFileName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@pipeline().parameters.isNewUsers",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "schoologyUsers-SDSVnext_OldUsers_csv",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "schoologyUsers_to_SDSVnext_OldUsers_csv",
                                            "type": "DataFlowReference",
                                            "parameters": {},
                                            "datasetParameters": {
                                                "SchoologyUsers": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/incoming",
                                                    "fileName": {
                                                        "value": "@pipeline().globalParameters.schoologyImportFileNames.users",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SchoologyParents": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/incoming",
                                                    "fileName": {
                                                        "value": "@variables('parentsFileName')",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVnextUsers": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/outgoing"
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "schoologyUsers_to_SDSVnext_NewUsers_csv",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "schoologyUsers_to_SDSVnext_NewUsers_csv",
                                            "type": "DataFlowReference",
                                            "parameters": {},
                                            "datasetParameters": {
                                                "SchoologyUsers": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/incoming",
                                                    "fileName": {
                                                        "value": "@pipeline().globalParameters.schoologyImportFileNames.users",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SchoologyParents": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/incoming",
                                                    "fileName": {
                                                        "value": "@variables('parentsFileName')",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "SDSVnextUsers": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/outgoing"
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "schoologySchools-SDSVnextOrgs_csv",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "DeletePreviousExecutionFiles",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "schoologySchools_to_SDSVnextOrgs_csv",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "schoologySchools": {
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        },
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/incoming",
                                            "type": "Expression"
                                        },
                                        "fileName": {
                                            "value": "@pipeline().globalParameters.schoologyImportFileNames.orgs",
                                            "type": "Expression"
                                        }
                                    },
                                    "SDSVnextOrgs": {
                                        "StorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                        "StorageFolder": "@{pipeline().parameters.sdsStorageFolder}/outgoing"
                                    }
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "schoologyUsers-SDSVnextRoles_csv",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "DeletePreviousExecutionFiles",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "schoologyUsers_to_SDSVnextRoles_csv",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "SchoologyUsers": {
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        },
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/incoming",
                                            "type": "Expression"
                                        },
                                        "fileName": {
                                            "value": "@pipeline().globalParameters.schoologyImportFileNames.roles",
                                            "type": "Expression"
                                        }
                                    },
                                    "SDSVnextRoles": {
                                        "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/outgoing",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "if_ParentAssociations_Exists",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "DeletePreviousExecutionFiles",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@not(empty(pipeline().globalParameters.schoologyImportFileNames.relationships))",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "schoologyParentAssociations_SDSVnextRelationships_csv",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "schoologyParentAssociations_to_SDSVnextRelationships_csv",
                                            "type": "DataFlowReference",
                                            "parameters": {},
                                            "datasetParameters": {
                                                "sourceRelationships": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/incoming",
                                                        "type": "Expression"
                                                    },
                                                    "fileName": {
                                                        "value": "@pipeline().globalParameters.schoologyImportFileNames.relationships",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkSDSVnextRelationships": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/outgoing"
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 8,
                                            "computeType": "General"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "setParentsFileName",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "DeletePreviousExecutionFiles",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "parentsFileName",
                            "value": {
                                "value": "@if(empty(pipeline().globalParameters.schoologyImportFileNames.parents), 'noFile', pipeline().globalParameters.schoologyImportFileNames.parents)",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "isNewUsers": {
                        "type": "bool"
                    }
                },
                "variables": {
                    "parentsFileName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "sub_pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-13T14:46:14Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Schoology_CSV_Sink_Data')]",
                "[concat(variables('factoryId'), '/dataflows/schoologySchools_to_SDSVnextOrgs_csv')]",
                "[concat(variables('factoryId'), '/dataflows/schoologyUsers_to_SDSVnextRoles_csv')]",
                "[concat(variables('factoryId'), '/dataflows/schoologyCourses_to_SDSVnextCourses_csv')]",
                "[concat(variables('factoryId'), '/dataflows/schoologyCourses_to_SDSVnextClasses_csv')]",
                "[concat(variables('factoryId'), '/dataflows/schoologyEnrollments_to_SDSVnextEnrollments_csv')]",
                "[concat(variables('factoryId'), '/dataflows/schoologyUsers_to_SDSVnext_OldUsers_csv')]",
                "[concat(variables('factoryId'), '/dataflows/schoologyUsers_to_SDSVnext_NewUsers_csv')]",
                "[concat(variables('factoryId'), '/dataflows/schoologyParentAssociations_to_SDSVnextRelationships_csv')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Schoology_to_SDS_Vnext_Main')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get_Schoology_Data",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Get_Schoology_Import_CSVs",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sdsStorageContainer": {
                                    "value": "@pipeline().parameters.sdsContainer",
                                    "type": "Expression"
                                },
                                "sdsStorageFolder": {
                                    "value": "@{pipeline().parameters.sdsFolder}/incoming",
                                    "type": "Expression"
                                },
                                "schoologyImportCsvPath": {
                                    "value": "@pipeline().parameters.schoologyImportCsvPath",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Transform_to_SDS_Vnext",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Get_Schoology_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Schoology_to_SDS_CSV_Transform",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sdsStorageContainer": {
                                    "value": "@pipeline().parameters.sdsContainer",
                                    "type": "Expression"
                                },
                                "sdsStorageFolder": {
                                    "value": "@pipeline().parameters.sdsFolder",
                                    "type": "Expression"
                                },
                                "isNewUsers": {
                                    "value": "@pipeline().globalParameters.useFamilyAndGivenNames",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Validate_to_SDS_Vnext",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Transform_to_SDS_Vnext",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Validate_and_Upload",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sdsStorageContainer": {
                                    "value": "@pipeline().parameters.sdsContainer",
                                    "type": "Expression"
                                },
                                "sdsStorageFolder": {
                                    "value": "@{pipeline().parameters.sdsFolder}/outgoing",
                                    "type": "Expression"
                                },
                                "isNewUsers": {
                                    "value": "@pipeline().globalParameters.useFamilyAndGivenNames",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SyncLTI",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Validate_to_SDS_Vnext",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@pipeline().globalParameters.syncTeamsClassesLTI",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Sync_LTI_Data",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Schoology_LTI_to_SDS_Classes",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "sdsStorageContainer": {
                                                "value": "@pipeline().parameters.sdsContainer",
                                                "type": "Expression"
                                            },
                                            "sdsStorageFolder": {
                                                "value": "@{pipeline().parameters.sdsFolder}/outgoing/valid",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "sdsContainer": {
                        "type": "string",
                        "defaultValue": "sds"
                    },
                    "sdsFolder": {
                        "type": "string",
                        "defaultValue": "data"
                    },
                    "schoologyImportCsvPath": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-05-13T15:37:28Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Get_Schoology_Import_CSVs')]",
                "[concat(variables('factoryId'), '/pipelines/Schoology_to_SDS_CSV_Transform')]",
                "[concat(variables('factoryId'), '/pipelines/Validate_and_Upload')]",
                "[concat(variables('factoryId'), '/pipelines/Schoology_LTI_to_SDS_Classes')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Toggle_Azure_Storage_SFTP')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "CheckUntilDisabled",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "Wait1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('DisableSFTP').output.properties.isSftpEnabled, false)",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "DisableSFTP",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "PATCH",
                                        "headers": {},
                                        "url": {
                                            "value": "https://management.azure.com/subscriptions/@{pipeline().globalParameters.subscriptionId}/resourceGroups/rg-SchoologyCSVtoSDS/providers/Microsoft.Storage/storageAccounts/stschoologycsvsds?api-version=2023-01-01",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "properties": {
                                                "isSftpEnabled": false
                                            }
                                        },
                                        "authentication": {
                                            "type": "MSI",
                                            "resource": "https://management.azure.com/"
                                        }
                                    }
                                }
                            ],
                            "timeout": "0.12:00:00"
                        }
                    },
                    {
                        "name": "EnableSFTP",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "PATCH",
                            "headers": {},
                            "url": {
                                "value": "https://management.azure.com/subscriptions/@{pipeline().globalParameters.subscriptionId}/resourceGroups/rg-SchoologyCSVtoSDS/providers/Microsoft.Storage/storageAccounts/stschoologycsvsds?api-version=2023-01-01",
                                "type": "Expression"
                            },
                            "body": {
                                "properties": {
                                    "isSftpEnabled": true
                                }
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://management.azure.com/"
                            }
                        }
                    },
                    {
                        "name": "Wait1",
                        "type": "Wait",
                        "dependsOn": [
                            {
                                "activity": "EnableSFTP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": 3000
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-05-14T20:52:29Z"
            },
            "dependsOn": []
        }
    ]
}
