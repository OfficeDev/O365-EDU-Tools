{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Keyvault name": {
            "defaultValue": "kv-or-sds",
            "type": "String"
        },
        "Storage account name": {
            "defaultValue": "storsds",
            "type": "String"
        },
        "IMSOneRosterValidator_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://partnertest.infinitecampus.org/campus/oneroster/microsofttest/ims/oneroster/v1p1"
        },
        "Data Factory Name": {
            "type": "string",
            "defaultValue": "adf-ORtoSDS",
            "metadata": {
                "description": "The name of the Data Factory instance."
            }
        },
        "OneRoster ClientId value": {
            "type": "string",
            "defaultValue": ""
        },
        "OneRoster Client Secret Keyvault URL value": {
            "type": "string",
            "defaultValue": ""
        },
        "OneRoster Base URL value": {
            "type": "string",
            "defaultValue": ""
        },
        "Entra App ClientId value": {
            "type": "string",
            "defaultValue": ""
        },
        "OneRoster OAuth Token Url value": {
            "type": "string",
            "defaultValue": ""
        },
        "Validation Error Threshold value": {
            "type": "int",
            "defaultValue": 10
        },
        "Report Recipient Emails value": {
            "type": "array",
            "defaultValue": [
                {
                    "emailAddress": {
                        "address": ""
                    }
                }
            ]
        },
        "Check for Empty files before sending value": {
            "type": "bool",
            "defaultValue": true
        },
        "Limit value": {
            "type": "string",
            "defaultValue": "100"
        },
        "Tenant id value": {
            "type": "string",
            "defaultValue": "[tenant().tenantId]"
        },
        "User Principal Name value": {
            "type": "string",
            "defaultValue": ""
        },
        "Client Secret for SDS Api Keyvault Url value": {
            "type": "string",
            "defaultValue": ""
        },
        "SDS Inbound Flow Id value": {
            "type": "string",
            "defaultValue": ""
        },
        "Use family and given names value": {
            "type": "bool",
            "defaultValue": true
        },
        "Staff source identifier value": {
            "type": "string",
            "defaultValue": "username|email|activeDirectory"
        },
        "Staff match target value": {
            "type": "string",
            "defaultValue": "userPrincipalName|mail"
        },
        "Staff Domain Addon value": {
            "type": "string",
            "defaultValue": "NA"
        },
        "Student source identifier value": {
            "type": "string",
            "defaultValue": "username|email|activeDirectory"
        },
        "Student match target value": {
            "type": "string",
            "defaultValue": "userPrincipalName|mail"
        },
        "Student Domain Addon value": {
            "type": "string",
            "defaultValue": "NA"
        },
        "Year Start Date value": {
            "type": "string",
            "defaultValue": "yyyy-mm-dd"
        },
        "Year End Date value": {
            "type": "string",
            "defaultValue": "yyyy-mm-dd"
        },
        "Expiration Date Time value": {
            "type": "string",
            "defaultValue": "yyyy-mm-dd"
        },
        "Subscription Id value": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]"
        },
        "Data Factory identity type": {
            "type": "string",
            "defaultValue": "SystemAssigned"
        }
    },
    "variables": {
        "Keyvault integration_properties_typeProperties_baseUrl":"[concat('https://',parameters('Keyvault name'),'.vault.azure.net/')]",  
        "SDSAzureDataLakeStorageGen2_sasUri":"@{linkedService().sasUriParam}",
        "Storageaccount_properties_typeProperties_url":"[concat('https://',parameters('Storage account name'),'.dfs.core.windows.net/')]",
        "Keyvault_properties_privateLinkResourceId":"[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.KeyVault/vaults/',parameters('Keyvault name'))]",
        "Keyvault_properties_groupId":"vault",
        "Keyvault_properties_fqdns":"[concat(parameters('Keyvault name'),'.vault.azure.net')]",
        "StorageAccount_properties_privateLinkResourceId":"[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Storage/storageAccounts/',parameters('Storage account name'))]",
        "StorageAccount_properties_groupId":"dfs",
        "StorageAccount_properties_fqdns":"[concat(parameters('Storage account name'),'.dfs.core.windows.net')]",
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('Data Factory Name'))]"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2024-04-01-preview",
            "name": "[parameters('Keyvault name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[tenant().tenantId]",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow",
                    "ipRules": [],
                    "virtualNetworkRules": []
                },
                "accessPolicies": [],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "vaultUri": "[variables('Keyvault integration_properties_typeProperties_baseUrl')]",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-05-01",
            "name": "[parameters('Storage account name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Disabled",
                "allowCrossTenantReplication": false,
                "isSftpEnabled": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": false,
                "isHnsEnabled": true,
                "networkAcls": {
                    "resourceAccessRules": [],
                    "bypass": "None",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Keyvault name'), '/ClientSecretForSdsApiKeyVaultUrl')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('Keyvault name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "value": "blank"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Keyvault name'), '/ORClientSecret')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('Keyvault name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "value": "blank"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('Storage account name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage account name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('Storage account name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage account name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('Storage account name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage account name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('Storage account name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage account name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('Storage account name'), '/default/refcodes')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('Storage account name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage account name'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('Storage account name'), '/default/sds')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('Storage account name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/IRSDSOR')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "[resourceGroup().location]",
                        "dataFlowProperties": {
                            "computeType": "General",
                            "coreCount": 8,
                            "timeToLive": 10,
                            "cleanup": false,
                            "customProperties": []
                        },
                        "pipelineExternalComputeScaleProperties": {
                            "timeToLive": 60,
                            "numberOfPipelineNodes": 1,
                            "numberOfExternalNodes": 1
                        }
                    }
                },
                "managedVirtualNetwork": {
                    "type": "ManagedVirtualNetworkReference",
                    "referenceName": "default"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage account name'))]",
                "[resourceId('Microsoft.DataFactory/factories', parameters('Data Factory Name'))]",
                "[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/AutoResolveIntegrationRuntime')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "AutoResolve",
                        "dataFlowProperties": {
                            "computeType": "General",
                            "coreCount": 8,
                            "timeToLive": 0,
                            "cleanup": false,
                            "customProperties": []
                        },
                        "pipelineExternalComputeScaleProperties": {
                            "timeToLive": 60,
                            "numberOfPipelineNodes": 1,
                            "numberOfExternalNodes": 1
                        }
                    }
                },
                "managedVirtualNetwork": {
                    "type": "ManagedVirtualNetworkReference",
                    "referenceName": "default"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage account name'))]",
                "[concat(variables('factoryId'), '/managedVirtualNetworks/default')]",
                "[resourceId('Microsoft.DataFactory/factories', parameters('Data Factory Name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/kvonerosterintegration')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[variables('Keyvault integration_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', parameters('Data Factory Name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/IMSOneRosterValidator')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "RestService",
                "typeProperties": {
                    "url": "[parameters('IMSOneRosterValidator_properties_typeProperties_url')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                },
                "connectVia": {
                    "referenceName": "IRSDSOR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRSDSOR')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/SDSAzureDataLakeStorageGen2')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "sasUriParam": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "sasUri": "[variables('SDSAzureDataLakeStorageGen2_sasUri')]"
                },
                "connectVia": {
                    "referenceName": "IRSDSOR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRSDSOR')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/',parameters('Storage account name'))]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[variables('Storageaccount_properties_typeProperties_url')]"
                },
                "connectVia": {
                    "referenceName": "IRSDSOR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRSDSOR')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/default')]",
            "type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
            "apiVersion": "2018-06-01",
            "properties": {},
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', parameters('Data Factory Name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/OR_orgs_json')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "OR New Dataset"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    }
                },
                "schema": {
                    "type": "object",
                    "properties": {
                        "orgs": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "identifier": {
                                        "type": "string"
                                    },
                                    "children": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string"
                                                },
                                                "sourcedId": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "sourcedId": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "dateLastModified": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/SDS_Org_csv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS Dataset"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "sourcedId",
                        "type": "String"
                    },
                    {
                        "name": "name",
                        "type": "String"
                    },
                    {
                        "name": "type",
                        "type": "String"
                    },
                    {
                        "name": "parentSourcedId",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/OR_courses_json')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "sdsStorageContainer": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "OR New Dataset"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    }
                },
                "schema": {
                    "type": "object",
                    "properties": {
                        "courses": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "sourcedId": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "dateLastModified": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "courseCode": {
                                        "type": "string"
                                    },
                                    "subjects": {
                                        "type": "array"
                                    },
                                    "subjectCodes": {
                                        "type": "array"
                                    },
                                    "grades": {
                                        "type": "array"
                                    },
                                    "org": {
                                        "type": "object",
                                        "properties": {
                                            "sourcedId": {
                                                "type": "string"
                                            },
                                            "href": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "schoolYear": {
                                        "type": "object",
                                        "properties": {
                                            "sourcedId": {
                                                "type": "string"
                                            },
                                            "href": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/SDS_Users_csv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS Dataset"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "sourcedId",
                        "type": "String"
                    },
                    {
                        "name": "username",
                        "type": "String"
                    },
                    {
                        "name": "givenName",
                        "type": "String"
                    },
                    {
                        "name": "familyName",
                        "type": "String"
                    },
                    {
                        "name": "activeDirectoryMatchId",
                        "type": "String"
                    },
                    {
                        "name": "email",
                        "type": "String"
                    },
                    {
                        "name": "phone",
                        "type": "String"
                    },
                    {
                        "name": "sms",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/SDS_Courses_csv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS Dataset"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "sourcedId",
                        "type": "String"
                    },
                    {
                        "name": "title",
                        "type": "String"
                    },
                    {
                        "name": "schoolYearSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "orgSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "code",
                        "type": "String"
                    },
                    {
                        "name": "subject",
                        "type": "String"
                    },
                    {
                        "name": "grade",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/SDS_Roles_csv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS Dataset"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "userSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "orgSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "role",
                        "type": "String"
                    },
                    {
                        "name": "sessionSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "grade",
                        "type": "String"
                    },
                    {
                        "name": "isPrimary",
                        "type": "String"
                    },
                    {
                        "name": "roleStartDate",
                        "type": "String"
                    },
                    {
                        "name": "roleEndDate",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/OR_API_New_source')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "IMSOneRosterValidator",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "endPoint": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "string"
                    },
                    "limit": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "OR New Dataset"
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {
                    "relativeUrl": {
                        "value": "@concat(dataset().endPoint, '?offset=', dataset().offset, '&limit=', dataset().limit)",
                        "type": "Expression"
                    }
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/IMSOneRosterValidator')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/OR_API_New_json_sink')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "filename": {
                        "type": "string"
                    },
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "OR New Dataset"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().filename",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    }
                },
                "schema": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/OR_users_json')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "OR New Dataset"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    }
                },
                "schema": {
                    "type": "object",
                    "properties": {
                        "users": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "sourcedId": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "dateLastModified": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "givenName": {
                                        "type": "string"
                                    },
                                    "middleName": {
                                        "type": "string"
                                    },
                                    "familyName": {
                                        "type": "string"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "identifier": {
                                        "type": "string"
                                    },
                                    "grades": {
                                        "type": "array"
                                    },
                                    "userIds": {
                                        "type": "array"
                                    },
                                    "orgs": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "sourcedId": {
                                                    "type": "string"
                                                },
                                                "href": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "agents": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "sourcedId": {
                                                    "type": "string"
                                                },
                                                "href": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "enabledUser": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/SDS_Enrollments_csv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS Dataset"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "userSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "classSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "role",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/OR_demographics_json')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "OR New Dataset"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    }
                },
                "schema": {
                    "type": "object",
                    "properties": {
                        "demographics": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "sourcedId": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "dateLastModified": {
                                        "type": "string"
                                    },
                                    "sex": {
                                        "type": "string"
                                    },
                                    "americanIndianOrAlaskaNative": {
                                        "type": "string"
                                    },
                                    "asian": {
                                        "type": "string"
                                    },
                                    "blackOrAfricanAmerican": {
                                        "type": "string"
                                    },
                                    "nativeHawaiianOrOtherPacificIslander": {
                                        "type": "string"
                                    },
                                    "white": {
                                        "type": "string"
                                    },
                                    "demographicRaceTwoOrMoreRaces": {
                                        "type": "string"
                                    },
                                    "hispanicOrLatinoEthnicity": {
                                        "type": "string"
                                    },
                                    "countryOfBirthCode": {
                                        "type": "string"
                                    },
                                    "birthCity": {
                                        "type": "string"
                                    },
                                    "birthState": {
                                        "type": "string"
                                    },
                                    "birthDate": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/SDS_Demographics_csv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS Dataset"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "userSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "sex",
                        "type": "String"
                    },
                    {
                        "name": "birthDate",
                        "type": "String"
                    },
                    {
                        "name": "birthCountry",
                        "type": "String"
                    },
                    {
                        "name": "birthState",
                        "type": "String"
                    },
                    {
                        "name": "birthCity",
                        "type": "String"
                    },
                    {
                        "name": "ethnicityCodes",
                        "type": "String"
                    },
                    {
                        "name": "raceCodes",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/SDS_Relationships_csv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS Dataset"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "userSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "relationshipUserSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "relationshipRole",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/SDS_AcademicSessions_csv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS Dataset"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "sourcedId",
                        "type": "String"
                    },
                    {
                        "name": "title",
                        "type": "String"
                    },
                    {
                        "name": "type",
                        "type": "String"
                    },
                    {
                        "name": "schoolYear",
                        "type": "String"
                    },
                    {
                        "name": "startDate",
                        "type": "String"
                    },
                    {
                        "name": "endDate",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/OR_academicSessions_json')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "OR New Dataset"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    }
                },
                "schema": {
                    "type": "object",
                    "properties": {
                        "academicSessions": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "sourcedId": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "dateLastModified": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "type": "string"
                                    },
                                    "endDate": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "schoolYear": {
                                        "type": "string"
                                    },
                                    "children": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "sourcedId": {
                                                    "type": "string"
                                                },
                                                "href": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/SDS_storage')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SDSAzureDataLakeStorageGen2",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "sasUriParam": {
                            "value": "@dataset().sasUriParam",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "sasUriParam": {
                        "type": "string"
                    },
                    "dataConnectorId": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "String"
                    },
                    "containerId": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS Dataset"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@{dataset().dataConnectorId}/@{dataset().containerId}",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().tenantId",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SDSAzureDataLakeStorageGen2')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/SDS_Files')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "directory": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS Dataset"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().directory",
                            "type": "Expression"
                        },
                        "fileSystem": "sds"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": false,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/SDS_Validation_Errors_csv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS Dataset"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/OR_enrollment_json')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "OR New Dataset"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    }
                },
                "schema": {
                    "type": "object",
                    "properties": {
                        "enrollments": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "sourcedId": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "dateLastModified": {
                                        "type": "string"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "beginDate": {
                                        "type": "string"
                                    },
                                    "school": {
                                        "type": "object",
                                        "properties": {
                                            "sourcedId": {
                                                "type": "string"
                                            },
                                            "href": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "user": {
                                        "type": "object",
                                        "properties": {
                                            "sourcedId": {
                                                "type": "string"
                                            },
                                            "href": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "class": {
                                        "type": "object",
                                        "properties": {
                                            "sourcedId": {
                                                "type": "string"
                                            },
                                            "href": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/OR_classGroups_json')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "sdsStorageContainer": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "OR New Dataset"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    }
                },
                "schema": {
                    "type": "object",
                    "properties": {
                        "classGroups": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "sourcedId": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "dateLastModified": {
                                        "type": "string"
                                    },
                                    "sectionGroupID": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "groupType": {
                                        "type": "string"
                                    },
                                    "classes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "sourcedId": {
                                                    "type": "string"
                                                },
                                                "href": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/OR_class_json')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "OR New Dataset"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    }
                },
                "schema": {
                    "type": "object",
                    "properties": {
                        "classes": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "sourcedId": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "dateLastModified": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "classType": {
                                        "type": "string"
                                    },
                                    "classCode": {
                                        "type": "string"
                                    },
                                    "location": {
                                        "type": "string"
                                    },
                                    "periods": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "subjects": {
                                        "type": "array"
                                    },
                                    "subjectCodes": {
                                        "type": "array"
                                    },
                                    "course": {
                                        "type": "object",
                                        "properties": {
                                            "sourcedId": {
                                                "type": "string"
                                            },
                                            "href": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "school": {
                                        "type": "object",
                                        "properties": {
                                            "sourcedId": {
                                                "type": "string"
                                            },
                                            "href": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "terms": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "sourcedId": {
                                                    "type": "string"
                                                },
                                                "href": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/SDS_classes_CSV')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SDS Dataset"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": {
                            "value": "@dataset().sdsStorageFolder",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().sdsStorageContainer",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "sourcedId",
                        "type": "String"
                    },
                    {
                        "name": "orgSourcedId",
                        "type": "String"
                    },
                    {
                        "name": "title",
                        "type": "String"
                    },
                    {
                        "name": "sessionSourcedIds",
                        "type": "String"
                    },
                    {
                        "name": "courseSouredId",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/SDS_refCode_csv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('Storage account name')]",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "SDS Dataset"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "refCodes.csv",
                        "fileSystem": "refcodes"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "Id",
                        "type": "String"
                    },
                    {
                        "name": "Description",
                        "type": "String"
                    },
                    {
                        "name": "refTypeName",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/createOrgsCsv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SDS_DataFlows"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "OR_orgs_json",
                                "type": "DatasetReference"
                            },
                            "name": "sourceOrgsJson"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Org_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkSdsSchoolCsv"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FlattenOrgs"
                        },
                        {
                            "name": "parentSourcedId"
                        }
                    ],
                    "script": "source(output(\n\t\torgs as (name as string, type as string, identifier as string, children as (href as string, sourcedId as string, type as string)[], sourcedId as string, status as string, dateLastModified as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> sourceOrgsJson\nsourceOrgsJson foldDown(unroll(orgs, orgs),\n\tmapColumn(\n\t\tname = orgs.name,\n\t\ttype = orgs.type,\n\t\tsourcedId = orgs.sourcedId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenOrgs\nFlattenOrgs derive(parentSourcedId = '') ~> parentSourcedId\nparentSourcedId sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\tname as string,\n\t\ttype as string,\n\t\tparentSourcedId as string\n\t),\n\tpartitionFileNames:['orgs.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\tname,\n\t\ttype,\n\t\tparentSourcedId\n\t),\n\tpartitionBy('hash', 1)) ~> sinkSdsSchoolCsv"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/OR_orgs_json')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Org_csv')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/createUsersCsv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SDS_DataFlows"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "OR_users_json",
                                "type": "DatasetReference"
                            },
                            "name": "sourceUsersJson"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Users_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkSdsUsersCsv",
                            "rejectedDataLinkedService": {
                                "referenceName": "[parameters('Storage account name')]",
                                "type": "LinkedServiceReference"
                            }
                        }
                    ],
                    "transformations": [
                        {
                            "name": "flattenUsers"
                        },
                        {
                            "name": "derivedColumn"
                        }
                    ],
                    "script": "source(output(\n\t\tusers as (sourcedId as string, status as string, dateLastModified as string, username as string, givenName as string, middleName as string, familyName as string, role as string, identifier as string, grades as string[], userIds as string[], orgs as (sourcedId as string, href as string, type as string)[], agents as string[], enabledUser as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> sourceUsersJson\nsourceUsersJson foldDown(unroll(users),\n\tmapColumn(\n\t\tsourcedId = users.sourcedId,\n\t\tusername = users.username,\n\t\tgivenName = users.givenName,\n\t\tfamilyName = users.familyName,\n\t\tenabledUser = users.enabledUser\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flattenUsers\nflattenUsers derive(activeStatus = iif(toBoolean(enabledUser),'active','inactive'),\n\t\tactiveDirectoryMatchId = '',\n\t\temail = '',\n\t\tphone = '',\n\t\tsms = '') ~> derivedColumn\nderivedColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\tusername as string,\n\t\tgivenName as string,\n\t\tfamilyName as string,\n\t\tactiveDirectoryMatchId as string,\n\t\temail as string,\n\t\tphone as string,\n\t\tsms as string\n\t),\n\tpartitionFileNames:['users.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\tusername,\n\t\tgivenName,\n\t\tfamilyName,\n\t\tactiveDirectoryMatchId,\n\t\temail,\n\t\tphone,\n\t\tsms\n\t),\n\tpartitionBy('hash', 1)) ~> sinkSdsUsersCsv"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/OR_users_json')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Users_csv')]",
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/createCoursesCsv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SDS_DataFlows"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "OR_courses_json",
                                "type": "DatasetReference"
                            },
                            "name": "sourceCourses"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Courses_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkSdsCoursesCsv"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FlattenCourses"
                        },
                        {
                            "name": "derivedColumns"
                        },
                        {
                            "name": "filterActive"
                        },
                        {
                            "name": "derivedColumnSubject"
                        }
                    ],
                    "script": "parameters{\n\trefCodes as string[]\n}\nsource(output(\n\t\tcourses as (sourcedId as string, status as string, dateLastModified as string, title as string, courseCode as string, subjects as string[], subjectCodes as string[], grades as string[], org as (sourcedId as string, href as string, type as string), schoolYear as (sourcedId as string, href as string, type as string))[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> sourceCourses\nsourceCourses foldDown(unroll(courses),\n\tmapColumn(\n\t\tsourcedId = courses.sourcedId,\n\t\tstatus = courses.status,\n\t\ttitle = courses.title,\n\t\tschoolYear = courses.schoolYear.sourcedId,\n\t\torgSourcedId = courses.org.sourcedId,\n\t\tcode = courses.courseCode,\n\t\tsubjects = courses.subjects,\n\t\tgrades = courses.grades\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCourses\nfilterActive derive(subject = dropLeft(toString(reduce(subjects, '', #acc + ', ' + #item, #result)), 2),\n\t\tgrade = dropLeft(toString(reduce(grades, '', #acc + ', ' + #item, #result)), 2)) ~> derivedColumns\nFlattenCourses filter(equals(status, 'active')) ~> filterActive\nderivedColumns derive(subject = iif(in($refCodes, subject),subject,'')) ~> derivedColumnSubject\nderivedColumnSubject sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\ttitle as string,\n\t\tschoolYearSourcedId as string,\n\t\torgSourcedId as string,\n\t\tcode as string,\n\t\tsubject as string,\n\t\tgrade as string\n\t),\n\tpartitionFileNames:['courses.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\ttitle,\n\t\tschoolYearSourcedId = schoolYear,\n\t\torgSourcedId,\n\t\tcode,\n\t\tsubject,\n\t\tgrade\n\t),\n\tpartitionBy('hash', 1)) ~> sinkSdsCoursesCsv"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/OR_courses_json')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Courses_csv')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/createRolesCsv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SDS_DataFlows"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "OR_users_json",
                                "type": "DatasetReference"
                            },
                            "name": "sourceUsersJson"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Roles_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkSdsRolesCsv",
                            "rejectedDataLinkedService": {
                                "referenceName": "[parameters('Storage account name')]",
                                "type": "LinkedServiceReference"
                            }
                        }
                    ],
                    "transformations": [
                        {
                            "name": "flattenUsers"
                        },
                        {
                            "name": "flattenOrgs"
                        },
                        {
                            "name": "derivedColumn"
                        }
                    ],
                    "script": "source(output(\n\t\tusers as (sourcedId as string, status as string, dateLastModified as string, username as string, givenName as string, middleName as string, familyName as string, role as string, identifier as string, grades as string[], userIds as string[], orgs as (sourcedId as string, href as string, type as string)[], agents as string[], enabledUser as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> sourceUsersJson\nsourceUsersJson foldDown(unroll(users),\n\tmapColumn(\n\t\tuserSourcedId = users.sourcedId,\n\t\torgs = users.orgs,\n\t\trole = users.role,\n\t\tgrades = users.grades\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flattenUsers\nflattenUsers foldDown(unroll(orgs),\n\tmapColumn(\n\t\tuserSourcedId,\n\t\trole,\n\t\torgSourcedId = orgs.sourcedId,\n\t\tgradesArray = grades\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flattenOrgs\nflattenOrgs derive(grades = replace(iif(notEquals(size(gradesArray),0), substring(toString(gradesArray),2,length(toString(gradesArray))-2), ''),'\\\"',''),\n\t\tsessionSourcedId = '',\n\t\tisPrimary = '',\n\t\troleStartDate = '',\n\t\troleEndDate = '') ~> derivedColumn\nderivedColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tuserSourcedId as string,\n\t\torgSourcedId as string,\n\t\trole as string,\n\t\tsessionSourcedId as string,\n\t\tgrade as string,\n\t\tisPrimary as string,\n\t\troleStartDate as string,\n\t\troleEndDate as string\n\t),\n\tpartitionFileNames:['roles.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tuserSourcedId,\n\t\torgSourcedId,\n\t\trole,\n\t\tsessionSourcedId,\n\t\tgrade = grades,\n\t\tisPrimary,\n\t\troleStartDate,\n\t\troleEndDate\n\t),\n\tpartitionBy('hash', 1)) ~> sinkSdsRolesCsv"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/OR_users_json')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Roles_csv')]",
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/createEnrollmentsCsv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SDS_DataFlows"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "OR_enrollment_json",
                                "type": "DatasetReference"
                            },
                            "name": "sourceEnrollmentsJson"
                        },
                        {
                            "dataset": {
                                "referenceName": "OR_classGroups_json",
                                "type": "DatasetReference"
                            },
                            "name": "sourceClassGroups"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Enrollments_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkSdsEnrollmentsCsv"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "Flattenenrollments"
                        },
                        {
                            "name": "FlattenClassGroups"
                        },
                        {
                            "name": "classesArraySize"
                        },
                        {
                            "name": "DerivedColumn"
                        },
                        {
                            "name": "FlattenClassesArray"
                        },
                        {
                            "name": "Join"
                        },
                        {
                            "name": "FilterStatusAndGroupType"
                        },
                        {
                            "name": "RemoveDuplicates"
                        }
                    ],
                    "script": "source(output(\n\t\tenrollments as (sourcedId as string, status as string, dateLastModified as string, role as string, beginDate as string, school as (sourcedId as string, href as string, type as string), user as (sourcedId as string, href as string, type as string), class as (sourcedId as string, href as string, type as string))[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> sourceEnrollmentsJson\nsource(output(\n\t\tclassGroups as (sourcedId as string, status as string, dateLastModified as string, sectionGroupID as integer, title as string, groupType as string, classes as (sourcedId as string, href as string, type as string)[])[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> sourceClassGroups\nsourceEnrollmentsJson foldDown(unroll(enrollments, enrollments),\n\tmapColumn(\n\t\tenrollmentUserSourcedId = enrollments.user.sourcedId,\n\t\tenrollmentsClasssourceId = enrollments.class.sourcedId,\n\t\tenrollmentsRole = enrollments.role,\n\t\tschoolsourcedId = enrollments.school.sourcedId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flattenenrollments\nsourceClassGroups foldDown(unroll(classGroups),\n\tmapColumn(\n\t\tclassGroupsSourcedId = classGroups.sourcedId,\n\t\tgroupType = classGroups.groupType,\n\t\tclassesArray = classGroups.classes,\n\t\tstatus = classGroups.status\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenClassGroups\nFilterStatusAndGroupType derive(classesSize = size(classesArray)) ~> classesArraySize\nJoin derive(enrollmentUserSourcedId = enrollmentUserSourcedId,\n\t\tsectionId = iif(classesSize>1,classGroupsSourcedId,enrollmentsClasssourceId),\n\t\tenrollmentsRole = enrollmentsRole) ~> DerivedColumn\nclassesArraySize foldDown(unroll(classesArray, classesArray),\n\tmapColumn(\n\t\tclassGroupsSourcedId,\n\t\tgroupType,\n\t\tstatus,\n\t\tclassesSize,\n\t\tclassesSourceId = classesArray.sourcedId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenClassesArray\nFlattenenrollments, RemoveDuplicates join(enrollmentsClasssourceId == classesSourceId,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nFlattenClassGroups filter(and(equals(status, \"active\"),equals(groupType, \"cross-listed\"))) ~> FilterStatusAndGroupType\nFlattenClassesArray aggregate(groupBy(classGroupsSourcedId),\n\teach(match(name!='classGroupsSourcedId'), $$ = first($$))) ~> RemoveDuplicates\nDerivedColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tuserSourcedId as string,\n\t\tclassSourcedId as string,\n\t\trole as string\n\t),\n\tpartitionFileNames:['enrollments.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tuserSourcedId = enrollmentUserSourcedId,\n\t\tclassSourcedId = sectionId,\n\t\trole = enrollmentsRole\n\t),\n\tpartitionBy('hash', 1)) ~> sinkSdsEnrollmentsCsv"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/OR_enrollment_json')]",
                "[concat(variables('factoryId'), '/datasets/OR_classGroups_json')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Enrollments_csv')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/createDemographicsCsv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SDS_DataFlows"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "OR_demographics_json",
                                "type": "DatasetReference"
                            },
                            "name": "sourceDemographicsJson"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Demographics_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkSdsDemographicsCsv"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "flattenDemographics"
                        },
                        {
                            "name": "derivedColumn"
                        },
                        {
                            "name": "filterActiveUsers"
                        },
                        {
                            "name": "disArrayRaceCodes"
                        }
                    ],
                    "script": "source(output(\n\t\tdemographics as (sourcedId as string, status as string, dateLastModified as string, sex as string, americanIndianOrAlaskaNative as string, asian as string, blackOrAfricanAmerican as string, nativeHawaiianOrOtherPacificIslander as string, white as string, demographicRaceTwoOrMoreRaces as string, hispanicOrLatinoEthnicity as string, countryOfBirthCode as string, birthCity as string, birthState as string, birthDate as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> sourceDemographicsJson\nsourceDemographicsJson foldDown(unroll(demographics),\n\tmapColumn(\n\t\tsourcedId = demographics.sourcedId,\n\t\tstatus = demographics.status,\n\t\tsex = demographics.sex,\n\t\tbirthDate = demographics.birthDate,\n\t\tcountryOfBirthCode = demographics.countryOfBirthCode,\n\t\tbirthState = demographics.birthState,\n\t\tbirthCity = demographics.birthCity,\n\t\tamericanIndianOrAlaskaNative = demographics.americanIndianOrAlaskaNative,\n\t\tasian = demographics.asian,\n\t\tblackOrAfricanAmerican = demographics.blackOrAfricanAmerican,\n\t\thispanicOrLatinoEthnicity = demographics.hispanicOrLatinoEthnicity,\n\t\tnativeHawaiianOrOtherPacificIslander = demographics.nativeHawaiianOrOtherPacificIslander,\n\t\twhite = demographics.white,\n\t\tdemographicRaceTwoOrMoreRaces = demographics.demographicRaceTwoOrMoreRaces\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flattenDemographics\nfilterActiveUsers derive(ethnicityCodes = iif(hispanicOrLatinoEthnicity == 'true', 'hispanicOrLatinoEthnicity', ''),\n\t\traceCodes = mapIf([americanIndianOrAlaskaNative,asian,blackOrAfricanAmerican,nativeHawaiianOrOtherPacificIslander,white,demographicRaceTwoOrMoreRaces], toString(#item) == 'true', at(['americanIndianOrAlaskaNative','asian','blackOrAfricanAmerican','nativeHawaiianOrOtherPacificIslander','white','demographicRaceTwoOrMoreRaces'], toInteger(#index)))) ~> derivedColumn\nflattenDemographics filter(equals(status, 'active')) ~> filterActiveUsers\nderivedColumn derive(raceCodes = dropLeft(toString(reduce(raceCodes, '', #acc + ', ' + #item, #result)), 2)) ~> disArrayRaceCodes\ndisArrayRaceCodes sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tuserSourcedId as string,\n\t\tsex as string,\n\t\tbirthDate as string,\n\t\tbirthCountry as string,\n\t\tbirthState as string,\n\t\tbirthCity as string,\n\t\tethnicityCodes as string,\n\t\traceCodes as string\n\t),\n\tpartitionFileNames:['demographics.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tuserSourcedId = sourcedId,\n\t\tsex,\n\t\tbirthDate,\n\t\tbirthCountry = countryOfBirthCode,\n\t\tbirthState,\n\t\tbirthCity,\n\t\tethnicityCodes,\n\t\traceCodes\n\t),\n\tpartitionBy('hash', 1)) ~> sinkSdsDemographicsCsv"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/OR_demographics_json')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Demographics_csv')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/createClassesCsv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SDS_DataFlows"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "OR_class_json",
                                "type": "DatasetReference"
                            },
                            "name": "sourceClasses"
                        },
                        {
                            "dataset": {
                                "referenceName": "OR_classGroups_json",
                                "type": "DatasetReference"
                            },
                            "name": "sourceClassGroups"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_classes_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkSdsClassesCsv"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FlattenClasses"
                        },
                        {
                            "name": "DerivedColumnTermsValue"
                        },
                        {
                            "name": "FlattenclassGroups"
                        },
                        {
                            "name": "DerivedColumn"
                        },
                        {
                            "name": "ClassesArraySize"
                        },
                        {
                            "name": "Join"
                        },
                        {
                            "name": "Flatten"
                        },
                        {
                            "name": "FilterStatusAndGroupType"
                        },
                        {
                            "name": "RemoveDuplicates"
                        }
                    ],
                    "script": "source(output(\n\t\tclasses as (sourcedId as string, status as string, dateLastModified as string, title as string, classType as string, classCode as string, location as string, periods as string[], subjects as string[], subjectCodes as string[], course as (sourcedId as string, href as string, type as string), school as (sourcedId as string, href as string, type as string), terms as (sourcedId as string, href as string, type as string)[])[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> sourceClasses\nsource(output(\n\t\tclassGroups as (sourcedId as string, status as string, dateLastModified as string, sectionGroupID as integer, title as string, groupType as string, classes as (sourcedId as string, href as string, type as string)[])[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> sourceClassGroups\nsourceClasses foldDown(unroll(classes, classes),\n\tmapColumn(\n\t\ttitle = classes.title,\n\t\tclassSourcedId = classes.sourcedId,\n\t\torgSourcedId = classes.school.sourcedId,\n\t\ttermsArray = classes.terms,\n\t\tcourseSouredId = classes.course.sourcedId\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenClasses\nFlattenClasses derive(termSourcedIds = replace(iif(notEquals(size(array(termsArray.sourcedId)),0), substring(toString(termsArray.sourcedId),2,length(toString((termsArray.sourcedId)))-2), ''),'\\\"','')) ~> DerivedColumnTermsValue\nsourceClassGroups foldDown(unroll(classGroups, classGroups),\n\tmapColumn(\n\t\tclassGroupsSourcedId = classGroups.sourcedId,\n\t\tclassGroupTitle = classGroups.title,\n\t\tgroupType = classGroups.groupType,\n\t\tstatus = classGroups.status,\n\t\tclassesArray = classGroups.classes\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenclassGroups\nJoin derive(sourcedId = iif(classesSize>1, classGroupsSourcedId,classSourcedId),\n\t\ttitle = iif(classesSize>1, classGrouptitle, title),\n\t\torgSourcedId = orgSourcedId,\n\t\tcourseSouredId = courseSouredId,\n\t\tsessionSourcedIds = termSourcedIds) ~> DerivedColumn\nFilterStatusAndGroupType derive(classesSize = size(classesArray)) ~> ClassesArraySize\nDerivedColumnTermsValue, RemoveDuplicates join(classSourcedId == classesNumber,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join\nClassesArraySize foldDown(unroll(classesArray, classesArray),\n\tmapColumn(\n\t\tclassGroupsSourcedId,\n\t\tclassGrouptitle = classGroupTitle,\n\t\tclassesNumber = classesArray.sourcedId,\n\t\tgroupType,\n\t\tstatus,\n\t\tclassesSize\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten\nFlattenclassGroups filter(and(equals(status, \"active\"),equals(groupType, \"cross-listed\"))) ~> FilterStatusAndGroupType\nFlatten aggregate(groupBy(classGroupsSourcedId),\n\teach(match(name!='classGroupsSourcedId'), $$ = first($$))) ~> RemoveDuplicates\nDerivedColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\torgSourcedId as string,\n\t\ttitle as string,\n\t\tsessionSourcedIds as string,\n\t\tcourseSouredId as string\n\t),\n\tpartitionFileNames:['classes.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\torgSourcedId,\n\t\ttitle,\n\t\tsessionSourcedIds,\n\t\tcourseSouredId\n\t),\n\tpartitionBy('hash', 1)) ~> sinkSdsClassesCsv"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/OR_class_json')]",
                "[concat(variables('factoryId'), '/datasets/OR_classGroups_json')]",
                "[concat(variables('factoryId'), '/datasets/SDS_classes_csv')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/createRelationshipsCsv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SDS_DataFlows"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "OR_users_json",
                                "type": "DatasetReference"
                            },
                            "name": "sourceUsersJson"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Relationships_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkSdsRelationshipsCsv",
                            "rejectedDataLinkedService": {
                                "referenceName": "[parameters('Storage account name')]",
                                "type": "LinkedServiceReference"
                            }
                        }
                    ],
                    "transformations": [
                        {
                            "name": "flattenUsers"
                        },
                        {
                            "name": "filterActiveUsersWithAgents"
                        },
                        {
                            "name": "flattenAgents"
                        },
                        {
                            "name": "derivedColumnRole"
                        }
                    ],
                    "script": "source(output(\n\t\tusers as (sourcedId as string, status as string, dateLastModified as string, username as string, givenName as string, middleName as string, familyName as string, role as string, identifier as string, grades as string[], userIds as string[], orgs as (sourcedId as string, href as string, type as string)[], agents as (sourcedId as string, href as string, type as string)[], enabledUser as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> sourceUsersJson\nsourceUsersJson foldDown(unroll(users),\n\tmapColumn(\n\t\tsourcedId = users.sourcedId,\n\t\trole = users.role,\n\t\tagents = users.agents,\n\t\tenabledUser = users.enabledUser,\n\t\tstatus = users.status\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flattenUsers\nflattenUsers filter(equals(status, 'active') && notEquals(size(agents),0)) ~> filterActiveUsersWithAgents\nfilterActiveUsersWithAgents foldDown(unroll(agents),\n\tmapColumn(\n\t\tsourcedId,\n\t\tagentSourcedId = agents.sourcedId,\n\t\trole,\n\t\tenabledUser,\n\t\tstatus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flattenAgents\nflattenAgents derive(role = iif(contains(['parent', 'guardian', 'relative', 'doctor', 'aide', 'other'], #item == role), role, 'other')) ~> derivedColumnRole\nderivedColumnRole sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tuserSourcedId as string,\n\t\trelationshipUserSourcedId as string,\n\t\trelationshipRole as string\n\t),\n\tpartitionFileNames:['relationships.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tuserSourcedId = sourcedId,\n\t\trelationshipUserSourcedId = agentSourcedId,\n\t\trelationshipRole = role\n\t),\n\tpartitionBy('hash', 1)) ~> sinkSdsRelationshipsCsv"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/OR_users_json')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Relationships_csv')]",
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/createAcademicSessionsCsv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SDS_DataFlows"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "OR_academicSessions_json",
                                "type": "DatasetReference"
                            },
                            "name": "sourceAcademicSessions"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_AcademicSessions_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkSDSAcademicSessions"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "flattenAcademicSessions"
                        },
                        {
                            "name": "filterbasedonSchoolyearandStatus"
                        },
                        {
                            "name": "derivedColumnDate"
                        },
                        {
                            "name": "selectColumns"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          academicSessions as (sourcedId as string, status as string, dateLastModified as string, title as string, startDate as string, endDate as string, type as string, schoolYear as string, children as (sourcedId as string, href as string, type as string)[])[]",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     documentForm: 'documentPerLine') ~> sourceAcademicSessions",
                        "sourceAcademicSessions foldDown(unroll(academicSessions),",
                        "     mapColumn(",
                        "          sourcedId = academicSessions.sourcedId,",
                        "          status = academicSessions.status,",
                        "          title = academicSessions.title,",
                        "          type = academicSessions.type,",
                        "          schoolYear = academicSessions.schoolYear,",
                        "          startDate = academicSessions.startDate,",
                        "          endDate = academicSessions.endDate",
                        "     ),",
                        "     skipDuplicateMapInputs: false,",
                        "     skipDuplicateMapOutputs: false) ~> flattenAcademicSessions",
                        "flattenAcademicSessions filter(and(equals(status,'active'), greater(schoolYear, '2022'))) ~> filterbasedonSchoolyearandStatus",
                        "filterbasedonSchoolyearandStatus derive(startDate = toDate(startDate, 'YYYY-MM-DD'),",
                        "          endDate = toDate(endDate, 'YYYY-MM-DD')) ~> derivedColumnDate",
                        "derivedColumnDate select(mapColumn(",
                        "          sourcedId,",
                        "          title,",
                        "          type,",
                        "          schoolYear,",
                        "          startDate,",
                        "          endDate",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectColumns",
                        "selectColumns sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          title as string,",
                        "          type as string,",
                        "          schoolYear as string,",
                        "          startDate as string,",
                        "          endDate as string",
                        "     ),",
                        "     partitionFileNames:['academicSessions.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          title,",
                        "          type,",
                        "          schoolYear,",
                        "          startDate,",
                        "          endDate",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkSDSAcademicSessions"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/OR_academicSessions_json')]",
                "[concat(variables('factoryId'), '/datasets/SDS_AcademicSessions_csv')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/validateOldUsersCsv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SDS_DataFlows"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Users_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sourceUsersCsv"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Users_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkinvalidUserRecordsCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Users_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidUserCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Validation_Errors_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkUserInvalidErrorLog"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "userValidations"
                        },
                        {
                            "name": "invalidUserRecords"
                        },
                        {
                            "name": "derivedColumn1"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     sdsStorageFolder as string",
                        "}",
                        "source(output(",
                        "          sourcedId as string,",
                        "          username as string,",
                        "          givenName as string,",
                        "          familyName as string,",
                        "          activeDirectoryMatchId as string,",
                        "          email as string,",
                        "          phone as string,",
                        "          sms as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/users.csv'))]) ~> sourceUsersCsv",
                        "sourceUsersCsv derive(invalidSourcedId = isNull(sourcedId) || length(sourcedId) == 0,",
                        "          invalidUsername = isNull(username) || length(username) == 0) ~> userValidations",
                        "userValidations split(invalidSourcedId ||invalidUsername,",
                        "     disjoint: false) ~> invalidUserRecords@(invalidUserRecords, validUserRecords)",
                        "invalidUserRecords@invalidUserRecords derive(sourcedId = sourcedId,",
                        "          type = \"users\",",
                        "          errors = concat(iif(invalidSourcedId, 'Invalid SourcedId; ', ''),iif(invalidUsername, 'Invalid User Name; ', ''))) ~> derivedColumn1",
                        "invalidUserRecords@invalidUserRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          username as string,",
                        "          givenName as string,",
                        "          familyName as string,",
                        "          activeDirectoryMatchId as string,",
                        "          email as string,",
                        "          phone as string,",
                        "          sms as string",
                        "     ),",
                        "     partitionFileNames:['invalid_user_records.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          username,",
                        "          activeDirectoryMatchId,",
                        "          email,",
                        "          phone,",
                        "          sms",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkinvalidUserRecordsCSV",
                        "invalidUserRecords@validUserRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          username as string,",
                        "          givenName as string,",
                        "          familyName as string,",
                        "          activeDirectoryMatchId as string,",
                        "          email as string,",
                        "          phone as string,",
                        "          sms as string",
                        "     ),",
                        "     partitionFileNames:['users.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          username,",
                        "          activeDirectoryMatchId,",
                        "          email,",
                        "          phone,",
                        "          sms",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkValidUserCSV",
                        "derivedColumn1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     partitionFileNames:['validation.log'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          type,",
                        "          errors",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkUserInvalidErrorLog"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDS_Users_csv')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Validation_Errors_csv')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/validateNewUsersCsv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SDS_DataFlows"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Users_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sourceUsersCsv"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Users_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkinvalidUserRecordsCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Users_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidUserCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Validation_Errors_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidUsersErrorLog"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "userValidations"
                        },
                        {
                            "name": "invalidUserRecords"
                        },
                        {
                            "name": "derivedColumn1"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     sdsStorageFolder as string",
                        "}",
                        "source(output(",
                        "          sourcedId as string,",
                        "          username as string,",
                        "          givenName as string,",
                        "          familyName as string,",
                        "          activeDirectoryMatchId as string,",
                        "          email as string,",
                        "          phone as string,",
                        "          sms as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     wildcardPaths:[(concat($sdsStorageFolder,'/users.csv'))]) ~> sourceUsersCsv",
                        "sourceUsersCsv derive(invalidSourcedId = isNull(sourcedId) || length(sourcedId) == 0,",
                        "          invalidUsername = isNull(username) || length(username) == 0,",
                        "          invalidGivenName = isNull(givenName) || length(givenName) == 0,",
                        "          invalidFamilyName = isNull(familyName) || length(familyName) == 0) ~> userValidations",
                        "userValidations split(invalidSourcedId ||invalidUsername || invalidGivenName || invalidFamilyName,",
                        "     disjoint: false) ~> invalidUserRecords@(invalidUserRecords, validUserRecords)",
                        "invalidUserRecords@invalidUserRecords derive(sourcedId = sourcedId,",
                        "          type = \"users\",",
                        "          errors = concat(iif(invalidSourcedId, 'Invalid SourcedId; ', ''),iif(invalidUsername, 'Invalid User Name; ', ''), iif(invalidGivenName, 'Invalid Given Name; ', ''), iif(invalidFamilyName, 'Invalid Family Name; ', '') )) ~> derivedColumn1",
                        "invalidUserRecords@invalidUserRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          username as string,",
                        "          givenName as string,",
                        "          familyName as string,",
                        "          activeDirectoryMatchId as string,",
                        "          email as string,",
                        "          phone as string,",
                        "          sms as string",
                        "     ),",
                        "     partitionFileNames:['invalid_user_records.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          username,",
                        "          givenName,",
                        "          familyName,",
                        "          activeDirectoryMatchId,",
                        "          email,",
                        "          phone,",
                        "          sms",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkinvalidUserRecordsCSV",
                        "invalidUserRecords@validUserRecords sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          sourcedId as string,",
                        "          username as string,",
                        "          givenName as string,",
                        "          familyName as string,",
                        "          activeDirectoryMatchId as string,",
                        "          email as string,",
                        "          phone as string,",
                        "          sms as string",
                        "     ),",
                        "     partitionFileNames:['users.csv'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          username,",
                        "          givenName,",
                        "          familyName,",
                        "          activeDirectoryMatchId,",
                        "          email,",
                        "          phone,",
                        "          sms",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkValidUserCSV",
                        "derivedColumn1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     partitionFileNames:['validation.log'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     mapColumn(",
                        "          sourcedId,",
                        "          type,",
                        "          errors",
                        "     ),",
                        "     partitionBy('hash', 1)) ~> sinkInvalidUsersErrorLog"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDS_Users_csv')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Validation_Errors_csv')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/createOldUsersCsv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SDS_DataFlows"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "OR_users_json",
                                "type": "DatasetReference"
                            },
                            "name": "sourceUsersJson"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Users_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkSdsUsersCsv",
                            "rejectedDataLinkedService": {
                                "referenceName": "[parameters('Storage account name')]",
                                "type": "LinkedServiceReference"
                            }
                        }
                    ],
                    "transformations": [
                        {
                            "name": "flattenUsers"
                        },
                        {
                            "name": "derivedColumn"
                        }
                    ],
                    "script": "source(output(\n\t\tusers as (sourcedId as string, status as string, dateLastModified as string, username as string, givenName as string, middleName as string, familyName as string, role as string, identifier as string, grades as string[], userIds as string[], orgs as (sourcedId as string, href as string, type as string)[], agents as string[], enabledUser as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> sourceUsersJson\nsourceUsersJson foldDown(unroll(users),\n\tmapColumn(\n\t\tsourcedId = users.sourcedId,\n\t\tusername = users.username,\n\t\tgivenName = users.givenName,\n\t\tfamilyName = users.familyName,\n\t\tenabledUser = users.enabledUser\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flattenUsers\nflattenUsers derive(activeStatus = iif(toBoolean(enabledUser),'active','inactive'),\n\t\tactiveDirectoryMatchId = '',\n\t\temail = '',\n\t\tphone = '',\n\t\tsms = '') ~> derivedColumn\nderivedColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\tusername as string,\n\t\tgivenName as string,\n\t\tfamilyName as string,\n\t\tactiveDirectoryMatchId as string,\n\t\temail as string,\n\t\tphone as string,\n\t\tsms as string\n\t),\n\tpartitionFileNames:['users.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\tusername,\n\t\tactiveDirectoryMatchId,\n\t\temail,\n\t\tphone,\n\t\tsms\n\t),\n\tpartitionBy('hash', 1)) ~> sinkSdsUsersCsv"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/OR_users_json')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Users_csv')]",
                "[concat(variables('factoryId'), '/linkedServices/',parameters('Storage account name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/validateSdsAllCsv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SDS_DataFlows"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Org_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sourceOrgsCsv"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Validation_Errors_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sourceInvalidUsersErrorLog"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Roles_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sourceRolesCsv"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_AcademicSessions_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sourceAcademicSessionsCsv"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Enrollments_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sourceEnrollmentCsv"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Courses_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sourceCoursesCsv"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Demographics_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sourceDemographicsCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Relationships_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sourceRelationshipsCsv"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_classes_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sourceClassSouece"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Validation_Errors_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidationErrorsCsv"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Org_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidOrgCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Org_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidOrgsCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Roles_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidRoleCsv"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Courses_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidCoursesCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Courses_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidCoursesCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Enrollments_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidEnrollmentsCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Enrollments_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidEnrollmentsCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_AcademicSessions_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidAcademicSessionsCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_AcademicSessions_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidAcademicSessionsCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Roles_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidRoleCsv"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Demographics_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidDemographicsCsv"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Demographics_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidDemographicsCsv"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Relationships_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidRelationshipRecords"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Relationships_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidRelationshipRecords"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_classes_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidClassesRecords"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_classes_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidClassesRecords"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "orgsValidations"
                        },
                        {
                            "name": "invalidOrgRecords"
                        },
                        {
                            "name": "orgErrors"
                        },
                        {
                            "name": "roleValidations"
                        },
                        {
                            "name": "invalidRoleRecords"
                        },
                        {
                            "name": "roleErrors"
                        },
                        {
                            "name": "academicSessionsValidations"
                        },
                        {
                            "name": "invalidAcademicSessionsRecords"
                        },
                        {
                            "name": "academicSessionsErrors"
                        },
                        {
                            "name": "enrollmentValidations"
                        },
                        {
                            "name": "invalidEnrollRecords"
                        },
                        {
                            "name": "enrollmentsErrors"
                        },
                        {
                            "name": "coursesValidations"
                        },
                        {
                            "name": "invalidCoursesRecords"
                        },
                        {
                            "name": "coursesErrors"
                        },
                        {
                            "name": "Union"
                        },
                        {
                            "name": "addDateAndSchoolId"
                        },
                        {
                            "name": "demographicsValidations"
                        },
                        {
                            "name": "invalidDemographicsRecords"
                        },
                        {
                            "name": "demographicErrors"
                        },
                        {
                            "name": "relationshipValidations"
                        },
                        {
                            "name": "invalidRelationshipRecords"
                        },
                        {
                            "name": "relationshipErrors"
                        },
                        {
                            "name": "classValidations"
                        },
                        {
                            "name": "inValidClasses"
                        },
                        {
                            "name": "classesErrors"
                        }
                    ],
                    "script": "parameters{\n\tsdsStorageFolder as string\n}\nsource(output(\n\t\tsourcedId as string,\n\t\tname as string,\n\t\ttype as string,\n\t\tparentSourcedId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[(concat($sdsStorageFolder,'/orgs.csv'))]) ~> sourceOrgsCsv\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[(concat($sdsStorageFolder,'/validation.log'))]) ~> sourceInvalidUsersErrorLog\nsource(output(\n\t\tuserSourcedId as string,\n\t\torgSourcedId as string,\n\t\trole as string,\n\t\tsessionSourcedId as string,\n\t\tgrade as string,\n\t\tisPrimary as string,\n\t\troleStartDate as string,\n\t\troleEndDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[(concat($sdsStorageFolder,'/roles.csv'))]) ~> sourceRolesCsv\nsource(output(\n\t\tsourcedId as string,\n\t\ttitle as string,\n\t\ttype as string,\n\t\tschoolYear as string,\n\t\tstartDate as string,\n\t\tendDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[(concat($sdsStorageFolder,'/academicSessions.csv'))]) ~> sourceAcademicSessionsCsv\nsource(output(\n\t\tuserSourcedId as string,\n\t\tclassSourcedId as string,\n\t\trole as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[(concat($sdsStorageFolder,'/enrollments.csv'))]) ~> sourceEnrollmentCsv\nsource(output(\n\t\tsourcedId as string,\n\t\ttitle as string,\n\t\tschoolYearSourcedId as string,\n\t\torgSourcedId as string,\n\t\tcode as string,\n\t\tsubject as string,\n\t\tgrade as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[(concat($sdsStorageFolder,'/courses.csv'))]) ~> sourceCoursesCsv\nsource(output(\n\t\tuserSourcedId as string,\n\t\tsex as string,\n\t\tbirthDate as string,\n\t\tbirthCountry as string,\n\t\tbirthState as string,\n\t\tbirthCity as string,\n\t\tethnicityCodes as string,\n\t\traceCodes as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[(concat($sdsStorageFolder,'/demographics.csv'))]) ~> sourceDemographicsCSV\nsource(output(\n\t\tuserSourcedId as string,\n\t\trelationshipUserSourcedId as string,\n\t\trelationshipRole as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[(concat($sdsStorageFolder,'/relationships.csv'))]) ~> sourceRelationshipsCsv\nsource(output(\n\t\tsourcedId as string,\n\t\torgSourcedId as string,\n\t\ttitle as string,\n\t\tsessionSourcedId as string,\n\t\tcourseSouredId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[(concat($sdsStorageFolder,'/classes.csv'))]) ~> sourceClassSouece\nsourceOrgsCsv derive(invalidSourcedId = isNull(sourcedId) || length(sourcedId) == 0,\n\t\tinvalidName = isNull(name) || length(name) == 0,\n\t\tinvalidType = isNull(type) || length(type) == 0) ~> orgsValidations\norgsValidations split(invalidSourcedId || invalidName || invalidType,\n\tdisjoint: false) ~> invalidOrgRecords@(invalidOrgRecords, validOrgRecords)\ninvalidOrgRecords@invalidOrgRecords derive(type = \"org\",\n\t\terrors = concat(iif(invalidSourcedId, 'Invalid SourcedId; ', ''),iif(invalidName, 'Invalid Name; ', '')),\n\t\tSourcedId = sourcedId) ~> orgErrors\nsourceRolesCsv derive(invalidUserSourcedId = isNull(userSourcedId) || length(userSourcedId) == 0,\n\t\tinvalidOrgSourcedId = isNull(orgSourcedId) || length(orgSourcedId) == 0,\n\t\tinvalidRole = isNull(role) || length(role) == 0) ~> roleValidations\nroleValidations split(invalidUserSourcedId || invalidOrgSourcedId || invalidRole,\n\tdisjoint: false) ~> invalidRoleRecords@(invalidRoleRecords, validRoleRecords)\ninvalidRoleRecords@invalidRoleRecords derive(SourcedId = userSourcedId,\n\t\ttype = \"role\",\n\t\terrors = concat( iif(invalidUserSourcedId, 'Invalid User SourcedId; ', ''), iif(invalidOrgSourcedId, 'Invalid Org SourcedId; ', ''), iif(invalidRole, 'Invalid Role; ', '') )) ~> roleErrors\nsourceAcademicSessionsCsv derive(invalidSourcedId = isNull(sourcedId) || length(sourcedId) == 0,\n\t\tinvalidTitle = isNull(title) || length(title) == 0,\n\t\tinvalidType = isNull(type) || length(type) == 0,\n\t\tinvalidSchoolYear = isNull(schoolYear) || length(schoolYear) == 0,\n\t\tinvalidStartDate = isNull(toString(startDate)) || length(toString(startDate)) == 0,\n\t\tinvalidEndDate = isNull(toString({endDate})) || length(toString({endDate})) == 0) ~> academicSessionsValidations\nacademicSessionsValidations split(invalidSourcedId || invalidTitle || invalidType || invalidSchoolYear || invalidStartDate || invalidEndDate,\n\tdisjoint: false) ~> invalidAcademicSessionsRecords@(invalidSectionRecords, validSectionRecords)\ninvalidAcademicSessionsRecords@invalidSectionRecords derive(SourcedId = sourcedId,\n\t\ttype = \"AcademicSessions\",\n\t\terrors = concat(    iif(invalidSourcedId, 'Invalid sourcedID; ', ''),     iif(invalidTitle, 'Invalid Title; ', ''),    iif(invalidType, 'Invalid Type; ', ''), iif(invalidSchoolYear, 'Invalid SchoolYear; ', ''), iif(invalidStartDate, 'Invalid StartDate; ', ''), iif(invalidEndDate, 'Invalid End Date; ', ''))) ~> academicSessionsErrors\nsourceEnrollmentCsv derive(invalidUserSourcedId = isNull(userSourcedId) || length(userSourcedId) == 0,\n\t\tinvalidClassSourcedId = isNull(classSourcedId) || length(classSourcedId) == 0,\n\t\tinvalidRole = isNull(role) || length(role) == 0) ~> enrollmentValidations\nenrollmentValidations split(invalidUserSourcedId || invalidClassSourcedId || invalidRole,\n\tdisjoint: false) ~> invalidEnrollRecords@(invalidEnrollmentsRecords, validEnrollmentsRecords)\ninvalidEnrollRecords@invalidEnrollmentsRecords derive(SourcedId = userSourcedId,\n\t\ttype = \"enrollments\",\n\t\terrors = concat(    iif(invalidUserSourcedId, 'Invalid User SourcedId; ', ''),     iif(invalidClassSourcedId, 'Invalid Class SourcedId; ', ''), iif(invalidRole, 'Invalid Role; ', ''))) ~> enrollmentsErrors\nsourceCoursesCsv derive(invalidSourcedId = isNull(sourcedId) || length(sourcedId) == 0,\n\t\tinvalidTitle = isNull(title) || length(title) == 0,\n\t\tinvalidCode = isNull(code) || length(code) == 0) ~> coursesValidations\ncoursesValidations split(invalidSourcedId || invalidTitle || invalidCode,\n\tdisjoint: false) ~> invalidCoursesRecords@(invalidCoursesRosterRecords, validCoursesRosterRecords)\ninvalidCoursesRecords@invalidCoursesRosterRecords derive(SourcedId = {sourcedId},\n\t\ttype = \"courses\",\n\t\terrors = concat(    iif(invalidSourcedId, 'Invalid SourcedId; ', ''),     iif(invalidTitle, 'Invalid Title; ', ''), iif(invalidCode, 'Invalid Code; ', ''))) ~> coursesErrors\norgErrors, sourceInvalidUsersErrorLog, roleErrors, academicSessionsErrors, enrollmentsErrors, coursesErrors, relationshipErrors, demographicErrors, classesErrors union(byName: true)~> Union\nUnion derive(date = currentUTC()) ~> addDateAndSchoolId\nsourceDemographicsCSV derive(invalidUserSourcedId = isNull(userSourcedId) || length(userSourcedId) == 0) ~> demographicsValidations\ndemographicsValidations split(invalidUserSourcedId,\n\tdisjoint: false) ~> invalidDemographicsRecords@(invalidDemographicRecords, validDemographicRecords)\ninvalidDemographicsRecords@invalidDemographicRecords derive(SourcedId = {userSourcedId},\n\t\ttype = \"demographics\",\n\t\terrors = concat(iif(invalidUserSourcedId, 'Invalid User SourcedId; ', ''))) ~> demographicErrors\nsourceRelationshipsCsv derive(invalidUserSourcedId = isNull(userSourcedId) || length(userSourcedId) == 0,\n\t\tinvalidRelationshipUserSourcedId = isNull(relationshipUserSourcedId) || length(relationshipUserSourcedId) == 0,\n\t\tinvalidRelationshipRoles = isNull(relationshipRole) || length(relationshipRole) == 0) ~> relationshipValidations\nrelationshipValidations split(invalidUserSourcedId || invalidRelationshipUserSourcedId || invalidRelationshipRoles,\n\tdisjoint: false) ~> invalidRelationshipRecords@(invalidRelationshipRecords, validRelationshipRecords)\ninvalidRelationshipRecords@invalidRelationshipRecords derive(SourcedId = {userSourcedId},\n\t\ttype = \"relationships\",\n\t\terrors = concat(iif(invalidUserSourcedId, 'Invalid UserSourcedId; ', ''),     iif(invalidRelationshipUserSourcedId, 'Invalid relationshipUserSourcedId; ', ''), iif(invalidRelationshipRoles, 'Invalid relationship Roles; ', ''))) ~> relationshipErrors\nsourceClassSouece derive(invalidSourcedId = isNull(sourcedId) || length(sourcedId) == 0,\n\t\tinvalidOrgSourcedId = isNull(orgSourcedId) || length(orgSourcedId) == 0,\n\t\tinvalidTitle = isNull(title) || length(title) == 0) ~> classValidations\nclassValidations split(invalidSourcedId || invalidOrgSourcedId || invalidTitle,\n\tdisjoint: false) ~> inValidClasses@(invalidClassesRecords, validClassesRecords)\ninValidClasses@invalidClassesRecords derive(sourcedId = {sourcedId},\n\t\ttype = \"classes\",\n\t\terrors = concat(iif(invalidSourcedId, 'Invalid SourcedId; ', ''),iif(invalidOrgSourcedId, 'Invalid Org SourcedId; ', ''),iif(invalidTitle, 'Invalid Title; ', '') )) ~> classesErrors\naddDateAndSchoolId sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['validation.log'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tdate,\n\t\ttype,\n\t\tsourcedId = Union@SourcedId,\n\t\terrors\n\t),\n\tpartitionBy('hash', 1)) ~> sinkValidationErrorsCsv\ninvalidOrgRecords@invalidOrgRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\tname as string,\n\t\ttype as string,\n\t\tparentSourcedId as string\n\t),\n\tpartitionFileNames:['invalid_orgs_records.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\tname,\n\t\ttype\n\t),\n\tpartitionBy('hash', 1)) ~> sinkInvalidOrgCSV\ninvalidOrgRecords@validOrgRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\tname as string,\n\t\ttype as string,\n\t\tparentSourcedId as string\n\t),\n\tpartitionFileNames:['orgs.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\tname,\n\t\ttype\n\t),\n\tpartitionBy('hash', 1)) ~> sinkValidOrgsCSV\ninvalidRoleRecords@validRoleRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tuserSourcedId as string,\n\t\torgSourcedId as string,\n\t\trole as string,\n\t\tsessionSourcedId as string,\n\t\tgrade as string,\n\t\tisPrimary as string,\n\t\troleStartDate as string,\n\t\troleEndDate as string\n\t),\n\tpartitionFileNames:['roles.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tuserSourcedId,\n\t\trole,\n\t\torgSourcedId,\n\t\tgrade\n\t),\n\tpartitionBy('hash', 1)) ~> sinkValidRoleCsv\ninvalidCoursesRecords@validCoursesRosterRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\ttitle as string,\n\t\tschoolYearSourcedId as string,\n\t\torgSourcedId as string,\n\t\tcode as string,\n\t\tsubject as string,\n\t\tgrade as string\n\t),\n\tpartitionFileNames:['courses.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\ttitle,\n\t\tschoolYearSourcedId,\n\t\torgSourcedId,\n\t\tcode,\n\t\tsubject,\n\t\tgrade\n\t),\n\tpartitionBy('hash', 1)) ~> sinkValidCoursesCSV\ninvalidCoursesRecords@invalidCoursesRosterRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\ttitle as string,\n\t\tschoolYearSourcedId as string,\n\t\torgSourcedId as string,\n\t\tcode as string,\n\t\tsubject as string,\n\t\tgrade as string\n\t),\n\tpartitionFileNames:['invalid_courses_records.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\ttitle,\n\t\tschoolYearSourcedId,\n\t\tcode\n\t),\n\tpartitionBy('hash', 1)) ~> sinkInvalidCoursesCSV\ninvalidEnrollRecords@validEnrollmentsRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tuserSourcedId as string,\n\t\tclassSourcedId as string,\n\t\trole as string\n\t),\n\tpartitionFileNames:['enrollments.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tuserSourcedId,\n\t\tclassSourcedId,\n\t\trole\n\t),\n\tpartitionBy('hash', 1)) ~> sinkValidEnrollmentsCSV\ninvalidEnrollRecords@invalidEnrollmentsRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tuserSourcedId as string,\n\t\tclassSourcedId as string,\n\t\trole as string\n\t),\n\tpartitionFileNames:['invalid_enrollment_records.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tuserSourcedId,\n\t\tclassSourcedId,\n\t\trole\n\t),\n\tpartitionBy('hash', 1)) ~> sinkInvalidEnrollmentsCSV\ninvalidAcademicSessionsRecords@validSectionRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\ttitle as string,\n\t\ttype as string,\n\t\tschoolYear as string,\n\t\tstartDate as string,\n\t\tendDate as string\n\t),\n\tpartitionFileNames:['academicSessions.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\ttitle,\n\t\ttype,\n\t\tschoolYear,\n\t\tstartDate,\n\t\tendDate\n\t),\n\tpartitionBy('hash', 1)) ~> sinkValidAcademicSessionsCSV\ninvalidAcademicSessionsRecords@invalidSectionRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\ttitle as string,\n\t\ttype as string,\n\t\tschoolYear as string,\n\t\tstartDate as string,\n\t\tendDate as string\n\t),\n\tpartitionFileNames:['invalid_academicSessions_records.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\ttitle,\n\t\ttype,\n\t\tschoolYear,\n\t\tstartDate,\n\t\tendDate\n\t),\n\tpartitionBy('hash', 1)) ~> sinkInvalidAcademicSessionsCSV\ninvalidRoleRecords@invalidRoleRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tuserSourcedId as string,\n\t\torgSourcedId as string,\n\t\trole as string,\n\t\tsessionSourcedId as string,\n\t\tgrade as string,\n\t\tisPrimary as string,\n\t\troleStartDate as string,\n\t\troleEndDate as string\n\t),\n\tpartitionFileNames:['invalid_role_records.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tuserSourcedId,\n\t\trole,\n\t\torgSourcedId,\n\t\tgrade\n\t),\n\tpartitionBy('hash', 1)) ~> sinkInvalidRoleCsv\ninvalidDemographicsRecords@invalidDemographicRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tuserSourcedId as string,\n\t\tsex as string,\n\t\tbirthDate as string,\n\t\tbirthCountry as string,\n\t\tbirthState as string,\n\t\tbirthCity as string,\n\t\tethnicityCodes as string,\n\t\traceCodes as string\n\t),\n\tpartitionFileNames:['invalid_demographics_records.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tuserSourcedId,\n\t\tsex,\n\t\tbirthDate,\n\t\tbirthCountry,\n\t\tbirthState,\n\t\tbirthCity,\n\t\tethnicityCodes,\n\t\traceCodes\n\t),\n\tpartitionBy('hash', 1)) ~> sinkInvalidDemographicsCsv\ninvalidDemographicsRecords@validDemographicRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tuserSourcedId as string,\n\t\tsex as string,\n\t\tbirthDate as string,\n\t\tbirthCountry as string,\n\t\tbirthState as string,\n\t\tbirthCity as string,\n\t\tethnicityCodes as string,\n\t\traceCodes as string\n\t),\n\tpartitionFileNames:['demographics.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tuserSourcedId,\n\t\tsex,\n\t\tbirthDate,\n\t\tbirthCountry,\n\t\tbirthState,\n\t\tbirthCity,\n\t\tethnicityCodes,\n\t\traceCodes\n\t),\n\tpartitionBy('hash', 1)) ~> sinkValidDemographicsCsv\ninvalidRelationshipRecords@validRelationshipRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tuserSourcedId as string,\n\t\trelationshipUserSourcedId as string,\n\t\trelationshipRole as string\n\t),\n\tpartitionFileNames:['relationships.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tuserSourcedId,\n\t\trelationshipUserSourcedId,\n\t\trelationshipRole\n\t),\n\tpartitionBy('hash', 1)) ~> sinkValidRelationshipRecords\ninvalidRelationshipRecords@invalidRelationshipRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tuserSourcedId as string,\n\t\trelationshipUserSourcedId as string,\n\t\trelationshipRole as string\n\t),\n\tpartitionFileNames:['invalid_relationships_records.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tuserSourcedId,\n\t\trelationshipUserSourcedId,\n\t\trelationshipRole\n\t),\n\tpartitionBy('hash', 1)) ~> sinkInvalidRelationshipRecords\ninValidClasses@invalidClassesRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\torgSourcedId as string,\n\t\ttitle as string,\n\t\tsessionSourcedIds as string,\n\t\tcourseSouredId as string\n\t),\n\tpartitionFileNames:['invalid_classes_records.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\torgSourcedId,\n\t\ttitle\n\t),\n\tpartitionBy('hash', 1)) ~> sinkInvalidClassesRecords\ninValidClasses@validClassesRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\torgSourcedId as string,\n\t\ttitle as string,\n\t\tsessionSourcedIds as string,\n\t\tcourseSouredId as string\n\t),\n\tpartitionFileNames:['classes.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\torgSourcedId,\n\t\ttitle,\n\t\tsessionSourcedIds = sessionSourcedId,\n\t\tcourseSouredId\n\t),\n\tpartitionBy('hash', 1)) ~> sinkValidClassesRecords"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDS_Org_csv')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Validation_Errors_csv')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Roles_csv')]",
                "[concat(variables('factoryId'), '/datasets/SDS_AcademicSessions_csv')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Enrollments_csv')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Courses_csv')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Demographics_csv')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Relationships_csv')]",
                "[concat(variables('factoryId'), '/datasets/SDS_classes_csv')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/validateSdsRequiredCsv')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "SDS_DataFlows"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Org_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sourceOrgsCsv"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Validation_Errors_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sourceInvalidUsersErrorLog"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Roles_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sourceRolesCsv"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SDS_Validation_Errors_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidationErrorsCsv"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Org_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidOrgCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Org_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidOrgsCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Roles_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkValidRoleCsv"
                        },
                        {
                            "dataset": {
                                "referenceName": "SDS_Roles_csv",
                                "type": "DatasetReference"
                            },
                            "name": "sinkInvalidRoleCsv"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "orgsValidations"
                        },
                        {
                            "name": "invalidOrgRecords"
                        },
                        {
                            "name": "orgErrors"
                        },
                        {
                            "name": "roleValidations"
                        },
                        {
                            "name": "invalidRoleRecords"
                        },
                        {
                            "name": "roleErrors"
                        },
                        {
                            "name": "Union"
                        },
                        {
                            "name": "addDateAndSchoolId"
                        }
                    ],
                    "script": "parameters{\n\tsdsStorageFolder as string\n}\nsource(output(\n\t\tsourcedId as string,\n\t\tname as string,\n\t\ttype as string,\n\t\tparentSourcedId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[(concat($sdsStorageFolder,'/orgs.csv'))]) ~> sourceOrgsCsv\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[(concat($sdsStorageFolder,'/validation.log'))]) ~> sourceInvalidUsersErrorLog\nsource(output(\n\t\tuserSourcedId as string,\n\t\torgSourcedId as string,\n\t\trole as string,\n\t\tsessionSourcedId as string,\n\t\tgrade as string,\n\t\tisPrimary as string,\n\t\troleStartDate as string,\n\t\troleEndDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[(concat($sdsStorageFolder,'/roles.csv'))]) ~> sourceRolesCsv\nsourceOrgsCsv derive(invalidSourcedId = isNull(sourcedId) || length(sourcedId) == 0,\n\t\tinvalidName = isNull(name) || length({name}) == 0) ~> orgsValidations\norgsValidations split(invalidSourcedId || invalidName,\n\tdisjoint: false) ~> invalidOrgRecords@(invalidOrgRecords, validOrgRecords)\ninvalidOrgRecords@invalidOrgRecords derive(type = \"org\",\n\t\terrors = concat(iif(invalidSourcedId, 'Invalid SourcedId; ', ''),iif(invalidName, 'Invalid Name; ', '')),\n\t\tSourcedId = sourcedId) ~> orgErrors\nsourceRolesCsv derive(invalidUserSourcedId = isNull(userSourcedId) || length(userSourcedId) == 0,\n\t\tinvalidOrgSourcedId = isNull(orgSourcedId) || length(orgSourcedId) == 0) ~> roleValidations\nroleValidations split(invalidUserSourcedId || invalidOrgSourcedId,\n\tdisjoint: false) ~> invalidRoleRecords@(invalidRoleRecords, validRoleRecords)\ninvalidRoleRecords@invalidRoleRecords derive(SourcedId = userSourcedId,\n\t\ttype = \"role\",\n\t\terrors = concat( iif(invalidUserSourcedId, 'Invalid User SourcedId; ', ''),     iif(invalidOrgSourcedId, 'Invalid Org SourcedId; ', ''))) ~> roleErrors\norgErrors, sourceInvalidUsersErrorLog, roleErrors union(byName: true)~> Union\nUnion derive(date = currentUTC()) ~> addDateAndSchoolId\naddDateAndSchoolId sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['validation.log'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tdate,\n\t\ttype,\n\t\tsourcedId = Union@SourcedId,\n\t\terrors\n\t),\n\tpartitionBy('hash', 1)) ~> sinkValidationErrorsCsv\ninvalidOrgRecords@invalidOrgRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\tname as string,\n\t\ttype as string,\n\t\tparentSourcedId as string\n\t),\n\tpartitionFileNames:['invalid_orgs_records.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\tname,\n\t\ttype\n\t),\n\tpartitionBy('hash', 1)) ~> sinkInvalidOrgCSV\ninvalidOrgRecords@validOrgRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsourcedId as string,\n\t\tname as string,\n\t\ttype as string,\n\t\tparentSourcedId as string\n\t),\n\tpartitionFileNames:['orgs.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tsourcedId,\n\t\tname,\n\t\ttype\n\t),\n\tpartitionBy('hash', 1)) ~> sinkValidOrgsCSV\ninvalidRoleRecords@validRoleRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tuserSourcedId as string,\n\t\torgSourcedId as string,\n\t\trole as string,\n\t\tsessionSourcedId as string,\n\t\tgrade as string,\n\t\tisPrimary as string,\n\t\troleStartDate as string,\n\t\troleEndDate as string\n\t),\n\tpartitionFileNames:['roles.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tuserSourcedId,\n\t\trole,\n\t\torgSourcedId,\n\t\tgrade\n\t),\n\tpartitionBy('hash', 1)) ~> sinkValidRoleCsv\ninvalidRoleRecords@invalidRoleRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tuserSourcedId as string,\n\t\torgSourcedId as string,\n\t\trole as string,\n\t\tsessionSourcedId as string,\n\t\tgrade as string,\n\t\tisPrimary as string,\n\t\troleStartDate as string,\n\t\troleEndDate as string\n\t),\n\tpartitionFileNames:['invalid_role_records.csv'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tuserSourcedId,\n\t\trole,\n\t\torgSourcedId,\n\t\tgrade\n\t),\n\tpartitionBy('hash', 1)) ~> sinkInvalidRoleCsv"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDS_Org_csv')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Validation_Errors_csv')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Roles_csv')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/ForEach_OR_Endpoints')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "ForEach_OR_Endpoint",
                        "type": "ForEach",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.oneRosterEndPointsArray",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Get_OR_API_Data",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Get_OneRoster_API_Data",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "oneRosterEndPoint": {
                                                "value": "@item()",
                                                "type": "Expression"
                                            },
                                            "sdsStorageContainer": {
                                                "value": "@pipeline().parameters.sdsStorageContainer",
                                                "type": "Expression"
                                            },
                                            "sdsStorageFolder": {
                                                "value": "@pipeline().parameters.sdsStorageFolder",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "oneRosterEndPointsArray": {
                        "type": "array"
                    },
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "OR_to_SDS/Sub Pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2024-04-04T09:20:29Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Get_OneRoster_API_Data')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/Master_OR_to_SDS')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get_OR_Data",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ForEach_OR_Endpoints",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "oneRosterEndPointsArray": {
                                    "value": "@pipeline().parameters.oneRosterEndPointsArray",
                                    "type": "Expression"
                                },
                                "sdsStorageContainer": {
                                    "value": "@pipeline().parameters.sdsStorageContainer",
                                    "type": "Expression"
                                },
                                "sdsStorageFolder": {
                                    "value": "@{pipeline().parameters.sdsStorageFolder}/incoming",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "OR_Json_Transform_To_SDS",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Get_OR_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Transform_to_SDS_csv",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sdsStorageFolder": {
                                    "value": "@pipeline().parameters.sdsStorageFolder",
                                    "type": "Expression"
                                },
                                "sdsStorageContainer": {
                                    "value": "@pipeline().parameters.sdsStorageContainer",
                                    "type": "Expression"
                                },
                                "optionalFilesRequried": {
                                    "value": "@pipeline().parameters.optionalFilesRequired",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Validate_and_Upload_SDS",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "OR_Json_Transform_To_SDS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Validate_and_Upload",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "sdsStorageContainer": {
                                    "value": "@pipeline().parameters.sdsStorageContainer",
                                    "type": "Expression"
                                },
                                "sdsStorageFolder": {
                                    "value": "@{pipeline().parameters.sdsStorageFolder}/outgoing",
                                    "type": "Expression"
                                },
                                "optionalFilesRequried": {
                                    "value": "@pipeline().parameters.optionalFilesRequired",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "oneRosterEndPointsArray": {
                        "type": "array",
                        "defaultValue": [
                            "orgs",
                            "users",
                            "courses",
                            "classes",
                            "classGroups",
                            "enrollments",
                            "demographics",
                            "academicSessions"
                        ]
                    },
                    "sdsStorageContainer": {
                        "type": "string",
                        "defaultValue": "sds"
                    },
                    "sdsStorageFolder": {
                        "type": "string",
                        "defaultValue": "data"
                    },
                    "optionalFilesRequired": {
                        "type": "bool",
                        "defaultValue": true
                    }
                },
                "folder": {
                    "name": "OR_to_SDS"
                },
                "annotations": [],
                "lastPublishTime": "2024-04-10T07:53:15Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ForEach_OR_Endpoints')]",
                "[concat(variables('factoryId'), '/pipelines/Transform_to_SDS_csv')]",
                "[concat(variables('factoryId'), '/pipelines/Validate_and_Upload')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/Send_email_reports')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetBearerToken",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GetClientSecretForSdsApi",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "https://login.microsoftonline.com/@{pipeline().globalParameters.tenantid}/oauth2/v2.0/token",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "body": {
                                "value": "grant_type=client_credentials&client_id=@{pipeline().globalParameters.entraAppClientId}&client_secret=@{activity('GetClientSecretForSdsApi').output.value}&scope=https://graph.microsoft.com/.default",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "GetClientSecretForSdsApi",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@{pipeline().globalParameters.ClientSecretForSdsApiKeyVaultUrl}?api-version=7.0",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "If Condition1",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "GetBearerToken",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@pipeline().parameters.optionalFilesRequired",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "sendMail_copy1",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Set body1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            },
                                            "Content-Type": "application/json"
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/v1.0/users/@{pipeline().globalParameters.userPrincipalName}/sendMail",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "body": {
                                            "value": "{\"message\":{\"subject\":\"@{pipeline().parameters.subject}\",\"body\":{\"contentType\":\"Text\",\"content\":\"@{variables('body1')}\"},\"toRecipients\":@{pipeline().globalParameters.reportRecipientEmails}}}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set body1",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "body1",
                                        "value": {
                                            "value": "@{pipeline().parameters.bodyHeader}\\n\\n\nRecord counts for sent files:\\n\norgs.csv - @{pipeline().parameters.requiredFilesRecordsCountArray[0]}\\n\nusers.csv - @{pipeline().parameters.requiredFilesRecordsCountArray[1]}\\n\nroles.csv - @{pipeline().parameters.requiredFilesRecordsCountArray[2]}\\n\\n\nValidation error count: @{pipeline().parameters.check_validation_errors}\\n\\n\nSee ADF run log for additional details.\\n\\n\n[Note that the record counts in this message have a max value of 5000 (or 4999 plus the header record), so treat a count of 5000 (or 4999) to signify a record count that is some value greater than 5000.]",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Set Body",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "body",
                                        "value": {
                                            "value": "@{pipeline().parameters.bodyHeader}\\n\\n\nRecord counts for sent files:\\n\norgs.csv - @{pipeline().parameters.allFilesRecordCountArray[0]}\\n\nusers.csv - @{pipeline().parameters.allFilesRecordCountArray[1]}\\n\nroles.csv - @{pipeline().parameters.allFilesRecordCountArray[2]}\\n\nclasses.csv - @{pipeline().parameters.allFilesRecordCountArray[3]}\\n\ncourses.csv - @{pipeline().parameters.allFilesRecordCountArray[4]}\\n\nenrollments.csv - @{pipeline().parameters.allFilesRecordCountArray[5]}\\n\\n\ndemographics.csv - @{pipeline().parameters.allFilesRecordCountArray[6]}\\n\\n\nrelationships.csv - @{pipeline().parameters.allFilesRecordCountArray[7]}\\n\\n\nacademicSessions.csv - @{pipeline().parameters.allFilesRecordCountArray[8]}\\n\\n\nValidation error count: @{pipeline().parameters.check_validation_errors}\\n\\n\nSee ADF run log for additional details.\\n\\n\n[Note that the record counts in this message have a max value of 5000 (or 4999 plus the header record), so treat a count of 5000 (or 4999) to signify a record count that is some value greater than 5000.]",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "sendMail",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Body",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            },
                                            "Content-Type": "application/json"
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/v1.0/users/@{pipeline().globalParameters.userPrincipalName}/sendMail",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "body": {
                                            "value": "{\"message\":{\"subject\":\"@{pipeline().parameters.subject}\",\"body\":{\"contentType\":\"Text\",\"content\":\"@{variables('body')}\"},\"toRecipients\":@{pipeline().globalParameters.reportRecipientEmails}}}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "subject": {
                        "type": "string"
                    },
                    "allFilesRecordCountArray": {
                        "type": "array"
                    },
                    "requiredFilesRecordsCountArray": {
                        "type": "array"
                    },
                    "optionalFilesRequired": {
                        "type": "bool"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "check_validation_errors": {
                        "type": "string"
                    },
                    "bodyHeader": {
                        "type": "string"
                    }
                },
                "variables": {
                    "body": {
                        "type": "String"
                    },
                    "body1": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "OR_to_SDS/Sub Pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-22T09:23:37Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRSDSOR')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/Upload_to_SDS')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetBearerToken",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GetClientSecretForSdsApi",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "https://login.microsoftonline.com/@{pipeline().globalParameters.tenantid}/oauth2/v2.0/token",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "body": {
                                "value": "grant_type=client_credentials&client_id=@{pipeline().globalParameters.entraAppClientId}&client_secret=@{activity('GetClientSecretForSdsApi').output.value}&scope=https://graph.microsoft.com/.default",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "setSASUrlParts",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "setUploadSessionSASToken",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "SASUrlParts",
                            "value": {
                                "value": "@split(activity('GetUploadUrl').output.sessionUrl,'?')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "uploadCsvFilesToSDS",
                        "description": "Copies the sds formatted csv files into the SDS blob storage container.\n",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "setSASUrlParts",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@pipeline().parameters.directory",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*.csv",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".csv"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SDS_Files",
                                "type": "DatasetReference",
                                "parameters": {
                                    "directory": "na"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "SDS_storage",
                                "type": "DatasetReference",
                                "parameters": {
                                    "sasUriParam": {
                                        "value": "@{variables('SASUrlParts')[0]}?@{variables('SASUrlParts')[1]}",
                                        "type": "Expression"
                                    },
                                    "dataConnectorId": {
                                        "value": "@variables('dataConnectorId')",
                                        "type": "Expression"
                                    },
                                    "tenantId": {
                                        "value": "@pipeline().globalParameters.tenantid",
                                        "type": "Expression"
                                    },
                                    "containerId": {
                                        "value": "@variables('containerId')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "VerifyUploadAndStartSync",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "uploadCsvFilesToSDS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Authorization": {
                                    "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                    "type": "Expression"
                                }
                            },
                            "turnOffAsync": true,
                            "url": {
                                "value": "https://graph.microsoft.com/beta/external/industryData/dataConnectors/@{activity('GetDataConnector').output.dataConnector.id}/validate()",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "body": {}
                        }
                    },
                    {
                        "name": "GetClientSecretForSdsApi",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@{pipeline().globalParameters.ClientSecretForSdsApiKeyVaultUrl}?api-version=7.0",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "GetUploadUrl",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "UntilInboundFlowReady",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {
                                "Authorization": {
                                    "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                    "type": "Expression"
                                }
                            },
                            "url": {
                                "value": "https://graph.microsoft.com/beta/external/industryData/dataConnectors/@{variables('dataConnectorId')}/microsoft.graph.industryData.azureDataLakeConnector/microsoft.graph.industryData.getUploadSession()",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            }
                        }
                    },
                    {
                        "name": "setUploadHost",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "GetUploadUrl",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "uploadHost",
                            "value": {
                                "value": "@split(activity('GetUploadUrl').output.sessionUrl,'/')[2]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "setContainerId",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "setUploadHost",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "containerId",
                            "value": {
                                "value": "@activity('GetUploadUrl').output.containerId",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "setUploadSessionSASToken",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "setContainerId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "uploadSessionSASToken",
                            "value": {
                                "value": "@split(activity('GetUploadUrl').output.sessionUrl,'?')[1]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "UntilValidationStop",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "VerifyUploadAndStartSync",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('CheckValidationResult').output.status,'succeeded')",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "CheckValidationResult",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            }
                                        },
                                        "turnOffAsync": false,
                                        "url": {
                                            "value": "@activity('VerifyUploadAndStartSync').output.ADFWebActivityResponseHeaders.location",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        }
                                    }
                                }
                            ],
                            "timeout": "0.00:03:00"
                        }
                    },
                    {
                        "name": "GetInboundFlows",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GetBearerToken",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {
                                "Authorization": {
                                    "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                    "type": "Expression"
                                }
                            },
                            "url": {
                                "value": "https://graph.microsoft.com/beta/external/industryData/inboundFlows",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            }
                        }
                    },
                    {
                        "name": "NewOrExistingSystem",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "GetInboundFlows",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@empty(activity('GetInboundFlows').output.value)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "GetDataConnector",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            }
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/beta/external/industryData/inboundFlows/@{pipeline().globalParameters.sdsInboundFlowId}?$expand=dataConnector",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        }
                                    }
                                },
                                {
                                    "name": "setDataConnectorId",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "GetDataConnector",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "dataConnectorId",
                                        "value": {
                                            "value": "@{activity('GetDataConnector').output.dataConnector.id}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SetInboundFlowId",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "setDataConnectorId",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "inboundFlowId",
                                        "value": {
                                            "value": "@{if(contains(activity('GetInboundFlows').output.value,pipeline().globalParameters.sdsInboundFlowId),pipeline().globalParameters.sdsInboundFlowId,activity('GetInboundFlows').output.value[0].id)}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "CreateSourceSystem",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            },
                                            "Content-Type": "application/json"
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/beta/external/industryData/sourceSystems",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "body": {
                                            "value": "{\n  \"displayName\": \"ADF CSV2.1 Source\",\n  \"vendor\": \"Microsoft\",\n  \"userMatchingSettings\": [\n    {\n      \"sourceIdentifier\": {\n        \"code\": \"@{pipeline().globalParameters.staffSourceIdentifier}\"\n      },\n      @{if(contains(pipeline().globalParameters.staffDomainAddon,'.'), concat('\"domainName\":', '\"',pipeline().globalParameters.staffDomainAddon, '\",'), null)}\n      \"matchTarget\": {\n        \"code\": \"@{pipeline().globalParameters.staffMatchTarget}\"\n      },\n      \"roleGroup@odata.bind\": \"https://graph.microsoft.com/beta/external/industryData/roleGroups/staff\",\n      \"priorityOrder\": 0\n    },\n    {\n      \"sourceIdentifier\": {\n        \"code\": \"@{pipeline().globalParameters.studentSourceIdentifier}\"\n      },\n      @{if(contains(pipeline().globalParameters.studentDomainAddon, '.'), concat('\"domainName\":', '\"', pipeline().globalParameters.studentDomainAddon, '\",'), null)}\n      \"matchTarget\": {\n        \"code\": \"@{pipeline().globalParameters.studentMatchTarget}\"\n      },\n      \"roleGroup@odata.bind\": \"https://graph.microsoft.com/beta/external/industryData/roleGroups/students\",\n      \"priorityOrder\": 1\n    }\n  ]\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "CreateDataConnector",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "CreateSourceSystem",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            },
                                            "Content-Type": "application/json"
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/beta/external/industryData/dataConnectors",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "body": {
                                            "value": "{\n  \"displayName\": \"ADF CSV2.1 Connector\",\n  \"sourceSystem@odata.bind\": \"https://graph.microsoft.com/beta/external/industryData/sourceSystems/@{activity('CreateSourceSystem').output.id}\",\n  \"@odata.type\": \"#microsoft.graph.industryData.azureDataLakeConnector\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "CreateYearTimePeriodDefinition",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "CreateDataConnector",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            },
                                            "Content-Type": "application/json"
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/beta/external/industryData/years",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "body": {
                                            "value": "{\n  \"displayName\": \"ADF CSV2.1 Year\",\n  \"year\": {\n    \"code\": \"@{split(pipeline().globalParameters.yearStartDate, '-')[0]}\"\n  },\n  \"startDate\": \"@{pipeline().globalParameters.yearStartDate}\",\n  \"endDate\": \"@{pipeline().globalParameters.yearEndDate}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "CreateInboundFlow",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "CreateYearTimePeriodDefinition",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            },
                                            "Content-Type": "application/json"
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/beta/external/industryData/inboundFlows",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "body": {
                                            "value": "{\n  \"@odata.type\": \"#microsoft.graph.industryData.inboundFileFlow\",\n  \"dataConnector@odata.bind\": \"https://graph.microsoft.com/beta/external/industryData/dataConnectors/@{activity('CreateDataConnector').output.id}\",\n  \"dataDomain\": \"educationRostering\",\n  \"displayName\": \"ADF CSV2.1 Inbound Flow\",\n  \"effectiveDateTime\": \"@{utcNow()}\",\n  \"expirationDateTime\": \"@{concat(pipeline().globalParameters.expirationDateTime, 'T05:00:00Z')}\",\n  \"year@odata.bind\": \"https://graph.microsoft.com/beta/external/industryData/years/@{activity('CreateYearTimePeriodDefinition').output.id}\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SetNewDataConnectorId",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "CreateInboundFlow",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "dataConnectorId",
                                        "value": {
                                            "value": "@activity('CreateDataConnector').output.id",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SetNewInboundFlowId",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SetNewDataConnectorId",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "inboundFlowId",
                                        "value": {
                                            "value": "@activity('CreateInboundFlow').output.id",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "UntilInboundFlowReady",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "NewOrExistingSystem",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('CheckInboundFlow').output.readinessStatus,'ready')",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "CheckInboundFlow",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": true
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                "type": "Expression"
                                            }
                                        },
                                        "url": {
                                            "value": "https://graph.microsoft.com/beta/external/industryData/inboundFlows/@{variables('inboundFlowId')}",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        }
                                    }
                                }
                            ],
                            "timeout": "0.12:00:00"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "directory": {
                        "type": "string"
                    }
                },
                "variables": {
                    "SASUrlParts": {
                        "type": "Array",
                        "defaultValue": []
                    },
                    "containerId": {
                        "type": "String"
                    },
                    "uploadHost": {
                        "type": "String"
                    },
                    "uploadSessionSASToken": {
                        "type": "String"
                    },
                    "dataConnectorId": {
                        "type": "String"
                    },
                    "fileName": {
                        "type": "String"
                    },
                    "test": {
                        "type": "String"
                    },
                    "inboundFlowId": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "OR_to_SDS/Sub Pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-22T09:23:37Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRSDSOR')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Files')]",
                "[concat(variables('factoryId'), '/datasets/SDS_storage')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/Get_OneRoster_API_Data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetBearerToken",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GetORClientSecret",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "url": {
                                "value": "@pipeline().globalParameters.oneRosterOAuthTokenUrl",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "body": {
                                "value": "grant_type=client_credentials&client_id=@{pipeline().globalParameters.oneRosterClientId}&client_secret=@{activity('GetORClientSecret').output.value}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "GetOREndPointTotalCount",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GetBearerToken",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {
                                "Authorization": {
                                    "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                    "type": "Expression"
                                }
                            },
                            "url": {
                                "value": "@{pipeline().globalParameters.oneRosterBaseURL}/@{pipeline().parameters.oneRosterEndPoint}",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            }
                        }
                    },
                    {
                        "name": "SetTotalRecordsCount",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "GetOREndPointTotalCount",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "recordsCount",
                            "value": {
                                "value": "@activity('GetOREndPointTotalCount').output.ADFWebActivityResponseHeaders['x-total-count']",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Until",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "SetTotalRecordsCount",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greaterOrEquals(int(variables('offset')), int(variables('recordsCount')))",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "GetData",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Set TempOffset",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": true,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "OR_API_New_source",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "endPoint": {
                                                    "value": "@pipeline().parameters.oneRosterEndPoint",
                                                    "type": "Expression"
                                                },
                                                "offset": {
                                                    "value": "@variables('offset')",
                                                    "type": "Expression"
                                                },
                                                "limit": {
                                                    "value": "@pipeline().globalParameters.limit",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "OR_API_New_json_sink",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "filename": {
                                                    "value": "@concat('data_', variables('offset'), '.json')",
                                                    "type": "Expression"
                                                },
                                                "sdsStorageContainer": {
                                                    "value": "@pipeline().parameters.sdsStorageContainer",
                                                    "type": "Expression"
                                                },
                                                "sdsStorageFolder": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}\\@{pipeline().parameters.oneRosterEndPoint}",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Set Offset",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "GetData",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "offset",
                                        "value": {
                                            "value": "@string(add(int(variables('tempOffset')),int(pipeline().globalParameters.limit)))",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set TempOffset",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "tempOffset",
                                        "value": {
                                            "value": "@variables('offset')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "timeout": "7.00:00:00"
                        }
                    },
                    {
                        "name": "GetORClientSecret",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "GET",
                            "headers": {},
                            "url": {
                                "value": "@{pipeline().globalParameters.oneRosterClientSecretKeyVaultUrl}?api-version=7.0",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "oneRosterEndPoint": {
                        "type": "string"
                    },
                    "sdsStorageContainer": {
                        "type": "string",
                        "defaultValue": "sds"
                    },
                    "sdsStorageFolder": {
                        "type": "string",
                        "defaultValue": "data"
                    }
                },
                "variables": {
                    "recordsCount": {
                        "type": "String"
                    },
                    "tempOffset": {
                        "type": "String",
                        "defaultValue": "0"
                    },
                    "offset": {
                        "type": "String",
                        "defaultValue": "0"
                    }
                },
                "folder": {
                    "name": "OR_to_SDS/Sub Pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-31T14:50:06Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/IRSDSOR')]",
                "[concat(variables('factoryId'), '/datasets/OR_API_New_source')]",
                "[concat(variables('factoryId'), '/datasets/OR_API_New_json_sink')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/Validate_and_Upload')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "check_validation_errors",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "If Condition For All Fields or Required Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "validation.log",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "SDS_Files",
                                "type": "DatasetReference",
                                "parameters": {
                                    "directory": "na"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "upload_if_validation_succeeds",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "check_validation_errors",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(\nless(sub(int(activity('check_validation_errors').output.count),1), pipeline().globalParameters.validationErrorThreshold),\nor(not(pipeline().globalParameters.checkForEmptyFilesBeforeSending), if(empty(variables('requiredFilesRecordsCountArray')),not(contains(variables('allFilesRecordCountArray'),0)),not(contains(variables('requiredFilesRecordsCountArray'),0)))\n))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Send_validation_errors_email_report",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Send_email_reports",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "subject": {
                                                "value": "ADF: SDS upload validation failed for @{pipeline().parameters.sdsStorageFolder}/valid",
                                                "type": "Expression"
                                            },
                                            "allFilesRecordCountArray": {
                                                "value": "@variables('allFilesRecordCountArray')",
                                                "type": "Expression"
                                            },
                                            "requiredFilesRecordsCountArray": {
                                                "value": "@variables('requiredFilesRecordsCountArray')",
                                                "type": "Expression"
                                            },
                                            "optionalFilesRequired": {
                                                "value": "@pipeline().parameters.optionalFilesRequried",
                                                "type": "Expression"
                                            },
                                            "sdsStorageFolder": {
                                                "value": "@pipeline().parameters.sdsStorageFolder",
                                                "type": "Expression"
                                            },
                                            "check_validation_errors": {
                                                "value": "@activity('check_validation_errors').output.count",
                                                "type": "Expression"
                                            },
                                            "bodyHeader": {
                                                "value": "ADF: failed SDS upload for @{pipeline().parameters.sdsStorageFolder}/valid \\n\nSee ADF run logs for more details.\\n",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Upload_to_SDS",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Upload_to_SDS",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "directory": {
                                                "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Send_email_report",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Upload_to_SDS",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Send_email_reports",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "subject": {
                                                "value": "ADF: successful SDS upload for @{pipeline().parameters.sdsStorageFolder}/valid",
                                                "type": "Expression"
                                            },
                                            "allFilesRecordCountArray": {
                                                "value": "@variables('allFilesRecordCountArray')",
                                                "type": "Expression"
                                            },
                                            "requiredFilesRecordsCountArray": {
                                                "value": "@variables('requiredFilesRecordsCountArray')",
                                                "type": "Expression"
                                            },
                                            "optionalFilesRequired": {
                                                "value": "@pipeline().parameters.optionalFilesRequried",
                                                "type": "Expression"
                                            },
                                            "sdsStorageFolder": {
                                                "value": "@pipeline().parameters.sdsStorageFolder",
                                                "type": "Expression"
                                            },
                                            "check_validation_errors": {
                                                "value": "@activity('check_validation_errors').output.count",
                                                "type": "Expression"
                                            },
                                            "bodyHeader": {
                                                "value": "ADF upload to SDS for @{pipeline().parameters.sdsStorageFolder}/valid sent successfully.\\n\nCheck sds.microsoft.com for updates on the status of the sync.",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Send_email_report1",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Upload_to_SDS",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Send_email_reports",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "subject": {
                                                "value": "ADF: failed SDS upload for @{pipeline().parameters.sdsStorageFolder}/valid",
                                                "type": "Expression"
                                            },
                                            "allFilesRecordCountArray": {
                                                "value": "@variables('allFilesRecordCountArray')",
                                                "type": "Expression"
                                            },
                                            "requiredFilesRecordsCountArray": {
                                                "value": "@variables('requiredFilesRecordsCountArray')",
                                                "type": "Expression"
                                            },
                                            "optionalFilesRequired": {
                                                "value": "@pipeline().parameters.optionalFilesRequried",
                                                "type": "Expression"
                                            },
                                            "sdsStorageFolder": {
                                                "value": "@pipeline().parameters.sdsStorageFolder",
                                                "type": "Expression"
                                            },
                                            "check_validation_errors": {
                                                "value": "@activity('check_validation_errors').output.count",
                                                "type": "Expression"
                                            },
                                            "bodyHeader": {
                                                "value": "ADF: failed SDS upload for @{pipeline().parameters.sdsStorageFolder}/valid \\n\nSee ADF run logs for more details.\\n",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "checkUsers",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().globalParameters.useFamilyAndGivenNames,true )",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "validateOldUsersCsv",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "validateOldUsersCsv",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "sdsStorageFolder": {
                                                    "value": "'@{pipeline().parameters.sdsStorageFolder}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "sourceUsersCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkinvalidUserRecordsCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidUserCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkUserInvalidErrorLog": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "integrationRuntime": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "validateNewUsersCsv",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "validateNewUsersCsv",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "sdsStorageFolder": {
                                                    "value": "'@{pipeline().parameters.sdsStorageFolder}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "sourceUsersCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkinvalidUserRecordsCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidUserCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidUsersErrorLog": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "integrationRuntime": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "If Condition For All Fields or Required Files",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "checkUsers",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@pipeline().parameters.optionalFilesRequried",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Validate_Required_SDS_CSV",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "validateSdsRequiredCsv",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "sdsStorageFolder": {
                                                    "value": "'@{pipeline().parameters.sdsStorageFolder}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "sourceOrgsCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sourceInvalidUsersErrorLog": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sourceRolesCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidationErrorsCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidOrgCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidOrgsCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidRoleCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidRoleCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "integrationRuntime": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                },
                                {
                                    "name": "check_orgs_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Validate_Required_SDS_CSV",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "orgs.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_users_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Validate_Required_SDS_CSV",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "users.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_roles_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Validate_Required_SDS_CSV",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "roles.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "set_requried_files_record_count_array",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "check_orgs_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_roles_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_users_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "requiredFilesRecordsCountArray",
                                        "value": {
                                            "value": "@createArray(\nsub(activity('check_orgs_csv').output.count,1),\nsub(activity('check_users_csv').output.count,1),\nsub(activity('check_roles_csv').output.count,1)\n)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "validate_SDS_All_CSVs",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "1.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "validateSdsAllCsv",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "sdsStorageFolder": {
                                                    "value": "'@{pipeline().parameters.sdsStorageFolder}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "sourceOrgsCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sourceInvalidUsersErrorLog": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sourceRolesCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sourceAcademicSessionsCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sourceEnrollmentCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sourceCoursesCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sourceDemographicsCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sourceRelationshipsCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sourceClassSouece": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidationErrorsCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@pipeline().parameters.sdsStorageFolder",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidOrgCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidOrgsCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidRoleCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidCoursesCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidCoursesCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidEnrollmentsCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidEnrollmentsCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidAcademicSessionsCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidAcademicSessionsCSV": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidRoleCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidDemographicsCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidDemographicsCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidRelationshipRecords": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidRelationshipRecords": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkInvalidClassesRecords": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/invalid",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkValidClassesRecords": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "integrationRuntime": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                },
                                {
                                    "name": "check_org_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "validate_SDS_All_CSVs",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "orgs.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_user_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "validate_SDS_All_CSVs",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "users.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_role_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "validate_SDS_All_CSVs",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "roles.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_relationships_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "validate_SDS_All_CSVs",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "relationships.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_academicSessions_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "validate_SDS_All_CSVs",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "academicSessions.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_courses_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "validate_SDS_All_CSVs",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "courses.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_enrollments_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "validate_SDS_All_CSVs",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "enrollments.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_demographics_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "validate_SDS_All_CSVs",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "demographics.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "check_classes_csv",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "validate_SDS_All_CSVs",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFolderPath": {
                                                    "value": "@{pipeline().parameters.sdsStorageFolder}/valid",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "classes.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "SDS_Files",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": "na"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "set_all_files_records_count_array",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "check_org_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_user_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_role_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_relationships_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_academicSessions_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_courses_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_enrollments_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_demographics_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "check_classes_csv",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "allFilesRecordCountArray",
                                        "value": {
                                            "value": "@createArray(\n    sub(activity('check_org_csv').output.count,1),\n    sub(activity('check_user_csv').output.count,1),\n    sub(activity('check_role_csv').output.count,1),\n    sub(activity('check_classes_csv').output.count,1),\n    sub(activity('check_courses_csv').output.count,1),\n    sub(activity('check_enrollments_csv').output.count,1),\n    sub(activity('check_demographics_csv').output.count,1),\n    sub(activity('check_relationships_csv').output.count,1),\n    sub(activity('check_academicSessions_csv').output.count,1)\n)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "optionalFilesRequried": {
                        "type": "bool"
                    }
                },
                "variables": {
                    "SASUrlParts": {
                        "type": "Array",
                        "defaultValue": []
                    },
                    "allFilesRecordCountArray": {
                        "type": "Array",
                        "defaultValue": []
                    },
                    "requiredFilesRecordsCountArray": {
                        "type": "Array",
                        "defaultValue": []
                    }
                },
                "folder": {
                    "name": "OR_to_SDS/Sub Pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-22T09:23:38Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SDS_Files')]",
                "[concat(variables('factoryId'), '/pipelines/Send_email_reports')]",
                "[concat(variables('factoryId'), '/pipelines/Upload_to_SDS')]",
                "[concat(variables('factoryId'), '/dataflows/validateOldUsersCsv')]",
                "[concat(variables('factoryId'), '/integrationRuntimes/IRSDSOR')]",
                "[concat(variables('factoryId'), '/dataflows/validateNewUsersCsv')]",
                "[concat(variables('factoryId'), '/dataflows/validateSdsRequiredCsv')]",
                "[concat(variables('factoryId'), '/dataflows/validateSdsAllCsv')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/Transform_to_SDS_csv')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "createOrgscsv",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "DeletePreviousExecutionFIles",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "1.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "createOrgsCsv",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "sourceOrgsJson": {
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        },
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/incoming/orgs",
                                            "type": "Expression"
                                        }
                                    },
                                    "sinkSdsSchoolCsv": {
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        },
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/outgoing",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "integrationRuntime": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "createRolescsv",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "If Condition to Check for New Users",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "createRolesCsv",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "sourceUsersJson": {
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        },
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/incoming/users",
                                            "type": "Expression"
                                        }
                                    },
                                    "sinkSdsRolesCsv": {
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        },
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/outgoing",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "integrationRuntime": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "If Condition to Check for New Users",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "createOrgscsv",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().globalParameters.useFamilyAndGivenNames,true )",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "createOldUserscsv",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "createOldUsersCsv",
                                            "type": "DataFlowReference",
                                            "parameters": {},
                                            "datasetParameters": {
                                                "sourceUsersJson": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/incoming/users",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkSdsUsersCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/outgoing",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "integrationRuntime": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "createUserscsv",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "createUsersCsv",
                                            "type": "DataFlowReference",
                                            "parameters": {},
                                            "datasetParameters": {
                                                "sourceUsersJson": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/incoming/users",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "sinkSdsUsersCsv": {
                                                    "sdsStorageContainer": {
                                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                                        "type": "Expression"
                                                    },
                                                    "sdsStorageFolder": {
                                                        "value": "@{pipeline().parameters.sdsStorageFolder}/outgoing",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "integrationRuntime": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "OptionalFilesRquired",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "createRolescsv",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@pipeline().parameters.optionalFilesRequried",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Transfrom_SDS_OptionalFiles",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Transform_to_Optionals_SDS_csv",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "sdsStorageFolder": {
                                                "value": "@pipeline().parameters.sdsStorageFolder",
                                                "type": "Expression"
                                            },
                                            "sdsStorageContainer": {
                                                "value": "@pipeline().parameters.sdsStorageContainer",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "DeletePreviousExecutionFIles",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "SDS_Files",
                                "type": "DatasetReference",
                                "parameters": {
                                    "directory": {
                                        "value": "@{pipeline().parameters.sdsStorageFolder}/outgoing",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "sdsStorageContainer": {
                        "type": "string"
                    },
                    "optionalFilesRequried": {
                        "type": "bool"
                    }
                },
                "variables": {
                    "RefId": {
                        "type": "Array"
                    }
                },
                "folder": {
                    "name": "OR_to_SDS/Sub Pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-22T09:23:38Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/createOrgsCsv')]",
                "[concat(variables('factoryId'), '/integrationRuntimes/IRSDSOR')]",
                "[concat(variables('factoryId'), '/dataflows/createRolesCsv')]",
                "[concat(variables('factoryId'), '/datasets/SDS_Files')]",
                "[concat(variables('factoryId'), '/dataflows/createOldUsersCsv')]",
                "[concat(variables('factoryId'), '/dataflows/createUsersCsv')]",
                "[concat(variables('factoryId'), '/pipelines/Transform_to_Optionals_SDS_csv')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/Transform_to_Optionals_SDS_csv')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "createCoursescsv",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "ForEachRedcodes",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "createCoursesCsv",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "refCodes": {
                                        "value": "@variables('RefId')",
                                        "type": "Expression"
                                    }
                                },
                                "datasetParameters": {
                                    "sourceCourses": {
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/incoming/courses",
                                            "type": "Expression"
                                        },
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        }
                                    },
                                    "sinkSdsCoursesCsv": {
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        },
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/outgoing",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "integrationRuntime": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "createEnrollmentsCsv",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "createClassesCSV",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "createEnrollmentsCsv",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "sourceEnrollmentsJson": {
                                        "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/incoming/enrollments",
                                        "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer"
                                    },
                                    "sourceClassGroups": {
                                        "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/incoming/classGroups",
                                        "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer"
                                    },
                                    "sinkSdsEnrollmentsCsv": {
                                        "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                        "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/outgoing"
                                    }
                                }
                            },
                            "staging": {},
                            "integrationRuntime": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "createRelationshipsCsv",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "createEnrollmentsCsv",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "createRelationshipsCsv",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "sourceUsersJson": {
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        },
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/incoming/users",
                                            "type": "Expression"
                                        }
                                    },
                                    "sinkSdsRelationshipsCsv": {
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        },
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/outgoing",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "integrationRuntime": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "createAcademicSessionscsv",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "createAcademicSessionsCsv",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "sourceAcademicSessions": {
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        },
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/incoming/academicSessions",
                                            "type": "Expression"
                                        }
                                    },
                                    "sinkSDSAcademicSessions": {
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        },
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/outgoing",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "integrationRuntime": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "LookupDemographicsExist",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "createRelationshipsCsv",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFileName": "*.json",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "JsonReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "OR_demographics_json",
                                "type": "DatasetReference",
                                "parameters": {
                                    "sdsStorageContainer": {
                                        "value": "@pipeline().parameters.sdsStorageContainer",
                                        "type": "Expression"
                                    },
                                    "sdsStorageFolder": {
                                        "value": "@{pipeline().parameters.sdsStorageFolder}/incoming/demographics",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "If Demographics",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "LookupDemographicsExist",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@contains(activity('LookupDemographicsExist').output, 'firstRow')",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "createDemographicsCsv",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "createDemographicsCsv",
                                            "type": "DataFlowReference",
                                            "parameters": {},
                                            "datasetParameters": {
                                                "sourceDemographicsJson": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/incoming/demographics"
                                                },
                                                "sinkSdsDemographicsCsv": {
                                                    "sdsStorageContainer": "@pipeline().parameters.sdsStorageContainer",
                                                    "sdsStorageFolder": "@{pipeline().parameters.sdsStorageFolder}/outgoing"
                                                }
                                            }
                                        },
                                        "staging": {},
                                        "integrationRuntime": {
                                            "referenceName": "IRSDSOR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "traceLevel": "Fine"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "createClassesCSV",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "createCoursescsv",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "createClassesCsv",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "sourceClasses": {
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        },
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/incoming/classes",
                                            "type": "Expression"
                                        }
                                    },
                                    "sourceClassGroups": {
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/incoming/classGroups",
                                            "type": "Expression"
                                        },
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        }
                                    },
                                    "sinkSdsClassesCsv": {
                                        "sdsStorageContainer": {
                                            "value": "@pipeline().parameters.sdsStorageContainer",
                                            "type": "Expression"
                                        },
                                        "sdsStorageFolder": {
                                            "value": "@{pipeline().parameters.sdsStorageFolder}/outgoing",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "integrationRuntime": {
                                "referenceName": "IRSDSOR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "LookuprefCodes",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "createAcademicSessionscsv",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "SDS_refCode_csv",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "FilterAcademicSubject",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "LookuprefCodes",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LookuprefCodes').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().refTypeName,'AcademicSubject')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEachRedcodes",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "FilterAcademicSubject",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('FilterAcademicSubject').output.Value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Append variable1",
                                    "type": "AppendVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "RefId",
                                        "value": {
                                            "value": "@item().Id",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "sdsStorageFolder": {
                        "type": "string"
                    },
                    "sdsStorageContainer": {
                        "type": "string"
                    }
                },
                "variables": {
                    "RefId": {
                        "type": "Array"
                    }
                },
                "folder": {
                    "name": "OR_to_SDS/Sub Pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-22T09:23:37Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/createCoursesCsv')]",
                "[concat(variables('factoryId'), '/integrationRuntimes/IRSDSOR')]",
                "[concat(variables('factoryId'), '/dataflows/createEnrollmentsCsv')]",
                "[concat(variables('factoryId'), '/dataflows/createRelationshipsCsv')]",
                "[concat(variables('factoryId'), '/dataflows/createAcademicSessionsCsv')]",
                "[concat(variables('factoryId'), '/datasets/OR_demographics_json')]",
                "[concat(variables('factoryId'), '/dataflows/createClassesCsv')]",
                "[concat(variables('factoryId'), '/datasets/SDS_refCode_csv')]",
                "[concat(variables('factoryId'), '/dataflows/createDemographicsCsv')]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/default/',parameters('Keyvault name'))]",
            "type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
            "apiVersion": "2018-06-01",
            "properties": {
                "privateLinkResourceId": "[variables('Keyvault_properties_privateLinkResourceId')]",
                "groupId": "[variables('Keyvault_properties_groupId')]",
                "fqdns": ["[variables('Keyvault_properties_fqdns')]"]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/managedVirtualNetworks/default')]",
                "[resourceId('Microsoft.DataFactory/factories', parameters('Data Factory Name'))]"
            ]
        },
        {
            "name": "[concat(parameters('Data Factory Name'), '/default/',parameters('Storage account name'))]",
            "type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
            "apiVersion": "2018-06-01",
            "properties": {
                "privateLinkResourceId": "[variables('StorageAccount_properties_privateLinkResourceId')]",
                "groupId": "[variables('StorageAccount_properties_groupId')]",
                "fqdns": ["[variables('StorageAccount_properties_fqdns')]"]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/managedVirtualNetworks/default')]",
                "[resourceId('Microsoft.DataFactory/factories', parameters('Data Factory Name'))]"
            ]
        },
        {
            "name": "[parameters('Data Factory Name')]",
            "type": "Microsoft.DataFactory/factories",
            "apiVersion": "2018-06-01",
            "properties": {
                "globalParameters": {
                    "oneRosterClientId": {
                        "type": "string",
                        "value": "[parameters('OneRoster ClientId value')]"
                    },
                    "oneRosterClientSecretKeyVaultUrl": {
                        "type": "string",
                        "value": "[parameters('OneRoster Client Secret Keyvault URL value')]"
                    },
                    "oneRosterBaseURL": {
                        "type": "string",
                        "value": "[parameters('OneRoster Base URL value')]"
                    },
                    "entraAppClientId": {
                        "type": "string",
                        "value": "[parameters('Entra App ClientId value')]"
                    },
                    "oneRosterOAuthTokenUrl": {
                        "type": "string",
                        "value": "[parameters('OneRoster OAuth Token Url value')]"
                    },
                    "validationErrorThreshold": {
                        "type": "int",
                        "value": "[parameters('Validation Error Threshold value')]"
                    },
                    "reportRecipientEmails": {
                        "type": "string",
                        "value": "[parameters('Report Recipient Emails value')]"
                    },
                    "checkForEmptyFilesBeforeSending": {
                        "type": "bool",
                        "value": "[parameters('Check for Empty files before sending value')]"
                    },
                    "limit": {
                        "type": "string",
                        "value": "[parameters('Limit value')]"
                    },
                    "tenantid": {
                        "type": "string",
                        "value": "[parameters('Tenant id value')]"
                    },
                    "userPrincipalName": {
                        "type": "string",
                        "value": "[parameters('User Principal Name value')]"
                    },
                    "ClientSecretForSdsApiKeyVaultUrl": {
                        "type": "string",
                        "value": "[parameters('Client Secret for SDS Api Keyvault Url value')]"
                    },
                    "sdsInboundFlowId": {
                        "type": "string",
                        "value": "[parameters('SDS Inbound Flow Id value')]"
                    },
                    "useFamilyAndGivenNames": {
                        "type": "bool",
                        "value": "[parameters('Use family and given names value')]"
                    },
                    "staffSourceIdentifier": {
                        "type": "string",
                        "value": "[parameters('Staff source identifier value')]"
                    },
                    "staffMatchTarget": {
                        "type": "string",
                        "value": "[parameters('Staff match target value')]"
                    },
                    "staffDomainAddon": {
                        "type": "string",
                        "value": "[parameters('Staff Domain Addon value')]"
                    },
                    "studentSourceIdentifier": {
                        "type": "string",
                        "value": "[parameters('Student source identifier value')]"
                    },
                    "studentMatchTarget": {
                        "type": "string",
                        "value": "[parameters('Student match target value')]"
                    },
                    "studentDomainAddon": {
                        "type": "string",
                        "value": "[parameters('Student Domain Addon value')]"
                    },
                    "yearStartDate": {
                        "type": "string",
                        "value": "[parameters('Year Start Date value')]"
                    },
                    "yearEndDate": {
                        "type": "string",
                        "value": "[parameters('Year End Date value')]"
                    },
                    "expirationDateTime": {
                        "type": "string",
                        "value": "[parameters('Expiration Date Time value')]"
                    },
                    "subscriptionId": {
                        "type": "string",
                        "value": "[parameters('Subscription Id value')]"
                    }
                }
            },
            "dependsOn": [],
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "[parameters('Data Factory identity type')]",
                "principalId": "",
                "tenantId": ""
            }
        }
    ]
}